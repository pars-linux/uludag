<comar-om>
<namespace name='COMAR'>





<acl/><description/>




<description/><description/>









<object name='Network'>
	<description>Network altsistemi, temel görev olarak veri iletimi işlevi gören cihazların yapılandırılması işlevlerini ve bunlar üzerinde kullnulabilir durumda olan network protokollerinin düzenlenmesini üstlenir. Ayrıca network üzerindeki diğer hostlara erişimin sağlanması ve erişim denetimi de bu altsistemin kapsamına girer.</description>




















<object name='ConnPoint'>
	<description>Bağlantıyı sağlayan cihaz, uygulama, protokol ve benzeri bileşenleri kapsar. Bir Connection Point en yalın hali ile ethernet, modem gibi network cihazlarıdır. Diğer yandan veri aktarımı işlebi sadece fiziksel yapıları değil, tünel cihazları gibi sanal aygıtları da kapsadığından, tipik interface kavramı genişletilerek nesne modeline taşınmıştır.

Bilgi alışverişini gerçekleştiren PHY bileşenleri ve taşınan bilginin OSI Layer 1 ve 2 protokol karşılığına tekabül eden bir NIC bileşeni bir araya gelerek, bir Connection Point oluştururlar. Bu NIC bileşeni üst seviyede işler için bir NSAP olarak işlev görür. X.200 tanımları tam kapsamlı Network ve Open System bağlantısını tarif ederken, ÇOMAR OM kapsamı bu sahadaki mevcut yapılandırma ihtiyaçlarını tarif etmek üzere modellenmiştir. Bu nedenle ISO-IEC-7498 belirtimleri birebir OM ile örtüşmezler. Buna karşın aşina olunan terimlerin herkes tarafından rahat anlaşılırlığını sağlamak amacıya isimlendirmelerde X.200 ve IEEE 802 terimlerine sadık kalınması bir gereksinim olarak belirlenmiştir. </description>




















<acl/><object name='PHY'>
	<description>X.200 (ISO-IEC-7498-[1,2,3]) Tariflerinde yeralan PhSAP (Physical Service-Access-Point) ve DLSAP (Data-Link Service-Access-Point) kavramlarına uygun olarak, fiziksel ortam (Physical Media, PMA) nağlantısını sağlayan düzeneklerdir. Fiziksel ortamla bağlantıyı temsil eden sanal (FR, Tunnel) ve/veya fiziksel cihazlar (Ethernet, PSTN v.b.) ile Network altsistemi arasındaki bağlantıları tarif eder. PHY bileşenleri PMA ve MAC işlevlerini üstlenirler. Haritalama yönünden, fiziksel cihazların üzerinde birden fazla PHY tarif edilebilir. Bazı durumlarda da bir fiziksel cihaz üzerinde birden fazla PHY eşzamanlı çalışabilir.</description>
























































































































































































<acl/><method name='New'>
	<description>PHY nesnesinin yeni ve boş bir instance&apos;ını oluşturup geri döndürür.
Doğrudan kullanılmaz, daha önceden alınmış bir NIC nesnesi içerisinden kullanılır..</description>
</method>
<method name='RegisterSelf'>
	<description>Yeni PHY nesnesinin OM&apos;a register edilmesi için cağrılır.</description>
</method>
<property name='Provider'>
	<description>PHY nesnesini sunan belirticiyi döndürür..
Bu, NIC nesnelerinin bağlı olduğu PHY&apos;leri handle etmesini kolaylaştırır.</description>
</property>
<property name='Identifier'>
	<description>PHY nesnesinin sistem çapında yegane olan tanımlayıcısını döndürür.</description>
</property>
<property name='Name'>
	<description>PHY nesnesinin sistem çapında yegane olan ismini döndürür.</description>
</property>
<property name='LinkDevice'>
	<description>PHY nesnesinin low level cihazının descriptor&apos;ını döndürür.</description>
<acl/></property>
<property name='AvailLinkDevices'>
	<description>PHY nesnesi için kullanılabilir olan cihazların descriptor&apos;larını ihtiva eden bir array döndürür.</description>
</property>
<property name='GoOnlineCmd'>
	<description>DialUp ve benzeri bağlantılarda, karşı sistemin online olabilmesi için ekstra komut verilmesi gerekebilir,
bu durumda karşıya yollanacak olan komut bu property ile tanımlanabilir.</description>
</property>
<property name='GoOnlinePrompts'>
	<description>DialUp ve benzeri bağlantılarda, karşı sistemin online olabilmesi için ekstra komut verilmesi gerekebilir,
bu durumda karşıdan beklenecek prompt bu property ile belirlenebilir.</description>
</property>
<property name='RemoteAccessType'>
	<description>Connect işlevi için sertifika/login methodlarından hangisinin kullanılacağı bilgisi..

NONE			: Auth. yok
INTERACTIVE		: RemoteLogin* değerleri ile
NONINTERACTIVE 	: RemoteAuth* değerleri ile
AUTO			: Otomatik seçim.</description>
</property>
<property name='LocalAuth'>
	<description>LISTEN modu için gerekli olan COMARauth nesnesini donurur..</description>
</property>
<property name='MACAddress'>
	<description>PHY&apos;nin varsa MAC adresini ifade eder..</description>
</property>
<property name='MACisChangable'>
	<description>PHY için MAC adresinin değiştirilebilir olup olmadığı bilgisini tutar..

ON		: Değiştirilebilir
BUSY		: Kullanımda olduğundan dolayı değiştirilemez.

Diğer durumlar değiştirilemez olduğu anlamına gelir.

Değiiştirme MACAddress property&apos;si üzerinden gerçekleştirilebilir..</description>
</property>
<property name='setLinkUpEvent'>
	<description>Fiziksel bağlantı başlatılınca işletilebilecek bir ÇOMAR event&apos;i set edilebilmesini sağlar..</description>
</property>
<property name='setLinkDownEvent'>
	<description>Fiziksel abağlantı sonlanınca işletilebilecek bir ÇOMAR event&apos;i set edilebilmesini sağlar.</description>
</property>
<property name='totalUpTime'>
	<description>PHY oluşturulduğundan bu yana geçen süreyi saniye cinsinden tutar.</description>
</property>
<property name='RXSpeedInfo'>
	<description>Kullanılabilir bağlantı hızlarını belirten bir array döndürür.. Array elemanları şu şekildedir:

&quot;model&quot; =  [ LINEER | STEPPED | LOGICAL]

eğer LINEER ise, array&apos;ın ihtiva ettiği değerler aşağıdakiler olacaktır:

min	: minimum hız
max	: maximum hız
step	: artış değeri

eğer STEPPED ise, &quot;speeds&quot; adlı yeni bir array ile kullanılabilir hız değerleri gösterilir.. foreach ile array_min() array_max() fonksiyonları kullanılabilir..

eğer LOGICAL ise, bağlantı tünel benzeri bir mantıksal yapı üzerinden gerçekleştirildiğinden hız değerleri anlamsızdır.

hız değerleri cihazın fiziksel bağlantı hızını bits per sec cinsinden ifade eder.</description>
</property>
<property name='TXSpeedInfo'>
	<description>Kullanılabilir bağlantı hızlarını belirten bir array döndürür.. Array elemanları şu şekildedir:

&quot;model&quot; =  [ LINEER | STEPPED | LOGICAL]

eğer LINEER ise, array&apos;ın ihtiva ettiği değerler aşağıdakiler olacaktır:

min     : minimum hız
max     : maximum hız
step    : artış değeri

eğer STEPPED ise, &quot;speeds&quot; adlı yeni bir array ile kullanılabilir hız değerleri gösterilir.. foreach ile array_min() array_max() fonksiyonları kullanılabilir..

eğer LOGICAL ise, bağlantı tünel benzeri bir mantıksal yapı üzerinden gerçekleştirildiğinden hız değerleri anlamsızdır.

hız değerleri cihazın fiziksel bağlantı hızını bits per sec cinsinden ifade eder.</description>
</property>
<property name='RXSpeed'>
	<description>Fiziksel bağlantının giriş hızını tutar/tespit eder.</description>
<acl/></property>
<property name='TXSpeed'>
	<description>Fiziksel bağlantının çıkış hızını tutar/tespit eder. </description>
</property>
<property name='FlowMode'>
	<description>Bağlantının akış modelini ifade eder..

HALFDUPLEX	: Bir anda sadece tek yönde akış mümkün.
FULLDUPLEX	: Bir anda çift yönde akış mümkün.</description>
</property>
<property name='RXBytes'>
	<description>Geçerli oturumda bu fiziksel cihaz tarafından içeri işlenmiş byte miktarını verir.</description>
</property>
<property name='TXBytes'>
	<description>Geçerli oturumda bu fiziksel cihaz tarafından dışarı gönderilmiş byte miktarını verir.</description>
</property>
<property name='RXTreshold'>
	<description/>
</property>
<property name='setRXTresholdEvent'>
	<description>0&apos;dan farklı bir RXTreshold kadar byte işlenince bir seferliğine işletilecek bir COMAR event&apos;ı set edilir</description>
</property>
<property name='getRXTresholdEvent'>
	<description>-varsa- set edilmiş RXTresholdEvent&apos;ını gösterir</description>
</property>
<property name='TXTreshold'>
	<description/>
</property>
<property name='setTXTresholdEvent'>
	<description>0&apos;dan farklı bir RXTreshold kadar byte gönderilince işletilecek bir COMAR event&apos;ı set edilir</description>
</property>
<property name='getTXTresholdEvent'>
	<description>-varsa- set edilmiş TXTreshold&apos;ını gösterir</description>
</property>
<property name='LinkStatus'>
	<description>Bağlantının mevcut durumunu gösterir..

UP	: up, up
DOWN	: down da down işte.</description>
</property>
<property name='MediaStatus'>
	<description>Bağlantıyı sağlayan fiziksel katmanın durumunu belirtir..

ONLINE	: Bağlı..
READY	: Bağlantı için hazır..
FAULT	: Cihaz bağlı değil, power-off durumunda vs.</description>
</property>
<property name='LinkType'>
	<description>Bağlantı türünü belirtir..

PTP	: Point-to-Pint
PTMP	: Point-to-Multi-Point</description>
</property>
<property name='MediaType'>
	<description>Bağlantının ortam türünü belirtir..</description>
</property>
<property name='securityLevel'>
	<description>COMAR&apos;ın güvenlik belirtimlerine uygun olarak bağlantının fiziksel seviyedeki güvenlik seviyesini ifade eder..</description>
</property>
<property name='getExtraProperties'>
	<description>ÇOMAR Property Definition kurallarına uygun olarak cihazın kabul ettiği ekstra property&apos;leri bir array olarak döndürür.</description>
</property>
<property name='setExtraProperties'>
	<description>ÇOMAR Property Definition kurallarına uygun olarak cihazın kabul ettiği ekstra property&apos;lerinden birisini değiştirmek için kullanılır.

setExtraProperty(property = &quot;prop_name&quot;, value=&quot;prop_value&quot;) şeklinde..</description>
</property>
<property name='EDCTypeInfo'>
	<description>PHY&apos;nin kullanabileceği hata kontrol ve düzeltme mekanizmalarını listeler.

NONE
EVEN-PARITY
ODD-PARITY
CRC16
CRC32
</description>
</property>
<property name='EDCTypes'>
	<description>PHY&apos;nin kullandığı hata kontrol ve düzeltme mekanizmalarını gösterir.</description>
</property>
<property name='MTU'>
	<description>PHY&apos;nin bir defada maximum kaç byte yollayabileceğini belirler.</description>
</property>
<property name='remoteAddress'>
	<description>Karşı tarafın adresini değerini tutar.</description>
</property>
<property name='remoteAddressType'>
	<description>Karşı tarafın adres türünü belirler. Sadece PTP bağlantılarda anlamlıdır.</description>
<acl/></property>
<property name='operMode'>
	<description>PHY&apos;nin operational modunu belirler..

CONNECT
LISTEN
CONNECTBACK
CONNECTFORWARD
ONLINE
</description>
</property>
<property name='totalRXBytes'>
	<description>PHY oluşturulduğundan bu yana alınan veri miktarını byte cinsinden tutar.</description>
</property>
<property name='totalTXBytes'>
	<description>PHY oluşturulduğundan bu yana gönderilen veri miktarını byte cinsinden tutar.</description>
<acl/></property>
<property name='clearStatistics'>
	<description>tüm istatistik değerlerini sıfırlamak için kullanılır.</description>
<acl/></property>
<method name='getFromId'><inputs><parameter name='identifier'/></inputs><acl/><description></description></method>
<method name='getFromLinkDev'><inputs><parameter name='device'/></inputs><acl/><description></description></method>

</object>

<object name='NIC'>
	<description>Bu bileşen ise PHY üzerinden veri taşınabilmesi amacuyla belirlenen protokoller için SAP görevini yerine getirir. Her zaman bir PHY üzerinde yer alırlar. Bazı cihazlar PHY ve NIC bileşenlerini birlikte sunabilirler. Bir NIC bileşeni her zaman tek bir PHY üzerinde yer alır, bir PHY de her zaman tek bir NIC ile bağlanır.</description>




























































































<method name='dstAddress'>
	<description>Karşı ucun adresi. PTP end-point (hostAddrObjet)</description>
</method>
<method name='broadcastAddress'>
	<description>Karşı ucun adresi. P-t-P Endpoint (hostAddrObject)</description>
</method>
<method name='addUnicastAddress'>
	<description>NIC&apos;e yeni bir adres kaydı ekler. (address = hostAddrObject)</description>
</method>
<method name='delUnicastAddress'>
	<description>NIC&apos;teki adres kayıtlarından belirtileni kaldırır.
(address = hostAddrObject)</description>
</method>
<method name='RemoteLogin'>
	<description>Cihazın bağlantı esnasında kullanması için generic bir COMARAuth nesnesi döndürür.</description>
</method>
<property name='Identifier'>
	<description>NIC&apos;in tanımlayıcısını saklar.</description>
</property>
<property name='Provider'>
	<description>NIC&apos;i neyin provide ettiğini saklar.</description>
</property>
<property name='PHY'>
	<description>NIC&apos;in üzerinde çalıştığı PHY nesnesidir.</description>
</property>
<property name='linkName'>
	<description>NIC&apos;in sunduğu network cihazının adını tutar.</description>
</property>
<property name='linkProto'>
	<description>
PPP	: PPP RFC
FR	: Frame Ralay
</description>
</property>
<property name='linkStatus'>
	<description>NIC durumu..

UP	: Cihaz Aktif
DOWN	: Cihaz Kapalı</description>
</property>
<property name='devType'>
	<description>NIC&apos;in cihaz durumu..

STDIO	- Cihaz STDIO üzerinden veri alır.
PIPE	- Cihaz bir PIPE dosyası üzerinden veri alışverişi yapar.
SKBDEV	- Cihaz bir native network cihazıdır.</description>
</property>
<property name='MTU'>
	<description>Maximum Transmit Unit.</description>
</property>
<property name='MRU'>
	<description>Maximum Recieve Unit.</description>
</property>
<property name='optimizedFor'>
	<description>NIC&apos;in kendini ve PHY cihazını neye göre ayarlayacağını belirler.

LATENCY			- Minimum Latency.
THROUGHPUT		- Maximum Throughput
RELIABILITY		- Minimum veri kaybı.
DEFAULT			- No optimizasyon.</description>
</property>
<property name='acceptedProtos'>
	<description>Cihaza uygulanabilecek protokolleri gösterir. Protokol isimleri IANA standardında belirtildiği gibidir. Uyum için versiyon ifade eden &quot;v&quot; harfi dışında tüm harfleri büyük yazılırlar.</description>
</property>
<property name='currentProtos'>
	<description>Cihzın üzerinde o anda geçerli olan protokollerdir. Protokol isimleri IANA standardında belirtildiği gibidir. Uyum için versiyon ifade eden &quot;v&quot; harfi dışında tüm harfleri büyük yazılırlar.</description>
<acl/></property>
<property name='ARPType'>
	<description>Cihazın kabul ettiği arp tiplerini gösterir. Bu property ile cihazın türü tespit edilmeye çalışılmamalıdır.

NONE 	- NO ARP Support
ULMA	- Universal LAN MAC Address (IEEE 802 Chap: 5.2)
ETHER 	- Ethernet address, same as ULMA.
DLCI	- Frame Relay DLCI Address
STRIP	- (Metricom Starmode IP)
ASH	- (Ash)
TR	- (16/4 Mbps Token Ring)
AX25 	- (AMPR AX.25)
NETROM	- (AMPR NET/ROM)
ROSE	- (AMPR ROSE)
ARCNET	- (ARCnet)
FDDI	- (Fiber Distributed Data Interface)
HIPPI 	- (HIPPI)
IRDA	- (IrLAP)
X25 	- (generic X.25)</description>
</property>
<property name='outgoingSpeed'>
	<description>Cihazın dışarıya giden hızını gösterir.</description>
</property>
<property name='incomingSpeed'>
	<description>Cihazın içeriye giren hızını gösterir.</description>
</property>
<property name='if_index'>
	<description>NIC&apos;in sunduğu cihazın interface numarasını verir.

if_index (Provided by kernel) + 1	- Cihazın kernel tarafından sunulan if_index değerinin bir fazlası (bkz &lt;net/if.h&gt; C header file)
0 					- Cihaz aktif değil.
</description>
</property>
<property name='if_flags'>
	<description>NIC&apos;in çeşitli özel değerlerini gösterir. Bu değerler aşağıdakilerden bir veya bir kaçı olabilir.

MULTICAST
ALLMULTI
BROADCAST
POINTTOPOINT
LBMASTER		- Load Balancer Master.
LBSLAVE			- Load Balancer Slave.
LOOPBACK
PROXYARP
TUNNEL</description>
</property>

</object>


</object>

<object name='NameTable'>
	<description/>








<acl/><description></description><object name='Networks'>
	<description/>
</object>

</object>


</object>

<object name='Boot'><acl/><description/>

<description/>

<method name='ConfigureDisplay'><inputs/><acl/></method>

</object>


</namespace>


</comar-om>