
Piksemel 1.0
============

Python XML API based on the iksemel library.
Copyright (C) 2005-2006 TUBITAK/UEKAE

This program is free software; you can redistribute it and/or modify it
under the terms of the GNU General Public License as published by the
Free Software Foundation; either version 2 of the License, or (at your
option) any later version. Please read the COPYING file.


Install:
--------

You dont need anything other than an installed Python framework.
iksemel-lite source is included and compiled built-in to the module.

To compile and install:
# ./setup.py install

then you can import the piksemel module in your python programs.


Documentation:
--------------

===> Module Constants:

* TAG
* ATTRIBUTE
* DATA

These enumeration constants are used to report the type of the Node objects.

===> Module Exceptions

* ParseError

Raised when given string or file contains invalid XML.

* NotTag

Raised when a function accepting a tag node got another type of object.

* NotData

Raised when a function accepting a data node got another type of object.

===> Module Functions:

* parse(filename)

Parses the given XML file, and returns the top level tag's node object.

* parseString(string)

Parses the given XML string and returns the top level tag's node object.

* newDocument(tagname)

Creates a new top level tag node object with given tag name.

===> Module Objects:

* Node

This object represents a node of the XML document tree.

===> Node Object Methods:

* type()

Returns the type of the node.

* data()

Returns character data for data nodes.

* name()

Returns the name of the tag for tag nodes.

* getAttribute(attributename)

Returns the value of the given attribute for tag nodes. If such
an attribute doesn't exists, returns None.

* getTag(tagname)

Returns the first tag node child with the given name. If such a child
doesn't exists, returns None.

* getTagData(tagname)

Returns the contained character data from first tag node child with the
given name.

* tags(tagname=None)

Iterates over child tag nodes. If optional tagname is given, only
iterates over tags with the given name.

* firstChild()

Returns the first child node.

* parent()

Returns the parent node.

* root()

Returns the top level node.

* next()

Returns the next node. If this is the last sibling, returns None.

* nextTag(tagname=None)

Returns the next tag node. If optional tagname is given, returns the
next sibling tag node with the given name. Returns None if this is
the last such sibling.

* previous()

Returns the previous node. If this is the first sibling, returns None.

* previousTag(tagname=None)

Returns the previous tag node. If optional tagname is given, returns
the previous sibling tag node with the given name. Returns None if
this is the first such sibling.

* insertTag(tagname)                   !!!!!!!!!!!!!!1
* insertData(data)
* insertNode(node)
* appendTag(tagname)
* appendData(data)
* appendNode(node)
* prependTag(tagname)
* prependData(data)
* prependNode(node)
* setAttribute(attributename, value)
* hide()

* toString()
* toPrettyString()


Examples:
---------

* Parsing a file


* Creating a document


* Modifying a document
