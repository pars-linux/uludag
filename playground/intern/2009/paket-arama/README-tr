PAKET ARAMA SİSTEMİ BELGELENDİRMESİ

paket-arama, web üzerinden kararlı depo paket içeriklerini ve paket isimlerini aramaya imkan tanıyan bir projedir ve iki kısımdan oluşur:
	
	0) Çiftlik Kısmı (src dizini)
	1) Web Kısmı (search dizini)


0) Çiftlik Kısmı (src dizini)
=============================
	0.1) sqlgen.py
	------------------

    python sqlgen.py -r pardus-2008 -i /var/www/localhost/pardus-2008/pisi-index.xml.bz2 -o pardus-2008.sql.bz2
    python sqlgen.py -r contrib-2008 -i /var/www/localhost/contrib-2008/pisi-index.xml.bz2 -o contrib-2008.sql.bz2

	sqlgen.py dosyası verilen index içerisindeki her paket için inşa çiftliğinin pisi api'sini kullanarak kurulu olanların dosya listesini alır, bunları SQL ifadecikleri halinde bir SQL dosyasına yazar. Bellek taşmasını engellemek için bu yazma işlemi 'a' modunda her 50 pakette bir gerçekleştirilir. Dosyanın başına DROP VE CREATE TABLE ifadeleri, sonuna ise CREATE INDEX ifadesi eklenir.
	
	Oluşan [repo].sql dosyası bz2 biçeminde sıkıştırılır ve dağıtıma hazır gelir. Desteklenecek her sürüm için o sürümün inşa çiftliğinde bu betiğin düzenli olarak (veya her güncellendiğinde) çalıştırılması gerekir. İleriki sürümlerde Pisi API'sinde değişiklik olması durumunda elif version=='2009': kod şeklinde güncellemeye gidilebilir.
	
	
	0.2) importer.py
	------------------
	Oluşan bz2 dosyalarının alındığını varsayarak bunları ayrıştırıp mysql sunucusuna yükler. Dosyaların betikle aynı dizinde olması gerekir. Betik çok basit olup daha iyisi yazılabilir.


1) Web Kısmı (search dizini)
=============================
	Django 1.0 ile yazılmıştır. Çiftliklerde üretilen ve mysql'e yüklenen verileri kullanır. Sürüm sayısı sınırlı olduğundan her bir sürüm için (farklı tabloları kullanmak amacıyla) farklı model yazılmıştır: Pardus2007, Pardus2008, Contrib2008. Bunlar pardus_2007, pardus_2008 ve contrib_2008 tablolarını kullanırlar. Düzenli olarak çiftlikten gelen veriler bu tabloları DROP edip tekrar oluşturur. 
	
	Sunucuya kurulurken local_settings.py dosyası search dizini içerisine taşınmalı, gerekli DB, default_version ve absolute path ayarları yapılmalıdır. Bu sayede svn güncellemelerinde gelen kullanıcı adı ve parolalardan etkilenilmeyecektir.	
	http://packages.pardus.org.tr altına search dizini koyulur ve gerekli dosyalar http://paketler.pardus.org.tr altına linklenebilir. Kullanılan dili tarayıcıya bakarak belirler.


ÖZETLE YAPILMASI GEREKENLER
==============================

	Çiftliklerde
	===============
	İstenen sürüm çiftliklerinde düzenli olarak (veya her güncellemede) bz2 dosyalarının üretilmesi ve web sunucusunun bu dosyalara erişimi sağlanmalıdır.
	
	Sunucuya Kurarken
	===============
	1) Django kurulmalı veya projeyle aynı dizine konularak PythonPath'e eklenmeli.
	2) local_settings.py dosyası search dizini altına kopyalanmalı ve ihtiyaca göre düzenlenmeli.
	3) python manage.py syncdb ile veritabanında gerekli tablolar oluşturulmalı.
	4) Düzenli olarak çiftliklerden bz2 dosyalarını toplayan/sync eden bir betik yazılmalı(sha1sum kontrolü 
yapılabilir, henüz desteği yok) ve bu betik düzenli olarak çalıştırılmalı. Bu dosyalar aynı zamanda uygun bir zamanda MySQL'e yüklenmeli. Bu yükleme sürecinde bir bakım modu koyulabilir. En kötü ihtimalle sonuç bulunamadı çıktısı alınır. DROP TABLE IF EXISTS ve CREATE TABLE ard arda yapıldığı için tablo bulunamadı hatası alma olasılığı oldukça düşüktür.


YENİ PARDUS SÜRÜMÜ / DEPO ÇIKTIĞINDA YAPILACAKLAR
0) local_settings.py dosyasındaki versions listesine yeni depo adı eklenir. Gerekiyorsa default_version güncellenir.
1) pathsearch/models.py dosyasında diğer modellere benzer şekilde yeni bir model oluşturulur.
2) pathsearch/views.py dosyasında ENTRY(version) fonksiyonuna gerekli repoadı : modeladı çifti eklenir.
3) SQL Generator'ın yeni depo için çalışması ve sync olması sağlanır.
4) search dizini altında python manage.py syncdb komutu ile veritabanında sorun var mı denetlenir.
