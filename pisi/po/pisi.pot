# SOME DESCRIPTIVE TITLE.
# Copyright (C) YEAR ORGANIZATION
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2005-10-14 18:33+EEST\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=CHARSET\n"
"Content-Transfer-Encoding: ENCODING\n"
"Generated-By: pygettext.py 1.5\n"


#: pisi/__init__.py:20
#, docstring
msgid "Class of exceptions that lead to program termination"
msgstr ""

#: pisi/__init__.py:30
#, docstring
msgid "Class of exceptions that must be caught and handled within PISI"
msgstr ""

#: pisi/actionsapi/autotools.py:36
msgid ""
"Please attach the config.log to your bug report:\n"
"%s/config.log"
msgstr ""

#: pisi/actionsapi/autotools.py:57
#, docstring
msgid "configure source with given parameters = \"--with-nls --with-libusb --with-something-usefull\""
msgstr ""

#: pisi/actionsapi/autotools.py:75 pisi/actionsapi/autotools.py:85
#: pisi/actionsapi/kde.py:67 pisi/actionsapi/perlmodules.py:53
#: pisi/actionsapi/perlmodules.py:56
msgid "Configure failed."
msgstr ""

#: pisi/actionsapi/autotools.py:77 pisi/actionsapi/autotools.py:87
#: pisi/actionsapi/kde.py:69
msgid "No configure script found."
msgstr ""

#: pisi/actionsapi/autotools.py:80
#, docstring
msgid "configure source with given parameters = \"--prefix=/usr --libdir=/usr/lib --with-nls\""
msgstr ""

#: pisi/actionsapi/autotools.py:94 pisi/actionsapi/kde.py:72
#, docstring
msgid "make source with given parameters = \"all\" || \"doc\" etc."
msgstr ""

#: pisi/actionsapi/autotools.py:96 pisi/actionsapi/kde.py:74
#: pisi/actionsapi/perlmodules.py:62 pisi/actionsapi/perlmodules.py:71
#: pisi/actionsapi/pythonmodules.py:50 pisi/actionsapi/scons.py:40
msgid "Make failed."
msgstr ""

#: pisi/actionsapi/autotools.py:99
#, docstring
msgid "install source into install directory with given parameters"
msgstr ""

#: pisi/actionsapi/autotools.py:119 pisi/actionsapi/autotools.py:127
#: pisi/actionsapi/kde.py:81 pisi/actionsapi/pythonmodules.py:55
#: pisi/actionsapi/scons.py:44
msgid "Install failed."
msgstr ""

#: pisi/actionsapi/autotools.py:121 pisi/actionsapi/autotools.py:129
#: pisi/actionsapi/kde.py:83
msgid "No Makefile found."
msgstr ""

#: pisi/actionsapi/autotools.py:124
#, docstring
msgid "install source into install directory with given parameters = PREFIX=%s % get.installDIR()"
msgstr ""

#: pisi/actionsapi/autotools.py:132
#, docstring
msgid "generates an aclocal.m4 based on the contents of configure.in."
msgstr ""

#: pisi/actionsapi/autotools.py:134
msgid "Running aclocal failed."
msgstr ""

#: pisi/actionsapi/autotools.py:137
#, docstring
msgid "generates a configure script"
msgstr ""

#: pisi/actionsapi/autotools.py:139 pisi/actionsapi/autotools.py:144
msgid "Running autoconf failed."
msgstr ""

#: pisi/actionsapi/autotools.py:142
#, docstring
msgid "re-generates a configure script"
msgstr ""

#: pisi/actionsapi/autotools.py:147
#, docstring
msgid "generates a makefile"
msgstr ""

#: pisi/actionsapi/autotools.py:149
msgid "Running automake failed."
msgstr ""

#: pisi/actionsapi/autotools.py:152
#, docstring
msgid "generates templates for configure"
msgstr ""

#: pisi/actionsapi/autotools.py:154
msgid "Running autoheader failed."
msgstr ""

#: pisi/actionsapi/coreutils.py:29
#, docstring
msgid "keep only lines that match the regexp"
msgstr ""

#: pisi/actionsapi/coreutils.py:36
#, docstring
msgid "apply arbitrary transform to each sequence element"
msgstr ""

#: pisi/actionsapi/coreutils.py:43
#, docstring
msgid "print sequence elements one per line"
msgstr ""

#: pisi/actionsapi/get.py:38
#, docstring
msgid "returns current work directory's path"
msgstr ""

#: pisi/actionsapi/get.py:42
#, docstring
msgid "returns currently running kernel's version"
msgstr ""

#: pisi/actionsapi/get.py:47
#, docstring
msgid "returns any given environ variable"
msgstr ""

#: pisi/actionsapi/get.py:53 pisi/actionsapi/get.py:61
#, docstring
msgid "returns the path of binary packages"
msgstr ""

#: pisi/actionsapi/get.py:152
msgid "Util %s cannot be found"
msgstr ""

#: pisi/actionsapi/get.py:154
msgid "Warning: %s does not exist, using plain name %s"
msgstr ""

#: pisi/actionsapi/kde.py:35
msgid ""
"\n"
"!!! Please attach the config.log to your bug report:\n"
"%s/config.log"
msgstr ""

#: pisi/actionsapi/kde.py:50
#, docstring
msgid " parameters = '--with-nls --with-libusb --with-something-usefull "
msgstr ""

#: pisi/actionsapi/libtools.py:39
msgid "Running ldconfig failed."
msgstr ""

#: pisi/actionsapi/libtools.py:42
#, docstring
msgid " copy newest config.* onto source's "
msgstr ""

#: pisi/actionsapi/libtools.py:47
msgid "GNU Config Update Finished."
msgstr ""

#: pisi/actionsapi/libtools.py:51
msgid "Running libtoolize failed."
msgstr ""

#: pisi/actionsapi/perlmodules.py:49
#, docstring
msgid "configure source with given parameters."
msgstr ""

#: pisi/actionsapi/perlmodules.py:59
#, docstring
msgid "make source with given parameters."
msgstr ""

#: pisi/actionsapi/perlmodules.py:65
msgid "perl build failed."
msgstr ""

#: pisi/actionsapi/perlmodules.py:68
#, docstring
msgid "install source with given parameters."
msgstr ""

#: pisi/actionsapi/perlmodules.py:74
msgid "perl install failed."
msgstr ""

#: pisi/actionsapi/pisitools.py:37
#, docstring
msgid "insert a executable file into /bin or /usr/bin"
msgstr ""

#: pisi/actionsapi/pisitools.py:43
#, docstring
msgid "creates a directory tree"
msgstr ""

#: pisi/actionsapi/pisitools.py:47
#, docstring
msgid "inserts the files in the list of files into /usr/share/doc/PACKAGE"
msgstr ""

#: pisi/actionsapi/pisitools.py:51
#, docstring
msgid "insert a executable file into destination directory"
msgstr ""

#: pisi/actionsapi/pisitools.py:57
#, docstring
msgid "creates hard link between sourceFile and destinationFile"
msgstr ""

#: pisi/actionsapi/pisitools.py:62
#, docstring
msgid "inserts the files in the list of files into /usr/share/doc/PACKAGE/html"
msgstr ""

#: pisi/actionsapi/pisitools.py:85
#, docstring
msgid "inserts the into files in the list of files into /usr/share/info"
msgstr ""

#: pisi/actionsapi/pisitools.py:89
#, docstring
msgid "insert the library into /usr/lib"
msgstr ""

#: pisi/actionsapi/pisitools.py:99
#, docstring
msgid "insert the static library into /usr/lib with permission 0644"
msgstr ""

#: pisi/actionsapi/pisitools.py:108
#, docstring
msgid "insert the static library into /usr/lib with permission 0755"
msgstr ""

#: pisi/actionsapi/pisitools.py:117
#, docstring
msgid "inserts the man pages in the list of files into /usr/share/man/"
msgstr ""

#: pisi/actionsapi/pisitools.py:130
msgid "ActionsAPI [doman]: Wrong man page file: %s"
msgstr ""

#: pisi/actionsapi/pisitools.py:136
#, docstring
msgid "inserts the mo files in the list of files into /usr/share/locale/LOCALE/LC_MESSAGES"
msgstr ""

#: pisi/actionsapi/pisitools.py:145
#, docstring
msgid "moves sourceFile/Directory into destinationFile/Directory"
msgstr ""

#: pisi/actionsapi/pisitools.py:158
#, docstring
msgid " renames sourceFile as destinationFile"
msgstr ""

#: pisi/actionsapi/pisitools.py:168
msgid "ActionsAPI [rename]: No such file or directory: %s"
msgstr ""

#: pisi/actionsapi/pisitools.py:171
#, docstring
msgid "replaces patterns in sourceFiles"
msgstr ""

#: pisi/actionsapi/pisitools.py:185
msgid "File does not exist or permission denied: %s"
msgstr ""

#: pisi/actionsapi/pisitools.py:188
#, docstring
msgid "insert a executable file into /sbin or /usr/sbin"
msgstr ""

#: pisi/actionsapi/pisitools.py:194
#, docstring
msgid "creates soft link between sourceFile and destinationFile"
msgstr ""

#: pisi/actionsapi/pisitools.py:202
msgid "ActionsAPI [dosym]: File exists: %s"
msgstr ""

#: pisi/actionsapi/pisitools.py:205
#, docstring
msgid "insert a sourceFile into destinationDirectory as a destinationFile with same uid/guid/permissions"
msgstr ""

#: pisi/actionsapi/pisitools.py:216
#, docstring
msgid "inserts a sourceFile into /usr/share/doc/PACKAGE/ directory as a destinationFile"
msgstr ""

#: pisi/actionsapi/pisitools.py:225
#, docstring
msgid "inserts a sourceFile into /usr/share/man/manPREFIX/ directory as a destinationFile"
msgstr ""

#: pisi/actionsapi/pisitools.py:230
#, docstring
msgid "removes sourceFile"
msgstr ""

#: pisi/actionsapi/pisitools.py:235
#, docstring
msgid "removes destinationDirectory and its subtrees"
msgstr ""

#: pisi/actionsapi/pisitoolsfunctions.py:43
#, docstring
msgid "insert a executable file into destinationDirectory"
msgstr ""

#: pisi/actionsapi/pisitoolsfunctions.py:46
#: pisi/actionsapi/pisitoolsfunctions.py:59
#: pisi/actionsapi/pisitoolsfunctions.py:72
msgid "Insufficient arguments."
msgstr ""

#: pisi/actionsapi/pisitoolsfunctions.py:56
#, docstring
msgid "inserts file list into destinationDirectory"
msgstr ""

#: pisi/actionsapi/pisitoolsfunctions.py:69
#, docstring
msgid "inserts a library fileinto destinationDirectory with given permission"
msgstr ""

#: pisi/actionsapi/pythonmodules.py:48
#, docstring
msgid "compile source with given parameters."
msgstr ""

#: pisi/actionsapi/pythonmodules.py:53
#, docstring
msgid "does python setup.py install"
msgstr ""

#: pisi/actionsapi/pythonmodules.py:65
#, docstring
msgid "executes parameters with python"
msgstr ""

#: pisi/actionsapi/pythonmodules.py:67
msgid "Running %s failed."
msgstr ""

#: pisi/actionsapi/shelltools.py:34
#, docstring
msgid "test the existence of file"
msgstr ""

#: pisi/actionsapi/shelltools.py:38
#, docstring
msgid "test readability, writability and executablility of directory"
msgstr ""

#: pisi/actionsapi/shelltools.py:42
#, docstring
msgid "recursive directory creation function"
msgstr ""

#: pisi/actionsapi/shelltools.py:47
msgid "Cannot create directory %s"
msgstr ""

#: pisi/actionsapi/shelltools.py:55
msgid "ActionsAPI [echo]: Can't append to file %s."
msgstr ""

#: pisi/actionsapi/shelltools.py:58
#, docstring
msgid "change the mode of sourceFile to the mode"
msgstr ""

#: pisi/actionsapi/shelltools.py:64
msgid "ActionsAPI [chmod]: Operation not permitted: %s (mode: %s)"
msgstr ""

#: pisi/actionsapi/shelltools.py:67
msgid "ActionsAPI [chmod]: File %s doesn't exists."
msgstr ""

#: pisi/actionsapi/shelltools.py:70
#, docstring
msgid "change the owner and group id of sourceFile to uid and gid"
msgstr ""

#: pisi/actionsapi/shelltools.py:75
msgid "ActionsAPI [chown]: Operation not permitted: %s (uid: %s, gid: %s)"
msgstr ""

#: pisi/actionsapi/shelltools.py:78
msgid "ActionsAPI [chown]: File %s doesn't exists."
msgstr ""

#: pisi/actionsapi/shelltools.py:81
#, docstring
msgid "creates symbolic link"
msgstr ""

#: pisi/actionsapi/shelltools.py:85
msgid "ActionsAPI [sym]: Permission denied: %s to %s"
msgstr ""

#: pisi/actionsapi/shelltools.py:88
#, docstring
msgid "remove the file path"
msgstr ""

#: pisi/actionsapi/shelltools.py:93
msgid "ActionsAPI [unlink]: Permission denied: %s."
msgstr ""

#: pisi/actionsapi/shelltools.py:97
msgid "ActionsAPI [unlink]: File %s doesn't exists."
msgstr ""

#: pisi/actionsapi/shelltools.py:100
#, docstring
msgid "delete an entire directory tree"
msgstr ""

#: pisi/actionsapi/shelltools.py:105
msgid "ActionsAPI [unlinkDir]: Operation not permitted: %s"
msgstr ""

#: pisi/actionsapi/shelltools.py:109
msgid "ActionsAPI [unlinkDir]: Directory %s doesn't exists."
msgstr ""

#: pisi/actionsapi/shelltools.py:112
#, docstring
msgid "recursively move a sourceFile or directory to destinationFile"
msgstr ""

#: pisi/actionsapi/shelltools.py:118
msgid "ActionsAPI [move]: Permission denied: %s to %s"
msgstr ""

#: pisi/actionsapi/shelltools.py:120
msgid "ActionsAPI [move]: File %s doesn't exists."
msgstr ""

#: pisi/actionsapi/shelltools.py:123
#, docstring
msgid "recursively copy a sourceFile or directory to destinationFile"
msgstr ""

#: pisi/actionsapi/shelltools.py:129
msgid "ActionsAPI [copy]: Permission denied: %s to %s"
msgstr ""

#: pisi/actionsapi/shelltools.py:133
msgid "ActionsAPI [copy]: File %s does not exist."
msgstr ""

#: pisi/actionsapi/shelltools.py:136
#, docstring
msgid "recursively copy an entire directory tree rooted at source"
msgstr ""

#: pisi/actionsapi/shelltools.py:141
msgid "ActionsAPI [copytree]: Permission denied: %s to %s"
msgstr ""

#: pisi/actionsapi/shelltools.py:143
msgid "ActionsAPI [copytree]: Directory %s doesn't exists."
msgstr ""

#: pisi/actionsapi/shelltools.py:146
#, docstring
msgid "changes the access time of the 'sourceFile', or creates it if it is not exist"
msgstr ""

#: pisi/actionsapi/shelltools.py:155
msgid "ActionsAPI [touch]: Permission denied: %s"
msgstr ""

#: pisi/actionsapi/shelltools.py:158
#, docstring
msgid "change directory"
msgstr ""

#: pisi/actionsapi/shelltools.py:166
#, docstring
msgid "listdir"
msgstr ""

#: pisi/actionsapi/shelltools.py:173
#, docstring
msgid "export environ variable"
msgstr ""

#: pisi/actionsapi/shelltools.py:177
#, docstring
msgid "return True if sourceFile refers to a symbolic link"
msgstr ""

#: pisi/actionsapi/shelltools.py:181
#, docstring
msgid "return True if sourceFile is an existing regular file"
msgstr ""

#: pisi/actionsapi/shelltools.py:185
#, docstring
msgid "Return True if sourceFile is an existing directory"
msgstr ""

#: pisi/actionsapi/shelltools.py:189
#, docstring
msgid "return the canonical path of the specified filename, eliminating any symbolic links encountered in the path"
msgstr ""

#: pisi/actionsapi/shelltools.py:193
#, docstring
msgid "return the base name of pathname sourceFile"
msgstr ""

#: pisi/actionsapi/shelltools.py:197
#, docstring
msgid "return the directory name of pathname path"
msgstr ""

#: pisi/actionsapi/shelltools.py:203
msgid "executing %s"
msgstr ""

#: pisi/actionsapi/variables.py:23
#, docstring
msgid "General flags used in actions API."
msgstr ""

#: pisi/actionsapi/variables.py:34
#, docstring
msgid "General environment variables used in actions API"
msgstr ""

#: pisi/actionsapi/variables.py:62
#, docstring
msgid "General directories used in actions API."
msgstr ""

#: pisi/api.py:15
#, docstring
msgid "Top level PISI interfaces. a facade to the entire PISI system"
msgstr ""

#: pisi/api.py:46
#, docstring
msgid "Initialize PiSi subsystem"
msgstr ""

#: pisi/api.py:74
#, docstring
msgid "install a list of packages (either files/urls, or names)"
msgstr ""

#: pisi/api.py:88
msgid "Package is not installable."
msgstr ""

#: pisi/api.py:93
#, docstring
msgid "install a number of pisi package files"
msgstr ""

#: pisi/api.py:100
msgid "Mixing file names and package names not supported YET."
msgstr ""

#: pisi/api.py:155 pisi/api.py:204
msgid "No packages to install."
msgstr ""

#: pisi/api.py:186
msgid "Installation order: "
msgstr ""

#: pisi/api.py:190
msgid "External dependencies not satisfied"
msgstr ""

#: pisi/api.py:195
#, docstring
msgid ""
"This is the real thing. It installs packages from\n"
"    the repository, trying to perform a minimum number of\n"
"    installs"
msgstr ""

#: pisi/api.py:236
msgid "The following minimal list of packages will be installed in the respective order to satisfy dependencies: "
msgstr ""

#: pisi/api.py:248
#, docstring
msgid ""
"Construct a package relations graph, containing\n"
"    all dependencies of packages A, if ignore_installed\n"
"    option is True, then only uninstalled deps will\n"
"    be added."
msgstr ""

#: pisi/api.py:285
#, docstring
msgid ""
"Re-installs packages from the repository, trying to perform\n"
"    a maximum number of upgrades."
msgstr ""

#: pisi/api.py:295
msgid "Warning: package *name* ends with '.pisi'"
msgstr ""

#: pisi/api.py:297
msgid "Package %s is not installed."
msgstr ""

#: pisi/api.py:315
msgid "Package %s is already at its latest version %s, release %s, build %s."
msgstr ""

#: pisi/api.py:321
msgid "No packages to upgrade."
msgstr ""

#: pisi/api.py:365
msgid "The following packages will be upgraded: "
msgstr ""

#: pisi/api.py:397
#, docstring
msgid "remove set A of packages from system (A is a list of package names)"
msgstr ""

#: pisi/api.py:406
msgid "Package %s does not exist. Cannot remove."
msgstr ""

#: pisi/api.py:410
msgid "No packages to remove."
msgstr ""

#: pisi/api.py:442
msgid ""
"The following minimal list of packages will be removed \\ \n"
"in the respective order to satisfy dependencies: "
msgstr ""

#: pisi/api.py:452
msgid "Package %s is not installed. Cannot remove."
msgstr ""

#: pisi/api.py:484 pisi/comariface.py:34
msgid "COMAR: comard not fully installed"
msgstr ""

#: pisi/api.py:497
msgid "File %s not found"
msgstr ""

#: pisi/api.py:504
#, docstring
msgid "fetch package information for a package"
msgstr ""

#: pisi/api.py:519
msgid "Package %s not found"
msgstr ""

#: pisi/api.py:523
msgid "* Building index of PISI files under %s"
msgstr ""

#: pisi/api.py:527
msgid "* Index file written"
msgstr ""

#: pisi/api.py:538
msgid "* Repository %s does not exist. Cannot remove."
msgstr ""

#: pisi/api.py:543
msgid "* Updating repository: %s"
msgstr ""

#: pisi/api.py:547
msgid ""
"\n"
"* Package database updated."
msgstr ""

#: pisi/archive.py:34
#, docstring
msgid "Base class for Archive classes."
msgstr ""

#: pisi/archive.py:49
#, docstring
msgid ""
"ArchiveBinary handles binary archive files (usually distrubuted as\n"
"    .bin files)"
msgstr ""

#: pisi/archive.py:65
#, docstring
msgid ""
"ArchiveTar handles tar archives depending on the compression\n"
"    type. Provides access to tar, tar.gz and tar.bz2 files. \n"
"\n"
"    This class provides the unpack magic for tar archives."
msgstr ""

#: pisi/archive.py:73
#, docstring
msgid "Unpack tar archive to a given target directory(target_dir)."
msgstr ""

#: pisi/archive.py:84
msgid "Archive type not recognized"
msgstr ""

#: pisi/archive.py:96
#, docstring
msgid ""
"ArchiveZip handles zip archives. \n"
"\n"
"    Being a zip archive PISI packages also use this class\n"
"    extensively. This class provides unpacking and packing magic for\n"
"    zip archives."
msgstr ""

#: pisi/archive.py:110
#, docstring
msgid "Close the zip archive."
msgstr ""

#: pisi/archive.py:114
#, docstring
msgid "Add file or directory path to the zip file"
msgstr ""

#: pisi/archive.py:133
#, docstring
msgid ""
"Add only the basepath to the zip file. For example; if the given\n"
"        file_name parameter is /usr/local/bin/somedir, this function\n"
"        will create only the base directory/file somedir in the\n"
"        archive."
msgstr ""

#: pisi/archive.py:146
#, docstring
msgid ""
"Unpack/Extract a file according to predicate function filename ->\n"
"        bool"
msgstr ""

#: pisi/archive.py:214
#, docstring
msgid ""
"Archive is the main factory for ArchiveClasses, regarding the\n"
"    Abstract Factory Pattern :)."
msgstr ""

#: pisi/archive.py:218
#, docstring
msgid ""
"accepted archive types:\n"
"        targz, tarbz2, zip, tar"
msgstr ""

#: pisi/build.py:40
#, docstring
msgid ""
"Return the file type of a path according to the given PathInfo\n"
"    list"
msgstr ""

#: pisi/build.py:59
#, docstring
msgid ""
"This function will check for collision of paths in a package with\n"
"    the paths of packages in pkgList. The return value will be the\n"
"    list containing the paths that collide."
msgstr ""

#: pisi/build.py:75
msgid "Path %s belongs in multiple packages"
msgstr ""

#: pisi/build.py:84
#, docstring
msgid "Build Context Singleton"
msgstr ""

#: pisi/build.py:104
#, docstring
msgid "package build directory"
msgstr ""

#: pisi/build.py:119
#, docstring
msgid "Provides the package build and creation routines"
msgstr ""

#: pisi/build.py:143
#, docstring
msgid "Build the package in one shot."
msgstr ""

#: pisi/build.py:145
msgid "Building PISI source package: %s"
msgstr ""

#: pisi/build.py:146
msgid ""
"Building PISI source package: %s\n"
msgstr ""

#: pisi/build.py:169
#, docstring
msgid "Sets the environment variables for actions API to use"
msgstr ""

#: pisi/build.py:181
msgid "Fetching source from: %s"
msgstr ""

#: pisi/build.py:183
msgid "Source archive is stored: %s/%s"
msgstr ""

#: pisi/build.py:187
msgid "Unpacking archive..."
msgstr ""

#: pisi/build.py:189
msgid " unpacked (%s)"
msgstr ""

#: pisi/build.py:194
msgid "Setting up source..."
msgstr ""

#: pisi/build.py:199
msgid "Building source..."
msgstr ""

#: pisi/build.py:204
msgid "Installing..."
msgstr ""

#: pisi/build.py:215
#, docstring
msgid "Compiles actions.py and sets the actionLocals and actionGlobals"
msgstr ""

#: pisi/build.py:223
msgid "Unable to read Action Script (%s): %s"
msgstr ""

#: pisi/build.py:225
msgid "SyntaxError in Action Script (%s): %s"
msgstr ""

#: pisi/build.py:232
#, docstring
msgid "Returns the real path of WorkDir for an unpacked archive."
msgstr ""

#: pisi/build.py:241
#, docstring
msgid ""
"Calls the corresponding function in actions.py. \n"
"\n"
"        If mandatory parameter is True, and function is not present in\n"
"        actionLocals pisi.build.Error will be raised."
msgstr ""

#: pisi/build.py:255
msgid "unable to call function from actions: %s"
msgstr ""

#: pisi/build.py:260
#, docstring
msgid "fail if dependencies not satisfied"
msgstr ""

#: pisi/build.py:271
msgid "Unsatisfied Build Dependencies:"
msgstr ""

#: pisi/build.py:276
msgid "Cannot build package due to unsatisfied build dependencies"
msgstr ""

#: pisi/build.py:279
#, docstring
msgid "check existence of patch files declared in PSPEC"
msgstr ""

#: pisi/build.py:286
msgid ""
"Patch file is missing: %s\n"
msgstr ""

#: pisi/build.py:299
msgid "* Applying patch: %s"
msgstr ""

#: pisi/build.py:303
#, docstring
msgid "strip install directory"
msgstr ""

#: pisi/build.py:304
msgid "Stripping files.."
msgstr ""

#: pisi/build.py:313
#, docstring
msgid ""
"Generate the metadata.xml file for build source.\n"
"\n"
"        metadata.xml is composed of the information from specfile plus\n"
"        some additional information."
msgstr ""

#: pisi/build.py:334
msgid "build number is not available."
msgstr ""

#: pisi/build.py:343
#, docstring
msgid ""
"Generetes files.xml using the path definitions in specfile and\n"
"        generated files by the build system."
msgstr ""

#: pisi/build.py:372
#, docstring
msgid "Calculate build number"
msgstr ""

#: pisi/build.py:375
#, docstring
msgid "did we find the filename we were looking for?"
msgstr ""

#: pisi/build.py:428
msgid "(found old version %s)"
msgstr ""

#: pisi/build.py:432
msgid "Skipping %s with wrong pkg name "
msgstr ""

#: pisi/build.py:439
msgid "(no previous build found, setting build no to 0.)"
msgstr ""

#: pisi/build.py:476
msgid "(old package lacks a build no, setting build no to 0.)"
msgstr ""

#: pisi/build.py:479
msgid "There are changes, incrementing build no to %d"
msgstr ""

#: pisi/build.py:482
msgid "There is no change from previous build %d "
msgstr ""

#: pisi/build.py:486
#, docstring
msgid ""
"Build each package defined in PSPEC file. After this process there\n"
"        will be .pisi files hanging around, AS INTENDED ;)"
msgstr ""

#: pisi/build.py:512
msgid "** Building package %s"
msgstr ""

#: pisi/build.py:514 pisi/build.py:517
msgid "Generating %s,"
msgstr ""

#: pisi/build.py:520
msgid "Creating PISI package %s."
msgstr ""

#: pisi/build.py:548
msgid "Done."
msgstr ""

#: pisi/cli/__init__.py:46
#, docstring
msgid "Command Line Interface"
msgstr ""

#: pisi/cli/__init__.py:76
msgid "Warning: "
msgstr ""

#: pisi/cli/__init__.py:82
msgid "Error: "
msgstr ""

#: pisi/cli/__init__.py:110
msgid "(yes/no)"
msgstr ""

#: pisi/cli/colors.py:60
#, docstring
msgid "Colorize the given message for console output"
msgstr ""

#: pisi/cli/commands.py:31
#, docstring
msgid "generic help string for any command"
msgstr ""

#: pisi/cli/commands.py:53
msgid "Unrecognized command: "
msgstr ""

#: pisi/cli/commands.py:74
#, docstring
msgid "common options"
msgstr ""

#: pisi/cli/commands.py:77
msgid "change the system root for pisi commands"
msgstr ""

#: pisi/cli/commands.py:79
msgid "assume yes in all yes/no queries"
msgstr ""

#: pisi/cli/commands.py:83
msgid "get password from the command line"
msgstr ""

#: pisi/cli/commands.py:86
msgid "detailed output"
msgstr ""

#: pisi/cli/commands.py:88
msgid "show debugging information"
msgstr ""

#: pisi/cli/commands.py:93
msgid "print like a man"
msgstr ""

#: pisi/cli/commands.py:97
#, docstring
msgid ""
"This is a fall back function. If the implementer module provides an\n"
"        options function it will be called"
msgstr ""

#: pisi/cli/commands.py:109 pisi/config.py:58
msgid "Destination directory %s does not exist"
msgstr ""

#: pisi/cli/commands.py:131
msgid "Password: "
msgstr ""

#: pisi/cli/commands.py:137
#, docstring
msgid "initialize PiSi components"
msgstr ""

#: pisi/cli/commands.py:145
#, docstring
msgid "do cleanup work for PiSi components"
msgstr ""

#: pisi/cli/commands.py:159
#, docstring
msgid "print help for the command"
msgstr ""

#: pisi/cli/commands.py:166
#, docstring
msgid "exit program"
msgstr ""

#: pisi/cli/commands.py:168
msgid "Command terminated abnormally."
msgstr ""

#: pisi/cli/commands.py:178
msgid "Command lacks name"
msgstr ""

#: pisi/cli/commands.py:182
msgid "Duplicate command %s"
msgstr ""

#: pisi/cli/commands.py:191
#, docstring
msgid ""
"Prints help for given commands.\n"
"\n"
"Usage: help [ <command1> <command2> ... <commandn> ]\n"
"\n"
"If run without parameters, it prints the general help."
msgstr ""

#: pisi/cli/commands.py:224
#, docstring
msgid "Clean stale locks."
msgstr ""

#: pisi/cli/commands.py:240
#, docstring
msgid "Delete cache files"
msgstr ""

#: pisi/cli/commands.py:255
#, docstring
msgid ""
"Graph package relations.\n"
"Usage: graph <package1> <package2> ...\n"
"\n"
"Write a graph of package relations, tracking dependency and\n"
"conflicts relations starting from given packages.\n"
msgstr ""

#: pisi/cli/commands.py:281
msgid "do not take build no into account."
msgstr ""

#: pisi/cli/commands.py:287
msgid "do not take dependency information into account"
msgstr ""

#: pisi/cli/commands.py:291
#, docstring
msgid ""
"Build a PISI package using a pspec.xml file\n"
"\n"
"Usage: build <pspec.xml>\n"
"\n"
"You can give a URI of the pspec.xml file. PISI will\n"
"fetch all necessary files and build the package for you.\n"
msgstr ""

#: pisi/cli/commands.py:309
msgid "output directory for produced packages"
msgstr ""

#: pisi/cli/commands.py:312
msgid "bypass errors from ActionsAPI"
msgstr ""

#: pisi/cli/commands.py:328
#, docstring
msgid "Abstract package operation command"
msgstr ""

#: pisi/cli/commands.py:337
msgid "bypass comar configuration agent"
msgstr ""

#: pisi/cli/commands.py:349
#, docstring
msgid ""
"Install PISI packages\n"
"\n"
"Usage: install <package1> <package2> ... <packagen>\n"
"\n"
"You may use filenames, URIs or package names for packages. If you have\n"
"specified a package name, it should exist in a specified repository.\n"
msgstr ""

#: pisi/cli/commands.py:378
#, docstring
msgid ""
"Upgrade PISI packages\n"
"\n"
"Usage: Upgrade <package1> <package2> ... <packagen>\n"
"\n"
"You may use only package names to specify packages because\n"
"the package upgrade operation is defined only with respect \n"
"to repositories. If you have specified a package name, it\n"
"should exist in the package repositories. If you just want to\n"
"reinstall a package from a pisi file, use the install command."
msgstr ""

#: pisi/cli/commands.py:410
#, docstring
msgid ""
"Remove PISI packages\n"
"\n"
"Usage: remove <package1> <package2> ... <packagen>\n"
"\n"
"Remove package(s) from your system. Just give the package names to remove.\n"
msgstr ""

#: pisi/cli/commands.py:434
#, docstring
msgid ""
"Upgrade system\n"
"\n"
"Usage: Upgrade\n"
"\n"
"Upgrade the entire system.\n"
msgstr ""

#: pisi/cli/commands.py:462
#, docstring
msgid ""
"configure pending packages\n"
"    "
msgstr ""

#: pisi/cli/commands.py:480
#, docstring
msgid ""
"Display package information\n"
"\n"
"Usage: info <package1> <package2> ... <packagen>\n"
"\n"
msgstr ""

#: pisi/cli/commands.py:495
msgid "show a list of package files."
msgstr ""

#: pisi/cli/commands.py:498
msgid "Show only paths."
msgstr ""

#: pisi/cli/commands.py:517
msgid ""
"\n"
"Files:"
msgstr ""

#: pisi/cli/commands.py:524
msgid "File information not available"
msgstr ""

#: pisi/cli/commands.py:528
#, docstring
msgid ""
"Index PISI files in a given directory\n"
"\n"
"Usage: index <directory>\n"
"\n"
"This command searches for all PiSi files in a directory, collects PiSi\n"
"tags from them and accumulates the information in an output XML file,\n"
"named by default 'pisi-index.xml'. In particular, it indexes both\n"
"source and binary packages.\n"
msgstr ""

#: pisi/cli/commands.py:547
msgid "store absolute links for indexed files."
msgstr ""

#: pisi/cli/commands.py:556
msgid "Indexing current directory."
msgstr ""

#: pisi/cli/commands.py:559
msgid "Indexing only a single directory supported."
msgstr ""

#: pisi/cli/commands.py:565
#, docstring
msgid ""
"Print the list of all installed packages  \n"
"\n"
"Usage: list-installed\n"
"\n"
msgstr ""

#: pisi/cli/commands.py:589 pisi/cli/commands.py:788
msgid "Package Name     |St|   Version|  Rel.| Build|  Distro|             Date"
msgstr ""

#: pisi/cli/commands.py:605
#, docstring
msgid ""
"Update repository databases\n"
"\n"
"Usage: update-repo <repo1> <repo2> ... <repon>\n"
"\n"
"<repoi>: repository name\n"
"Synchronizes the PiSi databases with the current repository.\n"
"If no repositories are given, all repositories are updated.\n"
msgstr ""

#: pisi/cli/commands.py:634
#, docstring
msgid ""
"Add a repository\n"
"\n"
"Usage: add-repo <repo> <indexuri>\n"
"\n"
"<repo>: name of repository to add\n"
"<indexuri>: URI of index file\n"
"\n"
"NB: We support only local files (e.g., /a/b/c) and http:// URIs at the moment\n"
msgstr ""

#: pisi/cli/commands.py:664
#, docstring
msgid ""
"Remove repositories\n"
"\n"
"Usage: remove-repo <repo1> <repo2> ... <repon>\n"
"\n"
"Remove all repository information from the system.\n"
msgstr ""

#: pisi/cli/commands.py:690
#, docstring
msgid ""
"List repositories\n"
"\n"
"Usage: list-repo\n"
"\n"
"Lists currently tracked repositories.\n"
msgstr ""

#: pisi/cli/commands.py:713
#, docstring
msgid ""
"List available packages in the repositories\n"
"\n"
"Usage: list-available [ <repo1> <repo2> ... repon ]\n"
"\n"
"Gives a brief list of PiSi components published in the repository.\n"
msgstr ""

#: pisi/cli/commands.py:740
msgid ""
"Repository : %s\n"
msgstr ""

#: pisi/cli/commands.py:764
#, docstring
msgid ""
"List packages to be upgraded\n"
"\n"
"Usage: list-upgrades [ <repo1> <repo2> ... repon ]\n"
"\n"
msgstr ""

#: pisi/cli/commands.py:780
msgid "show detailed install info"
msgstr ""

#: pisi/cli/commands.py:804
#, docstring
msgid "List pending packages"
msgstr ""

#: pisi/cli/commands.py:825
#, docstring
msgid ""
"Search packages\n"
"\n"
"Usage: search <search pattern>\n"
"\n"
"#FIXME: fill this later\n"
msgstr ""

#: pisi/cli/commands.py:834
#, docstring
msgid ""
"Search for a file\n"
"\n"
"Usage: search-file <path1> <path2> ... <pathn>\n"
"\n"
"Finds the installed package which contains the specified file.\n"
msgstr ""

#: pisi/cli/commands.py:855
msgid "Package: %s"
msgstr ""

#: pisi/cli/commands.py:857
msgid "Type: %s, Hash: %s"
msgstr ""

#: pisi/cli/commands.py:860
msgid "Path %s does not belong to an installed package"
msgstr ""

#: pisi/cli/commands.py:873
msgid "Searching for %s"
msgstr ""

#: pisi/cli/commands.py:886
#, docstring
msgid ""
"Run the build process partially\n"
"\n"
"Usage: -sStateName build-until <pspec file>\n"
"\n"
"where states are:\n"
"unpack, setupaction, buildaction, installaction, buildpackages\n"
"\n"
"You can give an URI of the pspec.xml file. PISI will fetch all\n"
"necessary files and unpack the source and prepare a source directory\n"
"for you.\n"
msgstr ""

#: pisi/cli/commands.py:923
#, docstring
msgid ""
"Unpack the source archive\n"
"\n"
"Usage: build-unpack <pspec file>\n"
"\n"
"TODO: desc.\n"
msgstr ""

#: pisi/cli/commands.py:948
#, docstring
msgid ""
"Setup the source\n"
"\n"
"Usage: build-setup <pspec file>\n"
"\n"
"TODO: desc.\n"
msgstr ""

#: pisi/cli/commands.py:974 pisi/cli/commands.py:1025
#, docstring
msgid ""
"Setup the source\n"
"\n"
"Usage: build-build <pspec file>\n"
"\n"
"TODO: desc.\n"
msgstr ""

#: pisi/cli/commands.py:999
#, docstring
msgid ""
"Install to the sandbox\n"
"\n"
"Usage: build-install <pspec file>\n"
"\n"
"TODO: desc.\n"
msgstr ""

#: pisi/cli/commands.py:1049
msgid ""
"%prog [options] <command> [arguments]\n"
"\n"
"where <command> is one of:\n"
"\n"
msgstr ""

#: pisi/cli/commands.py:1055
msgid ""
"\n"
"Use \"%prog help <command>\" for help on a specific command.\n"
msgstr ""

#: pisi/cli/pisicli.py:31
#, docstring
msgid "consumes any options, and finds arguments from command line"
msgstr ""

#: pisi/cli/pisicli.py:90
msgid "No command given"
msgstr ""

#: pisi/cli/pisicli.py:94
msgid "Command line parsing error"
msgstr ""

#: pisi/cli/pisicli.py:99
msgid "Unrecognized command: %s"
msgstr ""

#: pisi/comariface.py:36
msgid "COMAR: comard not running or defunct"
msgstr ""

#: pisi/comariface.py:39
msgid "Registering COMAR script %s"
msgstr ""

#: pisi/comariface.py:49
msgid "COMAR.register ERROR!"
msgstr ""

#: pisi/comariface.py:53
#, docstring
msgid "run postinstall scripts trough COMAR"
msgstr ""

#: pisi/comariface.py:57
msgid "Running post-install script for %s"
msgstr ""

#: pisi/comariface.py:66
msgid "COMAR.call_package(System.Package.postInstall, %s) failed!: %s"
msgstr ""

#: pisi/comariface.py:70 pisi/comariface.py:91
msgid "COMAR.call_package ERROR: %d"
msgstr ""

#: pisi/comariface.py:78
msgid "Running pre-remove script for %s"
msgstr ""

#: pisi/comariface.py:87
msgid "COMAR.call_package(System.Package.preRemove, %s) failed!: %s"
msgstr ""

#: pisi/comariface.py:94
msgid "Unregistering COMAR scripts for %s"
msgstr ""

#: pisi/config.py:15
#, docstring
msgid ""
"\n"
"PISI Configuration module is used for gathering and providing\n"
"regular PISI configurations.\n"
msgstr ""

#: pisi/config.py:33
#, docstring
msgid "Config Singleton"
msgstr ""

#: pisi/configfile.py:51
#, docstring
msgid "Default values for [general] section"
msgstr ""

#: pisi/configfile.py:58
#, docstring
msgid "Default values for [build] section"
msgstr ""

#: pisi/configfile.py:65
#, docstring
msgid "Default values for [directories] section"
msgstr ""

#: pisi/configfile.py:76
#, docstring
msgid ""
"ConfigurationSection class defines a section in the configuration\n"
"    file, using defaults (above) as a fallback."
msgstr ""

#: pisi/configfile.py:88
msgid "No section by name '%s'"
msgstr ""

#: pisi/configfile.py:115
#, docstring
msgid "Parse and get configuration values from the configuration file"
msgstr ""

#: pisi/constants.py:26
#, docstring
msgid "Constant members implementation"
msgstr ""

#: pisi/constants.py:32
msgid "Can't rebind constant: %s"
msgstr ""

#: pisi/constants.py:38
msgid "Can't unbind constant: %s"
msgstr ""

#: pisi/constants.py:43
#, docstring
msgid "Pisi Constants Singleton"
msgstr ""

#: pisi/data.py:14
#, docstring
msgid "a placeholder for data types, might factor elsewhere later"
msgstr ""

#: pisi/data.py:32
#, docstring
msgid "part-of representation for component declarations"
msgstr ""

#: pisi/data.py:42
#, docstring
msgid "index representation for the component structure"
msgstr ""

#: pisi/dependency.py:14
#, docstring
msgid "dependency analyzer"
msgstr ""

#: pisi/dependency.py:55
msgid "Dependency should have a package string"
msgstr ""

#: pisi/dependency.py:59
#, docstring
msgid "determine if a package ver. satisfies given dependency spec"
msgstr ""

#: pisi/dependency.py:85
#, docstring
msgid "determine if a package in a dictionary satisfies given dependency spec"
msgstr ""

#: pisi/dependency.py:95 pisi/dependency.py:106
#, docstring
msgid ""
"determine if a package in *repository* satisfies given\n"
"dependency spec"
msgstr ""

#: pisi/dependency.py:119
msgid "Package %s does not satisfy dependency %s"
msgstr ""

#: pisi/dependency.py:129
#, docstring
msgid ""
"calculate if pkg is installable currently \n"
"    which means it has to satisfy both install and runtime dependencies"
msgstr ""

#: pisi/dependency.py:132
msgid "Package %s is not present in the package database"
msgstr ""

#: pisi/fetcher.py:51
#, docstring
msgid ""
"Fetcher can fetch a file from various sources using various\n"
"    protocols."
msgstr ""

#: pisi/fetcher.py:67
#, docstring
msgid "Return value: Fetched file's full path.."
msgstr ""

#: pisi/fetcher.py:70
msgid "Filename error"
msgstr ""

#: pisi/fetcher.py:73
msgid "Access denied to write to dest dir"
msgstr ""

#: pisi/fetcher.py:124
msgid "No such file or no permission to read"
msgstr ""

#: pisi/fetcher.py:147
msgid "Cannot fetch %s; value error: %s"
msgstr ""

#: pisi/fetcher.py:149 pisi/fetcher.py:151
msgid "Cannot fetch %s; %s"
msgstr ""

#: pisi/fetcher.py:153
msgid "Cannot fetch %s; (%s): %s"
msgstr ""

#: pisi/fetcher.py:178
#, docstring
msgid ""
" \n"
"    \"to override the urllib2 error: 'Error 206: Partial Content'\n"
"    this reponse from the HTTP server is already what we expected to get.\n"
"    Don't give up, resume downloading..\n"
"    "
msgstr ""

#: pisi/fetcher.py:189
msgid "Requested range not satisfiable"
msgstr ""

#: pisi/files.py:24
#, docstring
msgid "FileInfo holds the information for a File node/tag in files.xml"
msgstr ""

#: pisi/graph.py:37
#, docstring
msgid "return set of vertex descriptors"
msgstr ""

#: pisi/graph.py:41
#, docstring
msgid "return a list of edge descriptors"
msgstr ""

#: pisi/graph.py:49
#, docstring
msgid "convert a list of edges (u,v) to graph"
msgstr ""

#: pisi/graph.py:54
#, docstring
msgid "add vertex u, optionally with data"
msgstr ""

#: pisi/graph.py:63
#, docstring
msgid "add edge u -> v"
msgstr ""

#: pisi/index.py:15
#, docstring
msgid "PISI source/package index"
msgstr ""

#: pisi/index.py:40 pisi/specfile.py:389
#, docstring
msgid "Read PSPEC file"
msgstr ""

#: pisi/index.py:63
#, docstring
msgid "Write index file"
msgstr ""

#: pisi/index.py:75
msgid "Adding %s  to package index"
msgstr ""

#: pisi/index.py:101
msgid "Package %s: metadata corrupt"
msgstr ""

#: pisi/install.py:46
#, docstring
msgid "Installer class, provides install routines for pisi packages"
msgstr ""

#: pisi/install.py:49
#, docstring
msgid "initialize from a file name"
msgstr ""

#: pisi/install.py:57
#, docstring
msgid "entry point"
msgstr ""

#: pisi/install.py:58
msgid "Installing %s, version %s, release %s, build %s"
msgstr ""

#: pisi/install.py:77
#, docstring
msgid "check system requirements"
msgstr ""

#: pisi/install.py:92
msgid "Package conflicts %s"
msgstr ""

#: pisi/install.py:97
msgid "Dependencies for %s not satisfied"
msgstr ""

#: pisi/install.py:99
msgid "Package not installable"
msgstr ""

#: pisi/install.py:102
#, docstring
msgid "check reinstall, confirm action, and schedule reinstall"
msgstr ""

#: pisi/install.py:123
msgid "Re-install same version package?"
msgstr ""

#: pisi/install.py:124
msgid "Package re-install declined"
msgstr ""

#: pisi/install.py:130
msgid "Upgrading to new upstream version"
msgstr ""

#: pisi/install.py:133
msgid "Upgrading to new distribution release"
msgstr ""

#: pisi/install.py:137
msgid "Upgrading to new distribution build"
msgstr ""

#: pisi/install.py:143
msgid "Downgrade to old upstream version?"
msgstr ""

#: pisi/install.py:145
msgid "Downgrade to old distribution release?"
msgstr ""

#: pisi/install.py:147
msgid "Downgrade to old distribution build?"
msgstr ""

#: pisi/install.py:149
msgid "Package downgrade declined"
msgstr ""

#: pisi/install.py:157
#, docstring
msgid "unzip package in place"
msgstr ""

#: pisi/install.py:159
msgid "Extracting files"
msgstr ""

#: pisi/install.py:174
#, docstring
msgid ""
"put files.xml, metadata.xml, actions.py and COMAR scripts\n"
"        somewhere in the file system. We'll need these in future..."
msgstr ""

#: pisi/install.py:177
msgid "Storing %s, "
msgstr ""

#: pisi/install.py:180
msgid "Storing %s."
msgstr ""

#: pisi/install.py:187
msgid "Storing %s"
msgstr ""

#: pisi/install.py:191
#, docstring
msgid "register COMAR scripts"
msgstr ""

#: pisi/install.py:200
#, docstring
msgid "update databases"
msgstr ""

#: pisi/installdb.py:59
msgid "installed"
msgstr ""

#: pisi/installdb.py:59
msgid "installed-pending"
msgstr ""

#: pisi/installdb.py:60
msgid "purged"
msgstr ""

#: pisi/installdb.py:60
msgid "removed"
msgstr ""

#: pisi/installdb.py:63
msgid ""
"State: %s\n"
"Version: %s, Release: %s, Build: %s\n"
msgstr ""

#: pisi/installdb.py:68
msgid ""
"Distribution: %s, Install Time: %s\n"
msgstr ""

#: pisi/installdb.py:135
#, docstring
msgid "install package with specific version, release, build"
msgstr ""

#: pisi/installdb.py:138
msgid "Already installed"
msgstr ""

#: pisi/lockeddbshelve.py:32
#, docstring
msgid "A simple wrapper to implement locking for bsddb's dbshelf"
msgstr ""

#: pisi/lockeddbshelve.py:50
msgid "Flags should be one of 'r', 'w', 'c' or 'n' or use the bsddb.db.DB_* flags"
msgstr ""

#: pisi/lockeddbshelve.py:60
msgid "Another instance of PISI is running. Try later!"
msgstr ""

#: pisi/metadata.py:15
#, docstring
msgid ""
"\n"
"Metadata module provides access to metadata.xml. metadata.xml is\n"
"generated during the build process of a package and used in the\n"
"installation. Package repository also uses metadata.xml for building\n"
"a package index.\n"
msgstr ""

#: pisi/metadata.py:51
msgid "SourceInfo should have a Name"
msgstr ""

#: pisi/metadata.py:97
msgid "Some error in package metadata"
msgstr ""

#: pisi/metadata.py:104
#, docstring
msgid ""
"Package metadata. Metadata is composed of Specfile and various\n"
"    other information. A metadata has two parts, Source and Package."
msgstr ""

#: pisi/metadata.py:153
msgid "Metadata should have source"
msgstr ""

#: pisi/metadata.py:157
msgid "Metadata should have a package"
msgstr ""

#: pisi/operations.py:14
#, docstring
msgid "Package Operations: install/remove/upgrade"
msgstr ""

#: pisi/operations.py:48
msgid "Not removing non-file, non-link %s"
msgstr ""

#: pisi/operations.py:63
#, docstring
msgid "Remove a single package"
msgstr ""

#: pisi/operations.py:68
msgid "Removing package %s"
msgstr ""

#: pisi/operations.py:70
msgid "Trying to remove nonexistent package "
msgstr ""

#: pisi/operations.py:81
#, docstring
msgid "install a single package from URI or ID"
msgstr ""

#: pisi/operations.py:93
#, docstring
msgid "install a package file"
msgstr ""

#: pisi/operations.py:98
#, docstring
msgid "install a single package from ID"
msgstr ""

#: pisi/operations.py:113
msgid "Package URI: %s"
msgstr ""

#: pisi/operations.py:118
msgid "Package %s not found in any active repository."
msgstr ""

#: pisi/operations.py:127
#, docstring
msgid "perform an atomic package operation"
msgstr ""

#: pisi/package.py:36
#, docstring
msgid ""
"PISI Package Class provides access to a pisi package (.pisi\n"
"    file)."
msgstr ""

#: pisi/package.py:52 pisi/sourcearchive.py:60
msgid "%s [cached]"
msgstr ""

#: pisi/package.py:57
#, docstring
msgid "Add a file or directory to package"
msgstr ""

#: pisi/package.py:61
#, docstring
msgid "Close the package archive"
msgstr ""

#: pisi/package.py:65
#, docstring
msgid "Extract entire package contents to directory"
msgstr ""

#: pisi/package.py:69
#, docstring
msgid "Extract paths to outdir"
msgstr ""

#: pisi/package.py:73
#, docstring
msgid "Extract file with path to outdir"
msgstr ""

#: pisi/package.py:77
#, docstring
msgid ""
"Extract directory recursively, this function\n"
"        copies the directory archiveroot/dir to outdir"
msgstr ""

#: pisi/package.py:82
#, docstring
msgid ""
"Extract directory recursively, this function\n"
"        unpacks the *contents* of directory archiveroot/dir inside outdir\n"
"        this is the function used by the installer"
msgstr ""

#: pisi/package.py:88
#, docstring
msgid ""
"Extract PISI control files: metadata.xml, files.xml,\n"
"        action scripts, etc."
msgstr ""

#: pisi/package.py:103
msgid "MetaData format wrong"
msgstr ""

#: pisi/package.py:108
msgid "Invalid %s"
msgstr ""

#: pisi/packagedb.py:38
#, docstring
msgid ""
"PackageDB class provides an interface to the package database with\n"
"    a delegated dbshelve object"
msgstr ""

#: pisi/packagedb.py:48
msgid "Cannot lock PackageDB: %s"
msgstr ""

#: pisi/packagedb.py:132
msgid "get_package: package %s not found"
msgstr ""

#: pisi/repodb.py:44
#, docstring
msgid "RepoDB maps repo ids to repository information"
msgstr ""

#: pisi/repodb.py:80
msgid "Repository %s already exists"
msgstr ""

#: pisi/sourcearchive.py:36
#, docstring
msgid ""
"source archive. this is a class responsible for fetching\n"
"    and unpacking a source archive"
msgstr ""

#: pisi/sourcearchive.py:69
msgid "unpack: check_file_hash failed"
msgstr ""

#: pisi/sourcedb.py:14
#, docstring
msgid ""
"\n"
"package source database\n"
"interface for update/query to local package repository\n"
"we basically store everything in sourceinfo class\n"
"yes, we are cheap\n"
msgstr ""

#: pisi/sourcefetcher.py:87
msgid "Fetching %s"
msgstr ""

#: pisi/specfile.py:21
#, docstring
msgid ""
"\n"
"Specfile module is our handler for PSPEC files. PSPEC (PISI SPEC)\n"
"files are specification files for PISI source packages. This module\n"
"provides read and write access to PSPEC files.\n"
msgstr ""

#: pisi/specfile.py:86
msgid "AdditionalFile should have file name string"
msgstr ""

#: pisi/specfile.py:88
msgid "AdditionalFile should have a target attribute"
msgstr ""

#: pisi/specfile.py:125
msgid "Patch should have a filename string"
msgstr ""

#: pisi/specfile.py:186
msgid "Path tag should have a name string"
msgstr ""

#: pisi/specfile.py:208
msgid "COMAR provide should have something :)"
msgstr ""

#: pisi/specfile.py:217
#, docstring
msgid ""
"A structure to hold source information. Source information is\n"
"    located under <Source> tag in PSPEC file."
msgstr ""

#: pisi/specfile.py:276
msgid "Source archive URI and type should be given"
msgstr ""

#: pisi/specfile.py:278
msgid "Source archive should have a SHA1 sum"
msgstr ""

#: pisi/specfile.py:290
#, docstring
msgid ""
"A structure to hold package information. Package information is\n"
"    located under <Package> tag in PSPEC file. Opposite to Source each\n"
"    PSPEC file can have more than one Package tag."
msgstr ""

#: pisi/specfile.py:353
msgid "Package should have some files"
msgstr ""

#: pisi/specfile.py:365
msgid "Name: %s, version: %s, release: %s, build %s"
msgstr ""

#: pisi/specfile.py:367
msgid ""
"\n"
"Summary: "
msgstr ""

#: pisi/specfile.py:368
msgid ""
"\n"
"Description: "
msgstr ""

#: pisi/specfile.py:369
msgid ""
"\n"
"Component: "
msgstr ""

#: pisi/specfile.py:370
msgid ""
"\n"
"Provides: "
msgstr ""

#: pisi/specfile.py:383
#, docstring
msgid "A class for reading/writing from/to a PSPEC (PISI SPEC) file."
msgstr ""

#: pisi/specfile.py:425
msgid ""
"File '%s' has errors:\n"
"%s"
msgstr ""

#: pisi/specfile.py:428
#, docstring
msgid ""
"Override tags from Source in Packages. Some tags in Packages\n"
"        overrides the tags from Source. There is a more detailed\n"
"        description in documents."
msgstr ""

#: pisi/specfile.py:455
#, docstring
msgid ""
"Merge tags from Source in Packages. Some tags in Packages merged\n"
"        with the tags from Source. There is a more detailed\n"
"        description in documents."
msgstr ""

#: pisi/specfile.py:472
#, docstring
msgid "Return errors of the PSPEC file if there are any."
msgstr ""

#: pisi/specfile.py:478
msgid "There should be at least one Package section"
msgstr ""

#: pisi/specfile.py:482
msgid "Source needs some education in History :)"
msgstr ""

#: pisi/specfile.py:488
#, docstring
msgid "Write PSPEC file"
msgstr ""

#: pisi/specfilenew.py:15
#, docstring
msgid ""
"\n"
" Specfile module is our handler for PSPEC files. PSPEC (PISI SPEC)\n"
" files are specification files for PISI source packages. This module\n"
" provides read and write routines for PSPEC files.\n"
msgstr ""

#: pisi/ui.py:23
#, docstring
msgid "Abstract class for UI operations, derive from this."
msgstr ""

#: pisi/ui.py:52
#, docstring
msgid "give an informative message"
msgstr ""

#: pisi/ui.py:56
#, docstring
msgid "inform the user of an important event and wait for acknowledgement"
msgstr ""

#: pisi/ui.py:60
#, docstring
msgid "show debugging info"
msgstr ""

#: pisi/ui.py:65
#, docstring
msgid "warn the user"
msgstr ""

#: pisi/ui.py:69
#, docstring
msgid "inform a (possibly fatal) error"
msgstr ""

#: pisi/ui.py:73
#, docstring
msgid "uh?"
msgstr ""

#: pisi/ui.py:77
#, docstring
msgid "ask the user to choose from a list of alternatives"
msgstr ""

#: pisi/ui.py:81
#, docstring
msgid "ask a yes/no question"
msgstr ""

#: pisi/ui.py:85
#, docstring
msgid "display progress"
msgstr ""

#: pisi/uri.py:25
#, docstring
msgid ""
"URI class provides a URL parser and simplifies working with\n"
"    URLs."
msgstr ""

#: pisi/uri.py:78
msgid "setAuthInfo needs a tuple (user, pass)"
msgstr ""

#: pisi/util.py:66
msgid "%s section should have a '%s' tag"
msgstr ""

#: pisi/util.py:77
#, docstring
msgid "concatenate a list of lists"
msgstr ""

#: pisi/util.py:81
#, docstring
msgid "concatenate string reps of l's elements"
msgstr ""

#: pisi/util.py:85
#, docstring
msgid " split str with any of chars"
msgstr ""

#: pisi/util.py:92
#, docstring
msgid "check if all elements of a sequence are equal"
msgstr ""

#: pisi/util.py:103
#, docstring
msgid "check if sequence a is a prefix of sequence b"
msgstr ""

#: pisi/util.py:112
#, docstring
msgid "remove prefix a from sequence b"
msgstr ""

#: pisi/util.py:122
#, docstring
msgid "run command non-interactively and report return value and output"
msgstr ""

#: pisi/util.py:123
msgid "running "
msgstr ""

#: pisi/util.py:127
msgid "return value %s"
msgstr ""

#: pisi/util.py:130
msgid "Failed command: %s"
msgstr ""

#: pisi/util.py:134
#, docstring
msgid "sets message as a console window's title"
msgstr ""

#: pisi/util.py:147
#, docstring
msgid "resets console window's title"
msgstr ""

#: pisi/util.py:158
#, docstring
msgid ""
"split path into components and return as a list\n"
"    os.path.split doesn't do what I want like removing trailing /"
msgstr ""

#: pisi/util.py:167
#, docstring
msgid ""
"an improved version of os.path.commonprefix,\n"
"    returns a list of path components"
msgstr ""

#: pisi/util.py:179
#, docstring
msgid "find if path a is before b in the directory tree"
msgstr ""

#: pisi/util.py:183
#, docstring
msgid "remove path prefix a from b, finding the pathname rooted at a"
msgstr ""

#: pisi/util.py:191
#, docstring
msgid "determine if given @path is absolute"
msgstr ""

#: pisi/util.py:196
#, docstring
msgid "Join two or more pathname components, inserting '/' as needed"
msgstr ""

#: pisi/util.py:212
#, docstring
msgid "shorthand to check if a file exists"
msgstr ""

#: pisi/util.py:218
#, docstring
msgid ""
"check if directory exists, and create if it doesn't.\n"
"    works recursively"
msgstr ""

#: pisi/util.py:225
#, docstring
msgid "Remove all content of a directory (top)"
msgstr ""

#: pisi/util.py:231
#, docstring
msgid ""
" calculate the size of files under a dir\n"
"    based on the os module example"
msgstr ""

#: pisi/util.py:246
#, docstring
msgid "copy source file to destination file"
msgstr ""

#: pisi/util.py:252
#, docstring
msgid ""
"Generator function iterates over a toplevel path and returns the\n"
"    (filePath, sha1Hash) tuples for all files. If excludePrefixes list\n"
"    is given as a parameter, function will exclude the filePaths\n"
"    matching those prefixes. The removePrefix string parameter will be\n"
"    used to remove prefix from filePath while matching excludes, if\n"
"    given."
msgstr ""

#: pisi/util.py:318
#, docstring
msgid "copy source dir to destination dir recursively"
msgstr ""

#: pisi/util.py:322
#, docstring
msgid "Check the files integrity with a given hash"
msgstr ""

#: pisi/util.py:329
#, docstring
msgid "calculate sha1 hash of filename"
msgstr ""

#: pisi/util.py:338
msgid "Cannot calculate SHA1 hash of %s"
msgstr ""

#: pisi/util.py:341
#, docstring
msgid "calculate sha1 hash of given data"
msgstr ""

#: pisi/util.py:347
msgid "Cannot calculate SHA1 hash of given data"
msgstr ""

#: pisi/util.py:350
#, docstring
msgid ""
"uncompresses a file and returns the path of the uncompressed\n"
"    file"
msgstr ""

#: pisi/util.py:370
#, docstring
msgid "simple function to apply patches.."
msgstr ""

#: pisi/util.py:381
msgid "ERROR: patch (%s) failed: %s"
msgstr ""

#: pisi/util.py:406
#, docstring
msgid "strip a file"
msgstr ""

#: pisi/util.py:414
msgid "strip command failed for file '%s'!"
msgstr ""

#: pisi/util.py:432
#, docstring
msgid " returns free space of given directory's partition "
msgstr ""

#: pisi/util.py:441
msgid "Removing lock %s"
msgstr ""

#: pisi/xmlext.py:15
#, docstring
msgid ""
"\n"
" some helper functions for using minidom\n"
" function names are mixedCase for compatibility with minidom,\n"
" an old library\n"
msgstr ""

#: pisi/xmlext.py:28
#, docstring
msgid "named this way because the class if mostly used with an import *"
msgstr ""

#: pisi/xmlext.py:34
#, docstring
msgid "get named attribute from DOM node"
msgstr ""

#: pisi/xmlext.py:44
#, docstring
msgid "get the first child and expect it to be text!"
msgstr ""

#: pisi/xmlext.py:57
msgid "getNodeText: Expected text node, got something else!"
msgstr ""

#: pisi/xmlext.py:60
#, docstring
msgid "get the text of a child at the end of a tag path"
msgstr ""

#: pisi/xmlext.py:67
#, docstring
msgid "get only child elements"
msgstr ""

#: pisi/xmlext.py:71 pisi/xmlfile.py:620
#, docstring
msgid "returns the *first* matching node for given tag path."
msgstr ""

#: pisi/xmlext.py:95
#, docstring
msgid "retrieve all nodes that match a given tag path."
msgstr ""

#: pisi/xmlext.py:119
#, docstring
msgid ""
"create new child at the end of a tag chain starting from node\n"
"    no matter what"
msgstr ""

#: pisi/xmlext.py:128
#, docstring
msgid "add newnode at the end of a tag chain, smart one"
msgstr ""

#: pisi/xmlext.py:135
#, docstring
msgid "add a new node at the end of the tree"
msgstr ""

#: pisi/xmlfile.py:18
#, docstring
msgid ""
"\n"
" xmlfile is a helper module for accessing XML files using\n"
" xml.dom.minidom.\n"
"\n"
" XmlFile class further abstracts a dom object using the\n"
" high-level dom functions provided in xmlext module (and sorely lacking\n"
" in xml.dom :( )\n"
"\n"
" autoxml is a metaclass for automatic XML translation, using\n"
" a miniature type system. (w00t!) This is based on an excellent\n"
" high-level XML processing prototype that Gurer prepared.\n"
"\n"
" Method names are mixedCase for compatibility with minidom,\n"
" an old library. \n"
msgstr ""

#: pisi/xmlfile.py:68
#, docstring
msgid "Handles XML tags with localized text"
msgstr ""

#: pisi/xmlfile.py:80
msgid ""
"LocalText '%s' should have at least one '%s' tag\n"
msgstr ""

#: pisi/xmlfile.py:87
msgid ""
"'%s' language of tag '%s' should have some text data\n"
msgstr ""

#: pisi/xmlfile.py:126
#, docstring
msgid ""
"High-level automatic XML transformation interface for xmlfile.\n"
"    The idea is to declare a class for each XML tag. Inside the\n"
"    class the tags and attributes nested in the tag are further\n"
"    elaborated. A simple example follows:\n"
"\n"
"    class Employee:\n"
"         __metaclass__ = autoxml\n"
"         t_Name = [xmlfile.Text, xmlfile.mandatory]\n"
"         a_Type = [xmlfile.Integer, xmlfile.optional]\n"
"    \n"
"    This class defines a tag and an attribute nested in Employee \n"
"    class. Name is a string and type is an integer, called basic\n"
"    types.\n"
"    While the tag is mandatory, the attribute may be left out.\n"
"    \n"
"    Other basic types supported are: xmlfile.Float, xmlfile.Double\n"
"    and (not implemented yet): xmlfile.Binary\n"
"\n"
"    By default, the class name is taken as the corresponding tag,\n"
"    which may be overridden by defining a tag attribute. Thus, \n"
"    the same tag may also be written as:\n"
"\n"
"    class EmployeeXML:\n"
"        ...\n"
"        tag = 'Employee'\n"
"        ...\n"
"\n"
"    In addition to basic types, we allow for two kinds of complex\n"
"    types: class types and list types.\n"
"\n"
"    A declared class can be nested in another class as follows\n"
"\n"
"    class Position:\n"
"         __metaclass__ = autoxml\n"
"         t_Name = [xmlfile.Text, xmlfile.mandatory]\n"
"         t_Description = [xmlfile.Text, xmlfile.optional]\n"
"\n"
"    which we can add to our Employee class.\n"
"\n"
"    class Employee:\n"
"         __metaclass__ = autoxml\n"
"         t_Name = [xmlfile.Text, xmlfile.mandatory]\n"
"         a_Type = [xmlfile.Integer, xmlfile.optional]\n"
"         t_Position = [Position, xmlfile.mandatory]\n"
"\n"
"    Note some unfortunate redundancy here with Position; this is\n"
"    justified by the implementation (kidding). Still, you might\n"
"    want to assign a different name than the class name that\n"
"    goes in there, which may be fully qualified.\n"
"\n"
"    There is more! Suppose we want to define a company, with\n"
"    of course many employees.\n"
"\n"
"    class Company:\n"
"        __metaclass__ = autoxml\n"
"        t_Employees = [ [Employee], xmlfile.mandatory, 'Employee']\n"
"\n"
"    Logically, inside the Company/Employees tag, we will have several\n"
"    Employes tags, which are inserted to the Employees instance variable of\n"
"    Company in order of appearance.\n"
"\n"
"    The mandatory flag here asserts that at least one such record\n"
"    is to be found.\n"
"\n"
"    You see, it works like magic, when it works of course. All of it\n"
"    done without a single brain exploding.\n"
"        \n"
"    "
msgstr ""

#: pisi/xmlfile.py:196
#, docstring
msgid "entry point for metaclass code"
msgstr ""

#: pisi/xmlfile.py:263
#, docstring
msgid "generate readers and writers for an attribute member"
msgstr ""

#: pisi/xmlfile.py:277
#, docstring
msgid "generate helper funs for tag member of class"
msgstr ""

#: pisi/xmlfile.py:284
#, docstring
msgid "generate readers and writers for the tag"
msgstr ""

#: pisi/xmlfile.py:302
msgid "gen_tag: unrecognized tag type %s in spec"
msgstr ""

#: pisi/xmlfile.py:306
#, docstring
msgid ""
"generate a named component tag/attr. a decoration of\n"
"        anonymous functions that do not bind to variable names"
msgstr ""

#: pisi/xmlfile.py:314
#, docstring
msgid "initialize component"
msgstr ""

#: pisi/xmlfile.py:318
#, docstring
msgid "decode component from DOM node"
msgstr ""

#: pisi/xmlfile.py:322
#, docstring
msgid "encode self inside, possibly new, DOM node using xml"
msgstr ""

#: pisi/xmlfile.py:335
msgid "Mandatory variable %s not available"
msgstr ""

#: pisi/xmlfile.py:341
#, docstring
msgid "helper function to turn token name into mixed case"
msgstr ""

#: pisi/xmlfile.py:348
#, docstring
msgid "returns split of the tag path into last tag and the rest"
msgstr ""

#: pisi/xmlfile.py:356
#, docstring
msgid "decompose member specification"
msgstr ""

#: pisi/xmlfile.py:369
#, docstring
msgid ""
"Generate a tag or attribute with one of the basic\n"
"        types like integer. This has got to be pretty generic\n"
"        so that we can invoke it from the complex types such as Class\n"
"        and List. The readtext and writetext arguments achieve\n"
"        the DOM text access for this datatype."
msgstr ""

#: pisi/xmlfile.py:378
#, docstring
msgid "default value for all basic types is None"
msgstr ""

#: pisi/xmlfile.py:382
#, docstring
msgid "decode from DOM node, the value, watching the spec"
msgstr ""

#: pisi/xmlfile.py:390
msgid "Type mismatch: read text cannot be decoded"
msgstr ""

#: pisi/xmlfile.py:394
msgid "Mandatory token %s not available"
msgstr ""

#: pisi/xmlfile.py:398
#, docstring
msgid "encode given value inside DOM node"
msgstr ""

#: pisi/xmlfile.py:404 pisi/xmlfile.py:435 pisi/xmlfile.py:451
#: pisi/xmlfile.py:458 pisi/xmlfile.py:536 pisi/xmlfile.py:550
#: pisi/xmlfile.py:557
msgid "Mandatory argument not available"
msgstr ""

#: pisi/xmlfile.py:407
#, docstring
msgid "format value for pretty printing"
msgstr ""

#: pisi/xmlfile.py:413
#, docstring
msgid "generate a class datatype"
msgstr ""

#: pisi/xmlfile.py:432 pisi/xmlfile.py:533
msgid "Type mismatch: DOM cannot be decoded"
msgstr ""

#: pisi/xmlfile.py:448 pisi/xmlfile.py:547
msgid "Object cannot be encoded"
msgstr ""

#: pisi/xmlfile.py:464
#, docstring
msgid "generate a list datatype. stores comps in tag/comp_tag"
msgstr ""

#: pisi/xmlfile.py:469
msgid "List type must contain only one element"
msgstr ""

#: pisi/xmlfile.py:482 pisi/xmlfile.py:497
msgid "Mandatory list empty"
msgstr ""

#: pisi/xmlfile.py:511
#, docstring
msgid ""
"generate a class datatype that is highly integrated\n"
"           don't worry if that means nothing to you. this is a silly\n"
"           hack to implement local text quickly. it's not the most \n"
"           elegant thing in the world. it's basically a copy of \n"
"           class tag"
msgstr ""

#: pisi/xmlfile.py:569
#, docstring
msgid "A class to help reading and writing an XML file"
msgstr ""

#: pisi/xmlfile.py:576
#, docstring
msgid "clear DOM"
msgstr ""

#: pisi/xmlfile.py:581
#, docstring
msgid "deallocate DOM structure"
msgstr ""

#: pisi/xmlfile.py:585
#, docstring
msgid "returns root document element"
msgstr ""

#: pisi/xmlfile.py:592
msgid ""
"File '%s' has invalid XML: %s\n"
msgstr ""

#: pisi/xmlfile.py:603
msgid "Root tagname %s not identical to %s as expected"
msgstr ""

#: pisi/xmlfile.py:625
#, docstring
msgid "returns the text of *first* matching node for given tag path."
msgstr ""

#: pisi/xmlfile.py:632
#, docstring
msgid "returns all nodes matching a given tag path."
msgstr ""

#: pisi/xmlfile.py:637
#, docstring
msgid " returns the children of the given path"
msgstr ""

#: pisi/xmlfile.py:644 pisi/xmlfile.py:650
#, docstring
msgid " returns the children of the given path, only with given type "
msgstr ""

#: pisi/xmlfile.py:661
#, docstring
msgid "this adds the newnode under given tag path"
msgstr ""

#: pisi/xmlfile.py:667
#, docstring
msgid "this adds the new stuff under node and then following tag path"
msgstr ""

#: pisi/xmlfile.py:672
#, docstring
msgid "add a new child node right under root element document"
msgstr ""

#: pisi/xmlfile.py:676
#, docstring
msgid "add text to node"
msgstr ""

#: pisi/xmlfile.py:680
#, docstring
msgid "add a text node with given tag path"
msgstr ""

#: pisi/xmlfile.py:685
#, docstring
msgid "add a text node under given node with tag path (phew)"
msgstr ""

