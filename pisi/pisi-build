#!/usr/bin/python
# -*- coding: utf-8 -*-

# python standard library
from os.path import basename
import sys
from optparse import OptionParser

# pisi modules
sys.path.append("./lib")
import pisi.context
import pisi.util
from pisi.build import PisiBuild, PisiBuildError

def main():

    # common options
    
    usage = "usage: %prog [options] package-name.pspec"
    parser = OptionParser(usage=usage,version="%prog " + pisi.__version__)
    parser.add_option("-D", "--destdir", action="store")
    parser.add_option("-v", "--verbose", action="store_true",
                      dest="verbose", default=False,
                      help="detailed output")
    parser.add_option("-d", "--debug", action="store_true", default=True)
    parser.add_option("-n", "--dry-run", action="store_true", default=False,
                      help = "do not perform any action, just show what\
                      would be done")

    (options, args) = parser.parse_args()

    print 'options = ', options
    print 'args = ', args

    # pspec(PISI Spec) to be used for package
    pspec = ""

    # TODO: We accept only one pspec file (at a time) currently,
    # but pisi-build may build many packages (pspecs given in order)
    # sequentially.
    if len(args) != 1:
        print "pisi-build expects one (and only one) pspec file currently"
        print usage
        sys.exit(2)
    else:
        pspec = args[0]

    # What we need to do first is create a context with our specfile
    ctx = pisi.context.BuildContext(pspec)
    # don't do the real job here. this is just a CLI!
    pb = PisiBuild(ctx)
    pb.build()

if __name__ == "__main__":
    main()
