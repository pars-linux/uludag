#!/bin/sh
#
# Simple init script that should handle both 
# livecd/tmpfs boot and hdd boot
#

PATH=/usr/sbin:/usr/bin:/sbin:/bin
ROOT_LINKS='bin sbin lib boot usr opt'
ROOT_TREES='etc root home var'
LOOP="pardus.img"
CDROOT=0
QUIET=0
ROOT_DEVICE=''
IMG_DEVICES="hd? sr*"


fall2sh() {
    echo "$*"
    /bin/sh
}

probe_devices() {
    /bin/coolplug 1> /dev/null 2>&1
}

parse_cmdline() {
    for x in `cat /proc/cmdline`; do
        case "${x}" in
            [0123456Ss])
                LEVEL=${x}
            ;;
            mudur=*livecd*)
                CDROOT=1
            ;;
            root=*)
                ROOT_DEVICE=`echo ${x}|cut -f2 -d=`
            ;;
            init=*)
                INIT=`echo ${x}|cut -f2 -d=`
            ;;
            quiet)
                QUIET=1
            ;;
        esac
    done
}

findcdmount() {
    if [ "$#" -gt "0" ]
    then
        for x in $*
        do
            mount -r ${x} /newroot/mnt/cdrom > /dev/null 2>&1

            if [ "$?" = '0' ]
            then
                # Check for cdroot image
                if [ -e /newroot/mnt/cdrom/${LOOP} ]
                then
                    ROOT_DEVICE="${x}"
                    break
                else
                    umount /newroot/mnt/cdrom
                fi
            fi
        done
    fi
}

manage_tmpfs() {
    mount -t tmpfs tmpfs /newroot

    for d in dev mnt mnt/cdrom mnt/livecd tmp sys proc
    do
        mkdir -p "/newroot/${d}"
    done

    mv /dev/* /newroot/dev/
}

mount_cdroot() {
    cd /newroot
    # Loop type squashfs
    mount -o bind /newroot/dev /dev
    mount -t squashfs -o loop,ro /newroot/mnt/cdrom/${LOOP} /newroot/mnt/livecd

    if [ "$?" != '0' ]
    then
        fall2sh "Could not mount root image"
    fi
    FS_LOCATION='mnt/livecd'
    umount /dev

    for x in ${ROOT_LINKS}
    do
        ln -s "${FS_LOCATION}/${x}" "${x}"
    done

    chmod 1777 tmp
    (cd /newroot/${FS_LOCATION}; cp -a ${ROOT_TREES} /newroot)
}

# ----- main -------
mount -n -t proc proc /proc > /dev/null 2>&1
mount -n -t sysfs sys /sys > /dev/null 2>&1

parse_cmdline

# Shall be decided later
# [ -n "$QUIET" ] && echo '0' > /proc/sys/kernel/printk

probe_devices

echo 0x0100 > /proc/sys/kernel/real-root-dev

if [ "${CDROOT}" -eq '1' ]
then
    ROOT_DEVICE=''
    manage_tmpfs
    for t in ${IMG_DEVICES}
    do
        findcdmount "/newroot/dev/$t"
        if [ "${ROOT_DEVICE}" != "" ]
        then
            break
        fi
    done

    if [ "${ROOT_DEVICE}" == "" ]
    then
        fall2sh "Could not find mount media"
    fi

    mount_cdroot
else
    # mount real root
    if [ ! -b "${ROOT_DEVICE}" ]
    then
        fall2sh "Could not find boot device"
    else
        mount -t auto -n -o ro $ROOT_DEVICE /newroot
    fi
fi

umount -n /sys
umount -n /proc

[ "${INIT}" == "" ] && INIT="/sbin/init";

# just to make sure, may not be necessary
[ ! -e /newroot/dev/console ] && mknod /newroot/dev/console c 5 1

# final mount
exec /bin/switch_root -c /dev/console /newroot ${INIT} ${LEVEL}

