
COMAR 1.6
=========

Nedir:
------

COMAR (COnfiguration MAnageR), sistemin düzgün çalışması için gerekli olan
donanım, açılış, ağ, kullanıcı, zaman, görüntü gibi ayarların mümkün olduğu
kadar otomatik bir biçimde yapılmasını sağlayan, kullanıcılara bir yetki
kontrolü dahilinde bu ayarları basit ve anlaşılır bir biçimde değiştirme
olanağı sağlayan bir yazılımdır.


Lisans:
-------

Copyright (c) 2005-2006, TUBITAK/UEKAE

This program is free software; you can redistribute it and/or modify it
under the terms of the GNU General Public License as published by the
Free Software Foundation; either version 2 of the License, or (at your
option) any later version. Please read the COPYING file.

Yayın hakkı (c) 2005-2006, TUBITAK/UEKAE

Bu program bir özgür yazılımdır; Free Software Foundation tarafından
yayımlanan GNU Genel Kamu Lisansının ikinci veya daha yüksek bir
sürümüne bağlı kalarak değiştirebilir ve/veya tekrar dağıtabilirsiniz.
Lisans metni için ekteki COPYING dosyasına bakın.


Çalıştırma:
-----------

Gerekenler:

Linux kernel 2.6.x
Python 2.4
Berkeley DB
scons
Standart inşa araçları (gcc, binutils, vs)

Sürüm 1.1 ile birlikte, Python binding ve betiklere ait API
comar-api paketine taşınmıştır. Düzgün çalışma için bu paketi
de kurmanız gereklidir.

Derleme:

İnşa sistemi olarak scons kullanılmıştır. Çomar yürütücüsü ve araçlarını inşa
etmek için:

  scons

komutunu çalıştırmanız yeterlidir. İnşa işlemi "build" dizininde yapılacak ve
oluşturulan dosyalar "install" adlı bir dizine konacaktır. Sisteme kurulum
yapmak için

  (sudo) scons install prefix=/

komutunu kullanmalısınız.


Çalıştırma:

comar bir sistem servisidir ve normal olarak init betiklerinden root yetkileriyle
çalıştırılır. Sistemde ikinci bir comar çalıştırıldığında ilkini kapatacaktır.
Çalışan comar'ı kapatmak için "Comar" adlı sürece SIGTERM sinyali gönderebilir
yada

  (sudo) comar --stop

komutunu verebilirsiniz. Tabi bunun için root yetkilerine sahip olmanız gerekir.
Diğer komut satırı parametrelerini,

  comar --help

komutuyla görebilirsiniz. Normal bir çalışma sırasında

  ps ax

ile görebileceğiniz sistem süreçleri listesinde

  Comar
  ComarRPC
  ComarEvent

olmak üzere üç süreç bulunacaktır. Bir yapılandırma görevi yerine getirilirken

  ComarJob
  ComarSubJob

adlarında başka süreçler de görülebilir.


Hatalar:

Bir hatayla karşılaşırsanız yada daha fazla bilgi almak isterseniz

  http://bugs.pardus.org.tr
  http://www.pardus.org.tr/projeler/comar

adreslerini kullanabilirsiniz.


Teknik Detaylar:
----------------

Süreçler:

* Comar         Ana süreç
* ComarRPC      Programlarla bağlantı kanalı
* ComarEvent    Olay dinleyici

* ComarJob      Her bir yapılandırma görevi için çalışan betikler
* ComarSubJob             "           "           "


Modüller:

* main.c		Ana süreç
* model.c		Sistem modelini yükleme/indeksleme
* data.c		Veritabanı (acl, script, apps, model, config)
* acl.c			Yetki denetimi
* csl.c			CSL - Python VM yardımcıları
* job.c			İş yapan süreçler (Register, Execute, Remove script)
* process.c		Süreç yönetimi ve süreçler arası iletişim
* cfg.c			Komut satırı parametreleri
* log.c			Hata ve bilgi kayıtları
* event.c		Olay bildirim sistemi
* rpc_unix.c	Unix soket üzerinden comar çağrısı modülü
* iksemel.c		Dahili minimal XML parser


Kod stili:

* K&R
* Fonksiyon isimleri (module)_(görev) şeklinde
* Ana süreçte hazırlık işlemleri (module)_init
* Yeni bir süreç başlatan fonksiyonlar (module)_start [ _(opsiyonel isim)]


RPC:

"/var/run/comar.socket" adlı UNIX soketinden bağlanılır.

Gelen ve giden cevaplar:

cmd    datasize    id       data
---  ------------  ---  -----------...
(1)       (3)      (4)   (datasize) bytes

biçimdedir. Burada cmd, giden komut veya dönen cevap tipi,
data ise komutun datasize boyutundaki parametreleridir.
32bitlik id değeri client tarafından belirlenir, ve bu değer
ile yapılan çağrıdan gelen tüm cevaplarda aynen geri döner.

Komutlar:

...yazılacak...

