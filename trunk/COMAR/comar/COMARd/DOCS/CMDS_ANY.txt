to        TAM, IRSU_STD   SetTASessionData  : Bir uygulama, TA özel olarak saklanmasını istediği datayı bu komutla TA_MGR'ye yollar. Data kanalında "<session_id[<=32]> <key[<=32]> <eol> <data[...]>" formatında saklanmak istenen değer bulunur. <data> değeri içeriğinde boşluklar da bulunabilen tipik bir buffer olarak işlev görür. <eol>, bu değerin maksimum saklanacağı süreyi gösterir, 0 = okununcaya kadar.
to        TAM, IRSU_RTD   ReqTASessionData  : Uygulama Önceden saklanmış olan TA değerini geri ister. Data kanalında "<session_id> <key>" bilgileri bulunur. Bu bilgiler, SetTASessionData ile kullanılan değerler ile aynı olmalıdır.
to        TAM, IRSU_PTD   PopTASessionData  : Uygulamaya Önceden saklanmış olan TA değeri geri gönderilir. Data kanalında "<session_id> <key>" verisi bulunur. Bir sessiondata, bu komutla okunduktan sonra silinir.
to        TAM, INSU_PID   ReqUniquePID      : TA_MGR'den sistemde yeğane olan bir PID almak için kullanılır.
to        ANY, IRSU_PPID  MyOSpid           : Child'ler, parentlerine OS pidlerini bu komutla iletirler. Data kanal pid deerini ihtiva eder.
to        ANY, ENTU_####  Error             : Eğer yapılan çağrı, TA süreci değilde, başka bir nedenle (internal error) işlenemezse, bu mesaj geri yollanır. #### kısmı, errno ile elde edilen hata durumudur.
to        TAM, SNSU_QUE   TAStateQUEUE      : .
to        TAM, SNSU_ACC   TAStateACCEPTED   : .
to        TAM, SNSU_FIN   TAStateFIN        : .
to        TAM, SNSU_NEW   TAStateNEW        : .
to        TAM, SNSU_PRC   TAStatePROCESSED  : .
to        TAM, SNSU_DENY  TAStatDENIED      : .
to        TAM, SNSU_FTL   TAStateFATAL      : .
to      TAMDB, QRSU_OPEN  QueryDBOpen       : DATA = DB File Name. Cevap: QRTU_QDB,  DATA = DBHandler.
to      TAMDB, QRSU_GET   QueryDBGet        : DATA = DBHandler " " DB Key. Cevap: QRTU_DATA, DATA = Value
to      TAMDB, QRSU_PUT   QueryDBPut        : DATA = DBIO 1.0 Cevap: Null.
to      TAMDB, QRSU_SEEK  QueryDBSeek       : DATA = DBHandler " " DB Key. Cevap: QRTU_LOC, DATA = DBIO 1.0
to      TAMDB, QRSU_FRST  QueryDBNext       : DATA = DBHandler. Cevap: QRTU_LOC, DATA = DBIO 1.0
to      TAMDB, QRSU_LAST  QueryDBPrev       : DATA = DBHandler. Cevap: QRTU_LOC, DATA = DBIO 1.0
to      TAMDB, QRSU_NEXT  QueryDBNext       : DATA = DBHandler. Cevap: QRTU_LOC, DATA = DBIO 1.0
to      TAMDB, QRSU_PREV  QueryDBPrev       : DATA = DBHandler. Cevap: QRTU_LOC, DATA = DBIO 1.0
to      TAMDB, QRSU_END   QueryDBClose      : DATA = DBHandler. Cevap: NULL
to      TAMEV, ERSU_NID   newEventId        : DATA = Event Class.
to      TAMEV, ERSU_AOBJ  addNewEventObject : DATA = EVENTID=eventid\x00OBJECT=objDescriptor\x00METHOD=methodName\x00WAIT=0\x00
to      TAMEV, ERSU_AOM   addNewEventOMNode : DATA = EVENTID=eventid\x00NODE=OMNode\x00WAIT=0\x00
to      TAMEV, ERSU_DTK   deleteEventTask   : DATA = taskKey
to      TAMEV, ERSU_FUP   FireEvent         : DATA = eventid.
from      TAM, IRTU_GTD   GetTASessionData  : Uygulamaya Önceden saklanmış olan TA değeri geri gönderilir. Data kanalında "<session_id> <key> <data...> verisi bulunur..
from      TAM, IRTU_PID   GetUniquePID      : TA_MGR sistemde yeğane olan PID değerini istemciye yollar. Data kanalında 8 bayt uzunlukta PID bulunur.
from      ANY, IRSU_PPID  MyOSpid           : Child'ler, parentlerine OS pidlerini bu komutla iletirler. Data kanal pid deerini ihtiva eder.
from      ANY, ENTU_####  Error             : Eğer yapılan çağrı, TA süreci değilde, başka bir nedenle (internal error) işlenemezse, bu mesaj geri yollanır. #### kısmı, errno ile elde edilen hata durumudur.
from    TAMDB, QRTU_DATA  QueryResDATA      : DATA = DBIO 1.0
from    TAMDB, QRTU_LOC   QueryResDATA      : DATA = DBIO 1.0 ((HANDLE=hndValue\x00KEY=keysize keyvalue\x00DATA=datasize datavalue\0x00) || (Null))
from    TAMDB, QRTU_QDB   QueryDBHandler    : DATA = DB Handler.
from    TAMEV, ERTU_NID   GetNewEventId     : DATA = eventid
from    TAMEV, ERTU_NTK   EventTaskKey      : DATA = taskKey
