.. _kerneltools:

Kerneltools
~~~~~~~~~~~

:Author: Semen Cirit
:Date: |today|
:Version: 0.1


Configuration Part
==================


getKernelVersion
----------------

::

    getKernelVersion(flavour=None)

Returns the kernel version information to use with external module compilation
This is something like 2.6.30_rc7-119 which will be appended to /lib/modules.
If flavour==None, it will return the kernel version in the /etc/kernel/kernel
file, else /etc/kernel/<flavour>. If it fails, it will return the running
kernel version.

Configure
---------

::

    configure()

It first cleans the system form .orig files, then starts kernel configuration.

updateKConfig()
---------------

::

    updateKConfig()

Call this to set newly added symbols to their defaults after sedding some
Kernel Configuration parameters.

Building and Installing Part
============================

dumpVersion
-----------

::

    dumpVersion()

Writes the specific kernel version into /etc/kernel.

build
-----

::

    build(debugSymbols=False)

Builds the kernel with given debug symbols, the default debugSymbols is False.

install
-------

::

    install(installFirmwares=True)

It first controls whether loadable module support is available, then it
installs the kernel image.

If installFirmwares==False it removes firmwares.

installHeaders
--------------

::

    installHeaders(extra=[])

Installs the additional kernel headers needed to build out-of-tree kernel modules.

Example::

    kerneltools.installHeaders(extra=["drivers/media/dvb/dvb-core",
                                      "drivers/media/dvb/frontends",
                                      "drivers/media/video"])

installLibcHeaders
------------------

::

    installLibcHeaders(excludes=[]):

Installs the Linux-Libc-Headers exculuding the givens.

Example::

    kerneltools.installLibcHeaders(excludes=["scsi"])

installSource
-------------

::

    installSource()

Installs the kernel source files.

cleanModuleFiles
----------------

::

    cleanModuleFiles()

Cleans module.* files generated by depmod.

mkinitramfs
-----------

::

    mkinitramfs()

Create and install the initramfs image into the package.
