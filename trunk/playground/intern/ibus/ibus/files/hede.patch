diff -Naur ibus-1.2.1.orig/py-compile ibus-1.2.1/py-compile
--- ibus-1.2.1.orig/py-compile	2010-03-25 03:55:29.000000000 +0200
+++ ibus-1.2.1/py-compile	2010-06-28 16:41:51.812526907 +0300
@@ -101,39 +101,39 @@
     filetrans="filepath = os.path.normpath('$destdir' + os.sep + path)"
 fi
 
-$PYTHON -c "
-import sys, os, py_compile
-
-files = '''$files'''
-
-sys.stdout.write('Byte-compiling python modules...\n')
-for file in files.split():
-    $pathtrans
-    $filetrans
-    if not os.path.exists(filepath) or not (len(filepath) >= 3
-                                            and filepath[-3:] == '.py'):
-	    continue
-    sys.stdout.write(file)
-    sys.stdout.flush()
-    py_compile.compile(filepath, filepath + 'c', path)
-sys.stdout.write('\n')" || exit $?
-
-# this will fail for python < 1.5, but that doesn't matter ...
-$PYTHON -O -c "
-import sys, os, py_compile
-
-files = '''$files'''
-sys.stdout.write('Byte-compiling python modules (optimized versions) ...\n')
-for file in files.split():
-    $pathtrans
-    $filetrans
-    if not os.path.exists(filepath) or not (len(filepath) >= 3
-                                            and filepath[-3:] == '.py'):
-	    continue
-    sys.stdout.write(file)
-    sys.stdout.flush()
-    py_compile.compile(filepath, filepath + 'o', path)
-sys.stdout.write('\n')" 2>/dev/null || :
+#$PYTHON -c "
+#import sys, os, py_compile
+#
+#files = '''$files'''
+#
+#sys.stdout.write('Byte-compiling python modules...\n')
+#for file in files.split():
+#    $pathtrans
+#    $filetrans
+#    if not os.path.exists(filepath) or not (len(filepath) >= 3
+#                                            and filepath[-3:] == '.py'):
+#	    continue
+#    sys.stdout.write(file)
+#    sys.stdout.flush()
+#    py_compile.compile(filepath, filepath + 'c', path)
+#sys.stdout.write('\n')" || exit $?
+#
+## this will fail for python < 1.5, but that doesn't matter ...
+#$PYTHON -O -c "
+#import sys, os, py_compile
+#
+#files = '''$files'''
+#sys.stdout.write('Byte-compiling python modules (optimized versions) ...\n')
+#for file in files.split():
+#    $pathtrans
+#    $filetrans
+#    if not os.path.exists(filepath) or not (len(filepath) >= 3
+#                                            and filepath[-3:] == '.py'):
+#	    continue
+#    sys.stdout.write(file)
+#    sys.stdout.flush()
+#    py_compile.compile(filepath, filepath + 'o', path)
+#sys.stdout.write('\n')" 2>/dev/null || :
 
 # Local Variables:
 # mode: shell-script
