C++ ile Plasmoid Yapımı
1-Özet
2-.desktop dosyası
3-Başlık dosyası
4-C++ dosyası
5-CMakeLists.txt dosyası
6-Uygulamayı kurma ve çalıştırma
7-Kaynaklar

1-Özet
Bu belge http://techbase.kde.org/Development/Tutorials/Plasma/GettingStarted adresindeki belge temel alınarak hazırlanmıştır ve birebir çevirisi değildir. Bu belgeyi izleyebilmek için en azından KDE 4.2'ye sahip olmanız gerekir. Ayrıca C++ bilmek, nesne yönelimli programlama kavramlarına alışık olmalısınız. Biraz da Qt bilirseniz iyi olur ama bu belgeyi takip ederken de anlayabilirsiniz. İşler basitleştirmek adına yapacağımız plasmoide sadece işlevsiz bir tuş ve bir yazı ekleyeceğiz. 

2-.desktop dosyası
Her plasmoidin bir .desktop dosyası vardır ve plasmoidle ilgili bilgileri tutar. Örneğin masaüstünde programcık ekle menüsüne tıklayınca açılan pencerede yer alan plasmoidin simgesi, geliştirici bilgileri, plasmoidin ne işe yaradığı gibi bilgiler .desktop dosyasından alınır. Plasmoidimiz için öncelikle bir dizin yaratalım ve bu dizinin içine plasma-applet-tutorial1.desktop adında bir dosya yaratalım. Aşağıdaki kodları aynen bu dosyaya kopyalayalım.

[Desktop Entry]
Name=Tutorial 1
Comment=Plasma Tutorial 1
Type=Service
ServiceTypes=Plasma/Applet
 
X-KDE-Library=plasma_applet_tutorial1
X-KDE-PluginInfo-Author=Bas Grolleman
X-KDE-PluginInfo-Email=bgrolleman@emendo-it.nl
X-KDE-PluginInfo-Name=tutorial1
X-KDE-PluginInfo-Version=0.1
X-KDE-PluginInfo-Website=http://plasma.kde.org/
X-KDE-PluginInfo-Category=Examples
X-KDE-PluginInfo-Depends=
X-KDE-PluginInfo-License=GPL
X-KDE-PluginInfo-EnabledByDefault=true
Name satırı plasmoidin adını belirtir. Comment plasmoidle ilgili açıklamayı verir. X-KDE-Library ve X-KDE-PluginInfo-Name satırları çok önemlidir. Bu satırlar yazacağınız C++ kodundaki sınıflar ile plasma arasında bir yapıştırıcı gibidir. Bunlar yanlışsa hiçbir şey başlamayacaktır. Eğer plasma_applet_tutorial1 yerine plasma_applet_ilkplasmoidim yazsaydık X-KDE-Library satırına X-KDE-PluginInfo-Name satırını da ilkplasmoidim olarak yazmalıydık. X-KDE-PluginInfo satırlarından Author plasmoidi yazan kişi; Email, e-posta; Website, plasmoidin internet sitesi;License, plasmoidin lisansı bilgisidir. Category satırı ise plasmoidin Programcık Ekle menüsünde hangi bölümde yer alacağını belirtir. Var olan kategori isimlerine http://techbase.kde.org/Projects/Plasma/PIG adresinden erişebilirsiniz. Örneğin bilgisayarın belleği ile ilgili bilgileri gösteren bir plasmoid yapıyorsanız bu kısım için System Information seçmeniz daha uygundur. Yukarıdaki satırlara ek olarak ServiceTypes satırının altına Icon=rating gibi bir satır eklerseniz, plasmoidiniz programcık ekle menüsünde bir yıldız simgesiyle gösterilir. rating ismi KDE içinde tanımlı önceden gelen bir simgedir. KDE'nin içinde gelen çok çeşitli simgeleri kendi plasmoidiniz için de kullanabilirsiniz.

3-Başlık dosyası
Plasmoid dizinimizin içinde plasma-tutorial1.h dosyası oluşturalım ve aşağıdaki kodları bu dosyaya ekleyelim.

// Bu satırlar başlık dosyasının birden fazla eklenmesini önlemek için eklendi.
#ifndef Tutorial1_HEADER
#define Tutorial1_HEADER
 
#include <Plasma/Applet>
 
 
class QSizeF;
 
namespace Plasma {
    class LineEdit;
    class PushButton;
}
 
// Uygulamamızı tanımlıyoruz
class PlasmaTutorial1 : public Plasma::Applet
{
    Q_OBJECT
    public:
        // Temel yapıcı ve yıkıcı yöntemleri
        PlasmaTutorial1(QObject *parent, const QVariantList &args);
        ~PlasmaTutorial1();
 
        void init();
 
    private:
        Plasma::LineEdit *m_lineEdit; 	//bir tane düzenlenebilir satır
							//kullanacağımızı bildirdik
        Plasma::PushButton *m_pushButton; //bir tane tuş kullanacağımızı 								//bildirdik
};
 
#endif
Kodların içine yorum satırları açıklayıcı olması açısından eklenmiştir.

4-C++ dosyası
Asıl işlemlerin olduğu dosya plasma-tutorial1.cpp dosyasıdır. Bu dosyayı da yarattığımız dizinin içinde oluşturalım ve aşağıdaki kodları ekleyelim.

#include "plasma-tutorial1.h"
 
#include <QPainter>
#include <QFontMetrics>
#include <QSizeF>
#include <QGraphicsLinearLayout>
 
#include <plasma/theme.h>
#include <plasma/widgets/lineedit.h>
#include <plasma/widgets/pushbutton.h>
 
 
PlasmaTutorial1::PlasmaTutorial1(QObject *parent, const QVariantList &args)
    : Plasma::Applet(parent, args),
      m_lineEdit(0), m_pushButton(0)  //işaretçilerinizi 0'a veya başka
// bir değere atamayı unutmayın başlarken.
{
    // Bu kodla standart arkaplanı kullanacağımızı söylüyoruz.
    setBackgroundHints(DefaultBackground);
    resize(200, 200);
}
 
 
PlasmaTutorial1::~PlasmaTutorial1()
{
    if (hasFailedToLaunch()) {
        // Bazı temizleme işlemleri
    } else {
        // Ayarların kaydedilmesi
    }
}
 
//Bütün arayüz işlemlerini init() yönteminin içine koyuyoruz. Asıl yapıcının //içinde sadece çok temel işlemler yer almalıdır.
void PlasmaTutorial1::init()
{
 
  QGraphicsLinearLayout *layout = new QGraphicsLinearLayout(this);
  layout->setOrientation(Qt::Vertical); 
 
  m_lineEdit = new Plasma::LineEdit(this);
  m_lineEdit->setText("Hey! This is a Plasma line edit.");
 
  m_pushButton = new Plasma::PushButton(this);
  m_pushButton->setText("Whoa! This is a Plasma pushbutton.");
 
  layout->addItem(m_lineEdit);
  layout->addItem(m_pushButton);
 
}
 
// Bu komut plasmoidinizle .desktop dosyanız arasında bir bağlantı kurabilmenizi
// sağlar.
K_EXPORT_PLASMA_APPLET(tutorial1, PlasmaTutorial1)
 
#include "plasma-tutorial1.moc"
K_EXPORT_PLASMA_APPLET(tutorial1, PlasmaTutorial1) satırı çok önemlidir ve cpp dosyasındaki sınıfın adını desktop dosyasına bağlar. Eğer plasmoidiniz yüklenmiyorsa burada bir hata yapmış olabilirsiniz. K_EXPORT_PLASMA_APPLET(<plasmoidin adı>, <sınıfın adı>) gibi bir yapıya sahiptir.

QGraphicsLinearLayout *layout=new QGraphicsLinearLayout(this) satırı ile plasmoidimiz için kullanacağımız yerleşim düzenini belirttik. 
layout->setOrientation(Qt::Vertical) satırı ile plasmoidimize ekleyeceğimiz tüm tuşlar, yazılar vb. şeyler alt altya eklenecektir.  Qt::Horizontal yazsaydık ekleyeceklerimiz yan yana eklenirdi.

m_lineEdit = new Plasma::LineEdit(this);
m_lineEdit->setText("Hey! This is a Plasma line edit.");
satırları ile önce bir düzenlenebilir satır ekledik ve bu satıra Hey! This is a Plasma line edit. yazdık.

m_pushButton = new Plasma::PushButton(this);
m_pushButton->setText("Whoa! This is a Plasma pushbutton.");
satırları ile plasmoidimize tuş ekledik ve bu tuşun üzerine Whoa! This is a Plasma pushbutton. yazdık.  

layout->addItem(m_lineEdit);
layout->addItem(m_pushButton);

satırları ile belirttiğimiz yerleşim düzenine yarattığımız satırı ve tuşu ekledik.

5-CMakeLists.txt
Şimdi programcığımızı inşa edebilmek için oluşturduğumuz bütün dosyaları bir araya getirmeliyiz. cmake programının neyin nerede olduğunu bulabilmesi için CMakeLists.txt dosyasına ihtiyacı vardır. cmake ile ilgili daha ayrıntılı bilgiye http://techbase.kde.org/Development/Tutorials/CMake adresinden erişebilirsiniz. Şimdi plasmoid yapmak için oluşturduğunuz dizinin içinde bir tane CMakeLists.txt adında bir dosya oluşturun ve aşağıdaki kodları bu dosyaya yapıştırın.

# Projenin bir ismi olması gerekir.
project(plasma-tutorial1)
 
# Gereken kütüphaneleri bul.
find_package(KDE4 REQUIRED)
include(KDE4Defaults)
 
add_definitions (${QT_DEFINITIONS} ${KDE4_DEFINITIONS})
include_directories(
   ${CMAKE_SOURCE_DIR}
   ${CMAKE_BINARY_DIR}
   ${KDE4_INCLUDES}
   )
 
# Kaynak kodlarımızı buraya ekliyoruz.
set(tutorial1_SRCS plasma-tutorial1.cpp)
 
# Tüm dosyaların doğru yerlerde olduğundan emin olun.
kde4_add_plugin(plasma_applet_tutorial1 ${tutorial1_SRCS})
target_link_libraries(plasma_applet_tutorial1 
                      ${KDE4_PLASMA_LIBS} ${KDE4_KDEUI_LIBS})
 
install(TARGETS plasma_applet_tutorial1
        DESTINATION ${PLUGIN_INSTALL_DIR})
 
install(FILES plasma-applet-tutorial1.desktop
        DESTINATION ${SERVICES_INSTALL_DIR})
6-Uygulamayı kurma ve çalıştırma
Eğer tüm işlemleri sırasıyla yaptıysanız elinizde şu dosya ve dizin yapısının olması gerekir.
+anaDizin (bunun için bir isim belirtmedik özel olarak bir isim seçmiş olmalısınız)
plasma-applet-tutorial1.desktop
plasma-tutorial1.h
plasma-tutorial1.cpp
CMakeLists.txt 
Şimdi plasmoidinizi çalıştırıp görüntüleyebilmek için bazı komutları verip derleme, inşa etme gibi işlemleri yapmalısınız. Sırasıyla aşağıdaki komutları verin:
$ cmake -DCMAKE_INSTALL_PREFIX=/usr/kde/4
$ make
$ sudo make install (bu komut sizden bir şifre isteyebilir, şifrenizi girin)
$ kbuildsycoca4
$ plasmoidviewer tutorial1

UYARI: Eğer Pardus kullanıyorsanız KDE kurulum önekiniz /usr/kde/4'tür ve yukarıdaki komutları aynen kullanabilirsiniz. Başka bir dağıtım kullanıyorsanız önekiniz daha farklı olabilir. Bunu,  
$ kde4-config --prefix 
komutu ile öğrenebilirsiniz. Eğer bu komutun çıktısı /usr ise ilk vermeniz gereken komut
$ cmake -DCMAKE_INSTALL_PREFIX=/usr 
olmalıdır.

Her şey yolunda gittiyse plasmoidinizi ekranınızda görüyor olmalısınız. Bu komutların herhangi birinde bir hata ile karşılaştıysanız, işlemleri doğru yaptığınızdan emin olun.











7-Kaynaklar
İnternette plasmoid yapabilmeyle ilgili erişebileceğiniz diğer kaynaklar:
Plasma Programming with C++ (KDE Techbase) http://techbase.kde.org/Development/Tutorials/Plasma#Plasma_Programming_with_C.2B.2B
Creating Plasmoids (Linux Magazine) http://www.linux-magazine.com/w3/issue/114/036-040_plasma.pdf
Plasma Tutorial (Video) http://www.kdedevelopers.org/node/3247
Kdevelop kullanarak Plasmoid geliştirme (IBM Developerworks) http://www.ibm.com/developerworks/linux/library/l-kde-plasmoids/index.html
Örnek Plasmoid Kaynak Kodları http://websvn.kde.org/trunk/KDE/kdeplasma-addons/applets/

Yazan: D. Barış Akkurt