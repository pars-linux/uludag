Index: mkinitramfs
===================================================================
--- mkinitramfs	(revision 35130)
+++ mkinitramfs	(working copy)
@@ -8,8 +8,10 @@
 import sys
 import glob
 import stat
+import magic
 import shutil
 import tempfile
+import platform
 import subprocess
 
 from optparse import OptionParser
@@ -70,6 +72,31 @@
     except IOError:
         printWarn("Could not find %s" % source)
 
+def install(source, destination):
+    libraries = []
+    if "dynamically linked" in magicDb.file(source):
+        # Resolve dependencies
+        output = subprocess.Popen([ld, "--list", source],
+                                   stdout=subprocess.PIPE,
+                                   stderr=subprocess.STDOUT)
+
+        for line in output.stdout.readlines():
+            lib = line.strip().split(">")[-1].strip().split()[0]
+            if lib.startswith("/"):
+                libraries.append(lib)
+
+    # First copy the main file
+    copy(source, destination)
+
+    # Then any shared dependencies
+    for lib in libraries:
+        try:
+            print "copying %s to %s" % (lib, lib)
+            copy(lib, os.path.dirname(lib))
+        except IOError:
+            printWarn("Can not copy %s" % lib)
+
+
 def touch(_file):
     if os.path.exists(_file):
         os.utime(_file, None)
@@ -203,6 +230,7 @@
     def addSuspend(self):
         for i in self.suspendFileList:
             copy(i, self.getNewRoot(self.suspendFileList[i]))
+            #install(i, self.getNewRoot(self.suspendFileList[i]))
 
     def addModprobeBlacklists(self):
         for i in self.modprobeBlacklistFileList:
@@ -262,7 +290,7 @@
 
 
     def tidyModuleList(self):
-        ml = list(set(self.modulesList)))
+        ml = list(set(self.modulesList))
         ml.sort()
         self.modulesList = ml
 
@@ -488,6 +526,12 @@
     tempdir.create()
     config["tmpDir"] = tempdir.tmpDir
 
+    magicDb = magic.open(magic.MAGIC_NONE)
+    magicDb.load()
+
+    ld = "/lib%s/ld-2.12.so" % ("32" if \
+            platform.uname()[4] == "i686" else "")
+
     parser = OptionParser()
     parser.add_option("-k", "--kernel", dest="kernelVersion", type="string",
             help="kernel version to create initramfs for")
