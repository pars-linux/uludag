From 7171d444b6678b12a220279a308f876789ba9bea Mon Sep 17 00:00:00 2001
From: =?utf-8?q?Caio=20Rom=C3=A3o?= <caioromao@gmail.com>
Date: Sun, 14 Jun 2009 22:22:07 -0300
Subject: [PATCH 06/10] bugzilla.py: fetching attachment info when requested.

modify_attachment() may receive a `bugid` parameter which makes pybugz
fetch for some required kwargs info from bugzilla.
---
 bugz/bugzilla.py |   19 ++++++++++++++++++-
 1 files changed, 18 insertions(+), 1 deletions(-)

diff --git a/bugz/bugzilla.py b/bugz/bugzilla.py
index 6bd79a3..4ab4ac1 100644
--- a/bugz/bugzilla.py
+++ b/bugz/bugzilla.py
@@ -649,11 +649,13 @@ class Bugz:
 		except:
 			return []
 
-	def modify_attachment(self, attachid, **kwargs):
+	def modify_attachment(self, attachid, bugid=0, **kwargs):
 		"""Modifies an attachment given it's attachment_id
 
 		@param   attachid: attachment id
 		@type    attachid: int
+		@keyword bugid: the id of the bug containing this attachment
+		@type    bugid: int
 		@keyword isobsolete: whether the attachment is obsolete or not.
 		@type    isobsolete: int
 		@keyword ispatch: whether the attachment is a patch or not.
@@ -667,6 +669,21 @@ class Bugz:
 		qparams = config.params['attach'].copy()
 		qparams['id'] = attachid
 		qparams['action'] = 'update'
+
+		if bugid > 0:
+			# If bugid is provided, fetch attachment information from bug
+			# this way, kwargs may be simpler.
+			bug = self.get(bugid)
+			for att in bug.findall('//attachment'):
+				if int(att.find('.//attachid').text) == attachid:
+					qparams['description'] = att.find('.//desc').text
+					qparams['contenttypemethod'] = 'manual'
+					qparams['contenttypeentry'] = att.find('.//type').text
+					qparams['filename'] = att.find('.//filename').text
+					break
+			if 'description' not in qparams:
+				self.warn('Bug %d does not containt attachment %d' % (bugid,
+                                                                      attachid))
 		qparams.update(kwargs)
 
 		req_params = urlencode(qparams, True)
-- 
1.6.3.2

