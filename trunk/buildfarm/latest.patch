Index: buildfarm/mailer.py
===================================================================
--- buildfarm/mailer.py	(revision 32337)
+++ buildfarm/mailer.py	(working copy)
@@ -21,50 +21,46 @@
 from buildfarm.config import configuration as conf
 
 
-class MailerError(Exception):
-    pass
-
 def send(message, pspec = "", _type = "", subject=""):
 
     if not conf.sendemail:
-        logger.info("Sending of notification e-mails is turned off.")
+        logger.info("Sending of e-mails is turned off.")
         return
 
+    # subject_prefix: ex: [release/{devel,stable}/arch]
+    subject_prefix = "%s/%s/%s" % (conf.release.capitalize(),
+                                   conf.subrepository,
+                                   conf.architecture)
 
-    # Authentication stuff
-    (username, password) = Auth().get_credentials("Mailer")
 
-    # subjectID: ex: [release/{devel,stable}/arch]
-    subjectID = "%s/%s/%s" % (conf.release.capitalize(),
-                              conf.subrepository,
-                              conf.architecture)
-
-
     recipients_name, recipients_email = [], []
+    package_name = ""
+    last_log = ""
     if pspec:
         spec = pisi.specfile.SpecFile(os.path.join(utils.get_local_repository_url(), pspec))
         recipients_name.append(spec.source.packager.name)
         recipients_email.append(spec.source.packager.email)
+        package_name = os.path.basename(os.path.dirname(pspec))
+        last_log = "".join(open(os.path.join(utils.get_package_log_directory(), \
+                "%s.txt" % package_name)).readlines()[-20:])
 
-    package_name = os.path.basename(os.path.dirname(pspec))
-    last_log = open(os.path.join(utils.get_package_log_directory(), "%s.txt" % package_name))
     message = templates._all[_type] % {
-                                        'log'          : "".join(last_log.readlines()[-20:]),
-                                        'recipientName': " ".join(recipients_name),
-                                        'mailTo'       : ", ".join(recipients_email),
-                                        'ccList'       : ', '.join(conf.cclist),
-                                        'mailFrom'     : conf.mailfrom,
-                                        'announceAddr' : conf.announceaddr,
-                                        'subject'      : pspec or subject or _type,
-                                        'message'      : message,
-                                        'pspec'        : pspec,
-                                        'type'         : _type,
-                                        'packagename'  : package_name,
-                                        'distribution' : conf.name,
-                                        'release'      : conf.release,
-                                        'arch'         : conf.architecture,
-                                        'logsdir'      : subjectID,
-                                        'subjectID'    : subjectID,
+                                        'distribution'      : conf.name,
+                                        'release'           : conf.release,
+                                        'arch'              : conf.architecture,
+                                        'mail_from'         : conf.mailfrom,
+                                        'mail_to'           : conf.mailto,
+                                        'cc_list'           : ', '.join(conf.cclist),
+                                        'subject_prefix'    : subject_prefix,
+                                        'subject'           : subject or pspec or _type,
+                                        'package_name'      : package_name,
+                                        'recipient_name'    : " ".join(recipients_name),
+                                        'log'               : last_log,
+                                        'log_dir'           : subject_prefix,
+                                        'announce_addr'     : conf.announceaddr,
+                                        'message'           : message,
+                                        'pspec'             : pspec,
+                                        'type'              : _type,
                                      }
 
     # timeout value in seconds
@@ -73,29 +69,27 @@
     try:
         session = smtplib.SMTP(conf.smtpserver)
     except:
-        logger.error("Failed sending e-mail: Couldn't open session on %s." % conf.smtpserver)
+        logger.error("Couldn't open session on %s." % conf.smtpserver)
         return
 
-    if conf.usesmtpauth:
-        try:
-            session.login(username, password)
-        except smtplib.SMTPAuthenticationError:
-            logger.error("Failed sending e-mail: Authentication failed.")
-            return
+    # Authenticate
+    try:
+        username, password = Auth().get_credentials("Mailer")
+        session.login(username, password)
+    except smtplib.SMTPAuthenticationError:
+        logger.error("Failed sending e-mail: Authentication failed.")
+        return
 
     try:
         if _type == "announce":
             session.sendmail(conf.mailfrom, conf.announceaddr, message)
         else:
-            session.sendmail(conf.mailfrom, recipientsEmail + conf.cclist, message)
+            session.sendmail(conf.mailfrom, recipients_email + [conf.cclist], message)
     except smtplib.SMTPRecipientsRefused:
-        logger.error("Failed sending e-mail: Recipient refused probably because of a non-authenticated session.")
+        logger.error("Failed sending e-mail: Server refused the recipients.")
 
 def error(message, pspec, subject=""):
     send(message, pspec, _type="error", subject=subject)
 
-def info(message, subject=""):
-    send(message, _type="info", subject=subject)
-
 def announce(message, subject=""):
     send(message, _type="announce", subject=subject)
Index: buildfarm/templates.py
===================================================================
--- buildfarm/templates.py	(revision 32337)
+++ buildfarm/templates.py	(working copy)
@@ -11,11 +11,54 @@
 
 # E-mail message templates for mailer module..
 
+
+### ANNOUNCE MESSAGE TEMPLATE ###
+announce_message = """\
+From: %(distribution)s %(release)s %(arch)s Buildfarm <%(mail_from)s>
+To: %(mail_to)s
+Subject: [%(subject_prefix)s] %(subject)s
+Content-Type: text/plain;
+            charset="utf-8"
+
+Hello,
+
+This message is sent from Pardus buildfarm. Please do not reply as it is automatically generated.
+
+%(message)s
+
+"""
+
+
+### PLAIN ERROR MESSAGE TEMPLATE ###
+# To: contains the buildfarm list
+# Cc: contains the list of packagers or related people (Only packager for now)
+plain_error_message = """\
+From: %(distribution)s %(release)s %(arch)s Buildfarm <%(mail_from)s>
+To: %(mail_to)s
+Cc: %(cc_list)s
+Subject: [%(subject_prefix)s] %(subject)s
+Content-Type: text/plain;
+            charset="utf-8"
+
+Hello,
+
+An error occured while building the package '%(package_name)s' (maintainer: '%(recipient_name)s').
+The last 50 lines of the build log is included below:
+
+----------------------------------------------------------------
+%(message)s
+----------------------------------------------------------------
+
+Plain log file: http://packages.pardus.org.tr/logs/%(log_dir)s/%(package_name)s.log
+Fancy log file: http://packages.pardus.org.tr/logs/%(log_dir)s/%(package_name)s.html
+
+"""
+
 error_message = """\
-From: %(distribution)s %(release)s %(arch)s Buildfarm <%(mailFrom)s>
-To: %(mailTo)s
-Cc: %(ccList)s
-Subject: [%(subjectID)s] %(type)s: %(subject)s
+From: %(distribution)s %(release)s %(arch)s Buildfarm <%(mail_from)s>
+To: %(mail_to)s
+Cc: %(cc_list)s
+Subject: [%(subject_prefix)s] %(subject)s
 MIME-Version: 1.0
 Content-Type: multipart/alternative; boundary="boundary42"
 
@@ -28,7 +71,7 @@
 
 This message is sent from Pardus buildfarm. Please do not reply as it is automatically generated.
 
-An error occured while building the package '%(packagename)s' (maintainer: '%(recipientName)s'):
+An error occured while building the package '%(package_name)s' (maintainer: '%(recipient_name)s'):
 
 --------------------------------------------------------------------------
 %(message)s
@@ -40,10 +83,9 @@
 %(log)s
 --------------------------------------------------------------------------
 
-Plain log file: http://packages.pardus.org.tr/logs/%(logsdir)s/%(packagename)s.log
-Fancy log file: http://packages.pardus.org.tr/logs/%(logsdir)s/%(packagename)s.html
+Plain log file: http://packages.pardus.org.tr/logs/%(log_dir)s/%(package_name)s.log
+Fancy log file: http://packages.pardus.org.tr/logs/%(log_dir)s/%(package_name)s.html
 
-Happy hacking!
 
 --boundary42
 Content-Type: text/html;
@@ -53,7 +95,7 @@
 
 <p>This message is sent from Pardus buildfarm. Please do not reply as it is automatically generated.
 
-<p>An error occured while building the package '<b>%(packagename)s</b>' (maintainer: <b>%(recipientName)s</b>):
+<p>An error occured while building the package '<b>%(package_name)s</b>' (maintainer: <b>%(recipient_name)s</b>):
 
 <p><div align=center>
     <table bgcolor=black width=100%% cellpadding=10 border=0>
@@ -89,56 +131,17 @@
 </div>
 
 <p>Plain log file:
-<a href="http://packages.pardus.org.tr/logs/%(logsdir)s/%(packagename)s.log">http://packages.pardus.org.tr/logs/%(logsdir)s/%(packagename)s.log</a><br>
+<a href="http://packages.pardus.org.tr/logs/%(log_dir)s/%(package_name)s.log">http://packages.pardus.org.tr/logs/%(log_dir)s/%(package_name)s.log</a><br>
 Fancy log file:
-<a href="http://packages.pardus.org.tr/logs/%(logsdir)s/%(packagename)s.html">http://packages.pardus.org.tr/logs/%(logsdir)s/%(packagename)s.html</a>
+<a href="http://packages.pardus.org.tr/logs/%(log_dir)s/%(package_name)s.html">http://packages.pardus.org.tr/logs/%(log_dir)s/%(package_name)s.html</a>
 
 
-<p>Happy hacking!<br>
-
 --boundary42--
 """
 
-## Info
 
-info_message = """\
-From: %(distribution)s %(release)s %(arch)s Buildfarm <%(mailFrom)s>
-To: %(mailTo)s
-Cc: %(ccList)s
-Subject: [%(subjectID)s] %(subject)s
-Content-Type: text/plain;
-            charset="utf-8"
-
-Hello,
-
-This message is sent from Pardus buildfarm. Please do not reply as it is automatically generated.
-
-%(message)s
-
-Happy hacking!
-"""
-
-## Announce
-
-announce_message = """\
-From: %(distribution)s %(release)s %(arch)s Buildfarm <%(mailFrom)s>
-To: %(announceAddr)s
-Subject: [%(subjectID)s] List of recently built packages
-Content-Type: text/plain;
-            charset="utf-8"
-
-Hello,
-
-This message is sent from Pardus buildfarm. Please do not reply as it is automatically generated.
-
-%(message)s
-
-Happy hacking!
-"""
-
 # Convenience dict
 _all = {
-         'error'     : error_message,
+         'error'     : plain_error_message,
          'announce'  : announce_message,
-         'info'      : info_message,
        }
Index: scripts/buildfarm
===================================================================
--- scripts/buildfarm	(revision 32337)
+++ scripts/buildfarm	(working copy)
@@ -68,7 +68,7 @@
     logger.raw("QUEUE")
     logger.info(" All packages to be compiled : %s" % qmgr.get_work_queue())
 
-    mailer.info("I'm starting to compile packages in the following order:\n\n%s" % "\n".join(queue))
+    mailer.announce("I'm starting to compile packages in the following order:\n\n%s" % "\n".join(queue), "buildfarm starts with %d packages in queue" % len(queue))
     logger.raw()
 
     for pspec in queue:
@@ -199,12 +199,12 @@
             os.environ['HOME'] = home_dir
 
     logger.raw("QUEUE")
-    logger.info(" Wait Queue: %s" % (qmgr.get_wait_queue()))
+    logger.info("Wait Queue: %s" % (qmgr.get_wait_queue()))
     if qmgr.get_wait_queue():
-        mailer.info("Queue finished with problems and those packages couldn't be compiled:\n\n%s\n\n\nNew binary packages are;\n\n%s\n\nnow in repository" % ("\n".join(qmgr.get_wait_queue()), "\n".join(packageList)))
+        mailer.announce("Queue finished with problems and those packages couldn't be compiled:\n\n%s\n\n\nNew binary packages are;\n\n%s\n\nnow in repository" % ("\n".join(qmgr.get_wait_queue()), "\n".join(packageList)), "buildfarm finished with problems")
     else:
-        mailer.info("Queue finished without a problem!...\n\n\nNew binary packages are:\n\n%s\n\n"
-                    "New delta packages are:\n\n%s\n\nnow in repository..." % ("\n".join(packageList), "\n".join(deltaPackageList)))
+        mailer.announce("Queue finished without a problem!...\n\n\nNew binary packages are:\n\n%s\n\n"
+                    "New delta packages are:\n\n%s\n\nnow in repository..." % ("\n".join(packageList), "\n".join(deltaPackageList)), "Buildfarm finished without problems")
     logger.raw()
     logger.raw()
 
Index: data/buildfarm.conf
===================================================================
--- data/buildfarm.conf	(revision 32337)
+++ data/buildfarm.conf	(working copy)
@@ -44,16 +44,10 @@
 
 [Mailer]
 sendEmail=True
-useSmtpAuth=True # FIXME: Should be AND' with sendEmail in the code
 smtpServer=mail.pardus.org.tr
 mailFrom=buildfarm@pardus.org.tr
-announceAddr=buildfarm@pardus.org.tr
+mailTo=buildfarm@pardus.org.tr
 
-# This is the default CC address for all info and error mails
-# Error mails are sent to package maintainer and CC'ed to this address,
-# info mails have no 'TO' address, only this one as a 'CC'.
-ccList=buildfarm@pardus.org.tr
-
 [Delta]
 generateDelta=True
 
