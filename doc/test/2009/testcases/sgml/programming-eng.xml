<?xml version="1.0"?>
<!--Author: Semen Cirit-->
<document>
<testcase test="install">
    <package>avr-libc</package>
    <package>avrdude</package>
    <package>binutils-avr</package>
    <package>gcc-avr</package>
    <package>fcgi</package>
    <package>mod_dav_svn</package>
    <package>taglib-sharp</package>
    <package>gmime-docs</package>
</testcase>

<testcase>
    <package>git</package>
    <case>
        <text>Run below commands. And observe that it creates Git repository  and clones it correctly.</text>
        <command>
            # cd ~
            # mkdir test_git
            # cd test_git
            # git init
            # cd ..
            # git clone test_git test_clone
        </command>
    </case>
</testcase>

<testcase>
    <package>subversion</package>
    <case>
        <text>Observe that test directory added correctly:</text>
        <command>
          # svn co http://svn.pardus.org.tr/uludag/trunk/test/2009/testguide/turkish/
          # cd turkish
          # svn mkdir test
          # svn st
      </command>

      <text>Write some words to testfile and save it. observe that you fetch change difference.</text>
      <command>
      # vi testfile
      # svn add testfile
      # svn diff
      </command>
    </case>
</testcase>

<testcase>
    <package>eric</package>
    <case>

        <text>Open the below file with eric application and run it following Start $\rightarrow$ Run Script way.</text>
        <text>Observe that it runs correctly.</text>
        <download>http://cekirdek.pardus.org.tr/~semen/dist/test/programming/environment/test.py</download>
    </case>
</testcase>

<testcase>
    <package>eric-i18n-cs</package>
    <package>eric-i18n-de</package>
    <package>eric-i18n-es</package>
    <package>eric-i18n-fr</package>
    <package>eric-i18n-ru</package>
    <package>eric-i18n-tr</package>
    <case>
        <text>After installation below packages, change local language, open an open office application from console at same directory and observe that help file's language be same depended language.</text>

        <text>for changing local language:</text>
        <command># export LC_ALL= "lang_LANG"</command>

        <text>lang_LANG means, pt-BT for pt_BT, for other languages example de_DE</text>

        <text>In the same directory run eric4 command, and observe that the application is opened with related language.</text>
    </case>
</testcase>

<testcase>
    <package>ipython</package>
    <case>
        <text>When you run the below commands, observe that a new file is created. </text>
        <command>
         # ipython
         a = open("test", "a")
         a.write("test ipyton")
     </command>
    </case>
</testcase>

<testcase>
    <package>drscheme</package>
    <package>qt-creator</package>
    <case>
        <text>Open the application from Kmenu and and observe that it runs correctly.</text>
    </case>
</testcase>

<testcase>
    <package>php-cli</package>
    <package>php-common</package>
    <case>
        <text>After run below commands, enter http://localhost/test.php adress by firefox and observe that it paged informations about php.</text>
        <command>
        # cd /var/www/localhost/htdocs/
        # wget http://cekirdek.pardus.org.tr/~semen/dist/test/programming/language/php/test.php 
        </command>
    </case>
</testcase>

<testcase>
    <package>perl-IO-Socket-SSL</package>
    <case>
        <text>Download below file and extract it.</text>
        <download>http://cekirdek.pardus.org.tr/~semen/dist/test/programming/language/perl/IO-Socket-SSL-1.26.tar.gz</download>
        <text>from console;</text>
        <command>
        # cd IO-Socket-SSL-1.26/
        # /usr/bin/perl5.10.0 "-MExtUtils::Command::MM" "-e" "test_harness(0,'blib/lib', 'blib/arch')" t/*.t
        </command>
        <text>run the commands and observe that returned "ok" from tests.</text>
    </case>
</testcase>

<testcase>
    <package>perl-Compress-Zlib</package>
    <case>
        <reversedeptest>git</reversedeptest>
    </case>
</testcase>

<testcase>
    <package>perl-Email-MIME-Encodings</package>
    <case>
        <text>Observe that all results returned "ok".</text>
        <download>http://cekirdek.pardus.org.tr/~semen/dist/test/programming/language/perl/Email-MIME-Encodings.t</download>
        <command> # perl Email-MIME-Encodings.t</command>
    </case>
</testcase>

<testcase>
    <package>perl-Email-MIME-Encodings</package>
    <case>
        <text>Observe that all results returned "ok".</text>
        <download>http://cekirdek.pardus.org.tr/~semen/dist/test/programming/language/perl/test_perl_Test_Simple.t</download>
    </case>
</testcase>

<testcase>
    <package>pyFltk</package>
    <case>
        <text>Install ipython package and run the following commands:</text>
        <command>
         # ipython
         import fltk
     </command>
    </case>
</testcase>

<testcase>
    <package>python-turboflot</package>
    <case>
        <text>Install ipython package and run the following commands:</text>
        <command>
            # ipython
            import turboflot
        </command>
    </case>
</testcase>

<testcase>
    <package>python-ldap</package>
    <case>
        <text>Install ipython package and run the following commands:</text>
        <command>
            # ipython
            import ldap
        </command>
    </case>
</testcase>

<testcase>
    <package>python-iptables</package>
    <case>
        <text>Install ipython package and run the following commands:</text>
        <command>
            # ipython
            import iptables
        </command>
    </case>
</testcase>

<testcase>
    <package>sympy</package>
    <case>
        <text>Observe that the results return ok when you run the below command.</text>
        <command># python -c "import sympy;print sympy.test()"</command>
    </case>
</testcase>

<testcase>
    <package>scipy</package>
    <case>
        <text>Observe that the results the below command returns a result like "nose.result.TextTestResult run=XXXX errors=0 failures=0".</text>
        <command># python -c "import scipy;print scipy.test()"</command>
    </case>
</testcase>

<testcase>
    <package>pyNotifier</package>
    <case>
        <text>Install ipython package and run the following commands:</text>
        <command>
            # ipython
            import pynotify
        </command>
    </case>
</testcase>

<testcase>
    <package>httplib2</package>
    <case>
        <text>Install ipython package and run the following commands:</text>
        <command>
            # ipython
            import httplib2
        </command>
    </case>
</testcase>

<testcase>
    <package>Django</package>
    <case>
        <text>Run below commands:</text>
        <command>
            # django-admin.py startproject test
            # cd test
        </command>
        <text>observe that it creates test named directory and creates below files under that directory.</text>
        <command>
            __init__.py
            manage.py
            settings.py
            urls.py 
        </command>
        <text>Run below commands and then enter http://localhost:8080/ adress from firefox and observe that you can connect to server.</text>
        <command> # python manage.py runserver 8080</command>
        <text>Assign below database variables to DATABASE\_ENGINE DATABASE\_NAME variables in settings.py:</text>
        <command>
            DATABASE_ENGINE = 'sqlite3'
            DATABASE_NAME = 'sqlite3_'
        </command>
        <text>Run below command and apply all of the operations that needed. Observe that the Django authentication system is built without any problem.</text>
        <command># python manage.py syncdb </command>
        <text>Run below command and observe that it creates poll named directory:</text>
        <command># python manage.py startapp polls </command>
    </case>
</testcase>

<testcase>
    <package>python-memcached</package>
    <case>
        <text>Start Apache server from service manager.</text>
        <text>Run below commands and observe that it's result returned "true".</text>
        <download>http://cekirdek.pardus.org.tr/~semen/dist/test/programming/language/python/test_python-memcache.py</download>
        <command> # python test_python-memcache.py</command>
    </case>
</testcase>

<testcase>
    <package>pygtk</package>
    <case>
        <text>Run below commands and observe that opened a window correctly.</text>
        <download>http://cekirdek.pardus.org.tr/~semen/dist/test/desktop/toolkit/test_pango.py</download>
        <command>python test_pango.py</command>
    </case>
</testcase>

<testcase>
    <package>mpmath</package>
    <case>
        <text>Install ipython package and run below commands:</text>
        <command>
             # ipython
             import mpmath
         </command>
    </case>
</testcase>

<testcase>
    <package>python-M2Crypto</package>
    <case>
        <text>Install ipython package and run below commands:</text>
        <command>
             # ipython
             import M2Crypto
         </command>
    </case>
</testcase>

<testcase>
    <package>winpdb</package>
    <case>
        <text>Install ipython package and run below commands:</text>
        <command>
            # ipython
            import winpdb
        </command>>
        <text>(DeprecationWarning isn't important.)</text>
    </case>
</testcase>

<testcase>
    <package>cython</package>
    <case>
        <text>Install ipython package and run below commands:</text>
        <command>
            # ipython
            import cython
    </command>
    </case>
</testcase>

<testcase>
    <package>lxml</package>
    <case>
        <text>Install ipython package and run below commands:</text>
        <command>
            # ipython
            import lxm
        </command>
    </case>
</testcase>

<testcase>
    <package>python-RuleDispatch</package>
    <case>
        <text>Install ipython package and run below commands:</text>
        <command>
            # ipython
            import dispatch
        </command>
    </case>
</testcase>

<testcase>
<package>python-nose</package>
    <case>
        <text>Install ipython package and run below commands:</text>
        <command>
            # ipython
            import nose
        </command>
    </case>
</testcase>

<testcase>
<package>PyICU</package>
    <case>
        <text>Install ipython package and run below commands:</text>
        <command>
            # ipython
            import PyICU
        </command>
    </case>
</testcase>

<testcase>
    <package>python-simplejson</package>
    <case>
        <text>Install ipython package and run below commands:</text>
        <command>
            # ipython
            import simplejson
        </command>
    </case>
</testcase>

<testcase>
    <package>sun-jre</package>
    <package>sun-jdk</package>
    <package>sun-jdk-demo</package>
    <package>sun-jdk-samples</package>
    <package>sun-jdk-doc</package>
    <case>
        <text> After below packages installation:</text>

        <text>Observe that they run below commands correctly.</text>
        <command>
            # java -version
            # wget http://cekirdek.pardus.org.tr/~semen/dist/test/programming/language/java/test.java
            # javac test.java
            # java test
        </command>
    </case>
</testcase>

<testcase>
    <package>clisp</package>
    <case>
        <text>Run below commands and observe that no error.</text>
        <download>http://cekirdek.pardus.org.tr/~semen/dist/test/programming/language/lisp/test_clisp.lisp </download>
        <command>
            # clisp -c test_clisp.lisp
        </command>
    </case>
</testcase>

<testcase>
    <package>gmime</package>
    <package>gmime-sharp</package>
    <case>
        <text>Observe that the following command encode the jpeg file.</text>
        <download>http://cekirdek.pardus.org.tr/~semen/dist/test/multimedia/graphics/test_dcraw.jpg</download>
        <command>
            # gmime-uuencode -m test_dcraw.jpg jpeg
        </command>
    </case>
</testcase>

<testcase>
    <package>mono</package>
    <case>
        <text>Run below commands and observe that no error.</text>
        <download>http://cekirdek.pardus.org.tr/~semen/dist/test/programming/language/dotnet/test_mono.cs</download>
        <command>
            # mcs test_mono.cs
            # mopno test_mono.exe
        </command>
    </case>
</testcase>

<testcase>
    <package>R</package>
    <case>
        <text>Run below commands and observe that it creates a graph.</text>
        <download>http://cekirdek.pardus.org.tr/~semen/dist/test/programming/language/test_R.R</download>
        <command>
            # R --vanilla --slave < test_R.R
        </command>
    </case>
</testcase>

<testcase>
    <package>R-mathlib</package>
    <case>
        <text>Run below commands and observe that they run correctly.</text>
        <download>http://cekirdek.pardus.org.tr/~semen/dist/test/programming/language/test_r-mathlib.c</download>
        <command>
            # gcc -o test_r-matlib test_r-matlib.c -lm -lRmath
        </command>
    </case>
</testcase>

</document>
