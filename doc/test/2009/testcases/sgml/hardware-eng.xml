<?xml version="1.0" ?>
<!--Author: Semen Cirit-->
<document>
<testcase test="install">
<package>ql2x00-firmware</package>
<package>gutenprint</package>
<package>ccid</package> 
<package>mozilla-opensc-signer</package>
<package>openct</package>
<package>opensc</package>
<package>pcsc-lite</package>
<package>acpi4asus</package>
<package>obexd</package>
<package>gobi_loader</package>
<package>usb-modeswitch</package>
</testcase>

<testcase test="functional">
<package>x86info</package>
<case>
<text>Observe that the below command list the x86 base CPUs.</text>
<command>
# x86info
</command>
</case>
</testcase>

<testcase test="functional">
<package>gkrellm</package>
<case>
<text>Start the gkrellm service from service manager. In order to be sure, type the below command.</text>
<command>
# service gkrellm status
</command>
</case>
</testcase>

<testcase test="functional"> package">
<package>lm_sensors</package>
<case>
<reversedeptest>gkrellm</reversedeptest>
<text>Observe that the below command list information about cpu fan, power fan, voltage etc.</text>
<command>
 # sensors 
</command>
</case>
</testcase>

<testcase test="functional">
<package>sane-backends</package>
<case>
<text>(If you have a scanner you can test this package.)</text>
<command>
# sane-find-scanner
# scanimage 
</command>
<text>Observe that the first command list the available scanners.</text>
<text>Observe that the second command make the scan operation and create a .pnm file.</text>
</case>
</testcase>

<testcase test="functional">
<package>cdrtools</package>
<case>
<text>Burn the below files as an audio cd with k3b. Observe that they are burned without any problem.</text>
<download>http://cekirdek.pardus.org.tr/~semen/dist/test/multimedia/sound/sound/11k16bitpcm.wav</download>
<download>http://cekirdek.pardus.org.tr/~semen/dist/test/multimedia/sound/sound/music.mp3</download>
<download>http://cekirdek.pardus.org.tr/~semen/dist/test/multimedia/video/cokluortam/linux.ogg</download>
</case>
</testcase>

<testcase test="functional">
<package>cdparanoia</package>
<case>
<text>Burn an audio CD with using the below files with k3b. Observe that they are burned without any problem.</text>
<download>http://cekirdek.pardus.org.tr/~semen/dist/test/multimedia/sound/sound/11k16bitpcm.wav</download>
<download>http://cekirdek.pardus.org.tr/~semen/dist/test/multimedia/sound/sound/music.mp3</download>
<download>http://cekirdek.pardus.org.tr/~semen/dist/test/multimedia/video/cokluortam/linux.ogg</download>
<text>Mount the audio cd and run the following commands.</text>
<command>
 # cdparanoia -vsQ
 # cdparanoia -B
</command>
</case>
</testcase>

<testcase test="functional">
<package>k3b</package>
<case>
<text> Burn a DVD and CD with using below files.</text>
<download>http://cekirdek.pardus.org.tr/~semen/dist/test/hardware/optical/boot.iso</download>
</command>
<text>Run this CD/DVD and observe that ISO is booted.</text>
<text>Burn an audio DVD and CD with using below files</text>
<download>http://cekirdek.pardus.org.tr/~semen/dist/test/multimedia/sound/sound.tar</download>
<download>http://cekirdek.pardus.org.tr/~semen/dist/test/multimedia/video/cokluortam.tar</download>
<text>Run this file and try to listen them with amarok.</text>
</case>
</testcase>

<testcase test="functional">
<package>zsnes</package>
<case>
<text>Open this nintendo game with this application and observe that it runs without any problem.</text>
<download>http://cekirdek.pardus.org.tr/~semen/dist/test/hardware/emulator/10YardFight.zip</download>
</case>
</testcase>

<testcase test="functional">
<package>wine</package>
<package>wine-devel</package>
<case>
<text>Download the below game and install it with wine.</text>
<download>http://cekirdek.pardus.org.tr/~semen/dist/test/hardware/emulator/egyptianball_setup.exe</download>
<command>
# wine  egyptianball_setup.exe
</command>
<text>Observe that the game install without any problem.</text>
<text>Follow KMenu -> Wine -> Programs -> MyPlayCity.com -> Egyptian Ball path and open the game and observe taht it runs without any problem.</text>
</case>
</testcase>

<testcase test="functional">
<package>libvirt</package>
<reversedeptest>virtualbox</reversedeptest>
</testcase>

<testcase test="functional">
<package>virtualbox</package>
<package>virtualbox-guestadditions</package>
<package>virt-wrapper</package>

<case>
<text>Run Virtualbox application and create a new virtual system. Observe that the above system run the below bootable iso without any problem.</text>
<download>http://cekirdek.pardus.org.tr/~gokmen/Pardus_Minimal_2009.iso</download>
</case>
</testcase>


<testcase test="functional">
<package>cwiid</package>
<case>
<text> (If you have a Nintendo video game remote controller, you can test this package.)</text>
<text>Open wiimote application and try to activate your remote controller.</text>
</case>
</testcase>

<testcase test="functional">
<package>blueman</package>
<package>kdebluetooth</package>
<case>
<text>(If your mobile phone has a blue tooth and you also have a bluetooth device, you can test this package.)</text>
<text>Open the application and observe that the available bluetooth devices listed on the application screen.</text>
<case>
</testcase>

<testcase test="functional">
<package>partimage</package>
<case>
<text>Observe that the below command execute without any problem.</text>
<command>
 # su -
 # partimage
</command>
</case>
</testcase>

<testcase test="functional">
<package>mountmanager</package>
<case>
<text>Open the application then plug a usb stick and observe that this device is added to mount manager list.</text>
</case>
</testcase>

<testcase test="functional">
<package>partitionmanager</package>
<case>
<text>Open Partitionmanager from kmenu and try to resize a partition and observe that the partition is resized without any problem.</text>
<text>( If you want you can use a usb stick for this operation.)</text>
</case>
</testcase>

<testcase test="functional">
<package>reiserfsprogs</package>
<case>
<text>Plug a usb stick and execute the below commands using the mount point of usb stick. Observe that they run without any problem.</text>
<command>
 # mkreiserfs /dev/"device-path" -f
 # reiserfsck /dev/"device-path"
</command>
</case>
</testcase>

<testcase test="functional">
<package>alsa-driver</package>
<package>alsa-headers</package>
<package>alsa-lib</package>
<package>alsa-plugins</package>
<package>alsa-plugins-pulseaudio</package>
<package>alsa-tools</package>
<package>alsa-utils</package>
<case>
<text>Restart your computer and observe that the kde starting sound runs without any problem.</text>
<text> Run the below file amarok or mplayer and observe that it runs without any problem.</text>
<download>http://cekirdek.pardus.org.tr/~semen/dist/test/multimedia/sound/sound/music.mp3</download>
<command>
# mplayer music.mp3
</command>
</case>
</testcase>

<testcase test="functional">
<package>alsa-tools-gui</pacakge>
<case>
<text>If you have EchoAudio, Envy24, Hammerfall HDSP or RMedigicontrol audio devices you can test this package.</text>
<text>Echomixer application for EchoAudio device.</text>
<text>Envy24control application Envy24 device.</text>
<text>HDSPconf and HDSPmixer applications for Hammerfall HDSP device.</text>
<text>Rmedigicontrol application for RMedigicontrol device.</text>
</case>
</testcase>

<testcase test="functional">
<package>libopensync-plugin-google-calendar</package>
<case>
<text>(If you have an gmail account, you can test this package.)</text>
<text>Install msynctool package.</text>
<text>Activate your calender from http://www.google.com/calendar/feeds/.</text>
<text>Run the below commands and type the necessary information about your account for third and forth command.</text>
<command>
# msynctool --addgroup GoogleCalendar
# msynctool --addmember GoogleCalendar google-calendar
# msynctool --configure GoogleCalendar 1
# msynctool --configure GoogleCalendar 2
# msynctool --sync GoogleCalendar	
</command>
<text>Observe that the calenders syncronized without any problem.</text>
</case>
</testcase>

</document>
