#LyX 1.3 created this file. For more info see http://www.lyx.org/
\lyxformat 221
\textclass article
\language turkish
\inputencoding auto
\fontscheme pslatex
\graphics default
\paperfontsize default
\spacing single 
\papersize Default
\paperpackage a4
\use_geometry 0
\use_amsmath 0
\use_natbib 0
\use_numerical_citations 0
\paperorientation portrait
\secnumdepth 3
\tocdepth 3
\paragraph_separation skip
\defskip medskip
\quotes_language english
\quotes_times 2
\papercolumns 1
\papersides 1
\paperpagestyle default

\layout Title

Pardus Depo Politikasý
\layout Author

T.
 Barýþ Metin
\layout Standard

Belge Pardus paket depolarýný ve bu depolar üzerinde uyulmasý gereken kurallarý
 listeler.
\layout Standard

Belge yalnýzca bir kullaným alanýna yönelik hazýrlanan Pardus iþletim sistemi
 daðýtýmý için kurallarý tarif eder.
 Farklý kullaným alanlarýna yönelik, farklý Pardus daðýtýmlarý (Pardus,
 Pardus Sunucu, vb.) bulunabilir.
 Belgede anlatýlan kurallar her Pardus daðýtýmý için ayrý ayrý uygulanýr.
\layout Standard
\pagebreak_top \pagebreak_bottom 

\begin_inset LatexCommand \tableofcontents{}

\end_inset 


\layout Section

Paket depolarý
\layout Standard

Pardus daðýtýmýnýn bütünü hazýrlanan yazýlým paketlerinin bir araya getirilmesi
 ile oluþturulur.
 Daðýtýma eklenecek her yazýlýmýn öncelikle Pardus paketi olarak hazýrlanmasý
 gerekir.
\layout Standard

Paketlerin hazýrlanmasý ve kullanýma sunulmalarý sürecinde iki farklý yapýda
 paket deposu kullanýlýr:
\layout Itemize

Kaynak paket deposu
\layout Itemize

Ýkili paket depolarý
\layout Section

Kaynak deposu
\layout Standard

Kaynak paket deposu PÝSÝ kaynak dizinlerinin bulunduðu depodur.
 Paketler üzerinde yapýlan tüm geliþtirme kaynak paket deposu üzerinden
 yürütülür.
 PÝSÝ paketleri bu kaynaklar kullanýlarak oluþturulur ve ikili depolara
 yerleþtirilir.
 
\layout Standard

Pardus içerisinde o sýradaki daðýtým sürümü tarafýndan kullanýlan kaynak
 depoda aþaðýdaki gibi iki ana dal bulunur:
\layout Enumerate

Kararlý (stable) dallar
\layout Enumerate

Geliþtirme (development) alaný
\layout Paragraph

Kararlý dallar
\layout Standard

Genel kullaným için yayýnlanmýþ olan daðýtým sürümlerinin kaynak paketlerini
 barýndýran dallardýr.
\layout Standard

Her ilk (major) sürüm numarasý için bir kararlý kaynak dal oluþturulur.
 Örneðin: Pardus 1.0, 1.1 ve 1.2 sürümleri ayný kararlý kaynak dalý üzerinden
 ikili paketler oluþturularak hazýrlanýr.
 
\layout Standard

Kararlý sürümün yayýnlanmasý ile de kaynak depo sürüm numarasý ile etiketlenerek
 (taglanarak) ayrýlýr.
 Etiketlenen bu depo üzerinde geliþtirme yapýlmaz, buradan ikili oluþturulmaz.
\layout Paragraph

Geliþtirme alaný
\layout Standard

Ana geliþtirmenin yapýldýðý, yeni özelliklerin ve paketlerin ilk olarak
 eklendiði alandýr.
\layout Standard

Yeni bir paketin ilk adresi geliþtirme alaný olacaktýr ve Pardus tarafýndan
 daðýtýldýðý sürece geliþtirme alanýnda barýnmaya devam edecektir.
 Paket üzerinde yapýlan geliþtirme ilk bu alana uygulanýr, daha sonra kararlý
 dallara aktarýlabilir.
\layout Standard

Yeni daðýtým sürümleri yayýnlandýkça kararlý olarak iþaretlenmiþ birden
 fazla dal olabilmesine karþýn, bir kullaným alanýna/kullanýcý kitlesine
 hazýrlanan Pardus sürümü için yalnýzca bir tane geliþtirme alaný bulunur.
\layout Subsection

Kaynak paketler için genel iþleyiþ
\layout Standard

Kaynak paket deposu 
\emph on 
subversion
\emph default 
 sürüm kontrol sistemi üzerinde barýndýrýlýr.
 Kararlý sürüm oluþturulacaðý zaman geliþtirme alaný kararlý bir kaynak
 sistem oluþturmak için dallandýrýlýr (branch) ve hazýrlanan yeni dal üzerinde
 kararlý daðýtým sürümü için paketler hazýrlanýr.
\layout Standard

Kaynak paket deposunun sýradüzeni aþaðýdaki gibidir.
\layout Itemize

/
\series bold 
devel
\layout Itemize


\series bold 
/stable
\begin_deeper 
\layout Itemize

/
\series bold 
stable/pardus-1
\layout Itemize


\series bold 
/stable/pardus-2
\layout Itemize

...
\end_deeper 
\layout Itemize


\series bold 
/tags
\begin_deeper 
\layout Itemize


\series bold 
/tags/pardus-1.0
\layout Itemize


\series bold 
/tags/pardus-1.1
\layout Itemize


\series bold 
...
\layout Itemize


\series bold 
/tags/pardus-2.0
\layout Itemize


\series bold 
...
\end_deeper 
\layout Standard

Depo yapýsýnýn kaba görünümü ise aþaðýdaki þekildeki algýlanmalýdýr.
\layout Standard


\begin_inset Graphics
	filename images/kaynakdepo.png

\end_inset 


\layout Standard

Ana geliþtirmenin yapýldýðý devel alaný kararlý sürümler için dallandýrýlýr.
 Kararlý sürüm geliþtirmeleri bu dallar üzerinde yapýlýr.
 Gerekiyorsa geliþtirme alanýnda yapýlan iyileþtirmeler, depo ve bileþen
 sorumlularýnýn kontrolünde kararlý dallara aktarýlabilir.
\layout Standard

Kararlý sürüm alanlarýndan oluþturulacak sürümün yayýnlanmasý ile kararlý
 sürüm etiketlenir ve üzerinde bundan sonra deðiþiklik yapýlmayacak bir
 etiket oluþturulur.
\layout Section

Ýkili paket depolarý
\layout Standard

Ýkili paket depolarý PÝSÝ paketlerinin derlenmiþ ve kuruluma hazýr hallerinin
 bulunduðu depolardýr.
 Pardus içerisinde o sýradaki daðýtým sürümü tarafýndan kullanýlan üç ikili
 depo vardýr:
\layout Enumerate

Kararlý (stable) depo
\layout Enumerate

Kararlý depo için test deposu
\layout Enumerate

Geliþtirme (development) deposu
\layout Standard

Bu ilk depo isminden anlaþýlacaðý üzere yayýnlanmýþ olan kararlý Pardus
 sürümünün paketlerini barýndýrýr.
 Bu depo sürüm çýkana kadar oluþturulmaz veya tümü ile boþ býrakýlýr.
\layout Standard

Ýkinci depo ise kararlý sürüme aktarýlmak üzere hazýrlanmýþ olan paketlerin
 test edildiði depodur.
 Ýkili paketler kararlý sürüm deposuna aktarýlmadan önce bu test deposuna
 aktarýlýr ve test edilmeleri beklenir.
 Her paket için en az test süresi, depo sorumlusunun insiyatifi saklý tutularak,
 2 haftadýr.
 Güvenlik güncellemeleri bu sýnýrýn dýþýnda tutulur.
\layout Standard

Geliþtirme deposu ise bir sonraki kararlý sürüm için hazýrlanmakta olan
 PÝSÝ paketlerini içerisinde barýndýrýr.
\layout Standard


\begin_inset Graphics
	filename images/depolar.png

\end_inset 


\layout Subsection

Ýkili depo kurallarý
\layout Standard

Her depoda yapýlacak güncellemelerde programlar arasý iliþkilerin bozulmamasýna
 azami önem göstermek gerekmektedir.
 API ve ABI'ýn korunmasý esas olarak kabul edilir.
\layout Standard

Kararlý depo üzerinde, yazýlýmlarýn sürüm güncellemeleri ve depoya yeni
 bir yazýlýmýn/paketin eklenmesi yalnýzca deponun kararlýlýðýný ve iþlevini
 korumak için yapýlýr.
 Kararlý sürümde yapýlan güncellemelerin amacý yeni özellikleri kararlý
 sürüme kazandýrmak deðil, sürümün kararlýlýðýný korumak içindir.
 Yine de, eklenecek/güncellencek paket ile daðýtýmýn hedef kitlesine yönelik,
 yaygýn bir kullanýmýn alanýnýn sorunlarý gideriliyorsa depo sorumlusunun
 onayý ile iþlem yapýlýr.
\layout Standard

Bir kararlý depo içerisinde her hangi bir paketin yalnýzca 
\series bold 
tek bir sürüm
\series default 
ü bulunabilir.
 Eðer yazýlýmlarýn farklý sürümlerinin depoda bulunmasý gerekiyorsa bu pakete
 
\series bold 
farklý bir isim
\series default 
 verilerek çözülür.
 Örneðin; gtk1 ve gtk2 paketleri farklý paket isimleri ile depoda bulunmalýdýr.
\layout Subsection

Depo isimlendirmesi
\layout Standard

Ýkili depolar için aþaðýdaki isimler kullanýlýr.
\layout Subsubsection

Kararlý depo
\layout Standard

Her kararlý sürüm, sürüm adý ve sürümün ilk (major) numarasýndan oluþan
 bir depo ismi ile anýlýr.
 Örneðin; yayýnlanmýþ olan Pardus 1.0 sürümü için ilk sürüm numarasý 
\begin_inset Quotes eld
\end_inset 

1
\begin_inset Quotes erd
\end_inset 

dir.
 Bu durumda ikili deponun adý 
\begin_inset Quotes eld
\end_inset 

pardus-1
\begin_inset Quotes erd
\end_inset 

 olacaktýr.
\layout Standard

Ayný ilk sürüm numarasýna sahip her yayýnlanan sürüm için kararlý depo ayný
 olacaktýr.
 Yukarýdaki örnekten yola çýkarak 1.0, 1.1, 1.2 depolarýnýn kullanacaklarý
 kararlý depo 
\begin_inset Quotes eld
\end_inset 

pardus-1
\begin_inset Quotes erd
\end_inset 

 olacaktýr.
\layout Subsubsection

Kararlý depo için test deposu
\layout Standard

Bu depo için, kararlý depo adýnýn sonuna 
\begin_inset Quotes eld
\end_inset 

-test
\begin_inset Quotes erd
\end_inset 

 son eki getirilir.
 pardus-1 kararlý deposu için oluþturulan test deposu 
\begin_inset Quotes eld
\end_inset 

pardus-1-test
\begin_inset Quotes erd
\end_inset 

 olarak adlandýrýlýr.
\layout Subsubsection

Geliþtirme deposu
\layout Standard

Geliþtirme deposu ise bir kullaným alaný için hazýrlanan Pardus için her
 zaman ayný ismi alýr.
 Örneðin; Pardus isimli iþletim sistemi daðýtýmý için geliþtirme deposunun
 ismi her zaman 
\begin_inset Quotes eld
\end_inset 

pardus-devel
\begin_inset Quotes erd
\end_inset 

 olarak isimlendirilecektir.
 Bu isim, geliþtirilmekte olan bir sonraki sürümün numarasýndan baðýmsýzdýr
 ve tektir.
\layout Section

Depoya yeni bir paket eklenmesi
\layout Standard

Paket depolarýna yeni bir paket eklemek için bazý þartlarýn yerine getirilmiþ
 olmasý gerekmektedir.
 Ýki farklý depo (kararlý ve geliþtirme) için farklý kurallar söz konusudur.
 Temel kural olarak yeni bir paketin her zaman 
\series bold 
ilk önce geliþtirme deposuna eklenir
\series default 
.
\layout Standard

Geliþtirme deposuna eklenecek paketler için aþaðýdaki adýmlar izlenir.
\layout Enumerate

Eklenmesi istenen paket için yeni bir hata kaydý açýlýr.
 Paketler üsrünü altýndaki 
\emph on 
_yeni paket
\emph default 
 bileþenine atanýr.
\layout Enumerate

Paketin sorumluluðunu almak isteyen bir geliþtirici paketi hazýrlar.
 Ayný hata raporuna paket dosyalarý eklenir.
\layout Enumerate

Paket üzerinde tartýþýlýr; depoya uygunluðu ve uygunsa hangi bileþen altýna
 yerleþtirileceði depo ve bileþen sorumlularýnca kararlaþtýrýlýr.
\layout Enumerate

Paket SVN deposuna eklenir ve hata kaydý kapatýlýr.
\layout Standard

Geliþtirme deposuna eklenen paket kaynaðýnýn paketin geliþtiricisi tarafýndan
 denenmiþ olmasý gerekir.
 Derlenmeyen ve/veya kurulamayan paket depoya eklenmez.
 Geliþtirme deposuna eklenen paketin kararlýlýðý ve daðýtýma uygunluðu kontrol
 edilir, sorunlarý giderilir, paket kararlý depoya eklenmek için hazýrlanýr.
\layout Standard

Depoya eklenen paketlerin bilinen bir güvenlik açýðý olmamalýdýr.
 Varsa, ilgili güvenlik açýðýný gideren yamasý ile birlikte eklenmelidir.
\layout Standard

Sorunlarýn giderilmesi bölümünde dikkate alýnabilecek bir sorunlar listesi
 aþaðýda listelenmiþtir.
 Paket sorunlarý ve yazýlým sorunlarý ve paketlenen yazýlým sorunlarý iki
 ayrý madde ile anlatýlýr.
\layout Itemize

Paket sorunlarý:
\begin_deeper 
\layout Itemize

Oluþturulan ikili paketler fazla büyük (monolitik).
 Birden fazla pakete bölünebilir mi?
\end_deeper 
\layout Itemize

Yazýlým sorunlarý:
\begin_deeper 
\layout Itemize

Utf-8 uyumsuzluklarý
\layout Itemize

Türkçe çeviri eksikliði
\layout Itemize

Uygulama grafikleri masaüstü ile uyumlu mu?
\layout Itemize

Ön tanýmlý yapýlandýrma seçenekleri
\layout Itemize

Yazýlýmýn bilinen veya yeni bulunan hatalarý
\layout Itemize

Kullanýþlýlýk sorunlarý
\end_deeper 
\layout Standard

Geliþtirme deposuna eklenen paketin sorunlarý giderildikten sonra kararlý
 depoya eklenmeye hak kazanýr.
 Fakat geliþtirme deposuna eklenen tüm paketlerin ileride kararlý depoya
 ekleneceði garantisi yoktur.
 Kararlý depoya geçiþe sürümün kurallarý çerçevesinde sürüm yöneticisi karar
 verir.
\layout Section

Paket geliþtiricileri için kurallar
\layout Standard

Paket geliþtiricileri subversion üzerinde bulunan kaynak deposu üzerinde
 çalýþýrlar.
 Yazýlýmlarýn kaynak kodlarýndan PÝSÝ paketlerinin oluþturulmasý için gerekli
 olan geliþtirme, paket geliþtiricileri tarafýndan yürütülür.
\layout Standard

Paket geliþtiricileri 3 farklý sorumluluk grubu ile listelenebilir.
\layout Enumerate


\series bold 
Depo sorumlusu
\series default 
: Depo sorumlularý tüm depodan sorumlu olan ve tüm depo üzerinde iþlem yapmaya
 yetkili kiþilerdir.
\layout Enumerate


\series bold 
Bileþen sorumlusu
\series default 
: PÝSÝ kaynaklarý tasarým belgesinde anlatýldýðý gibi bir bileþen tanýmý
 yaparlar.
 Bileþen sorumlusu belirli bir bileþene uyan tüm paketlerden sorumu olan
 ve bu paketler üzerinde iþlem yapma yetkisine sahip geliþtiricidir.
 Örnek bileþenler arasýnda, 
\emph on 
system/base, system/devel, dekstop/kde
\emph default 
 sayýlabilir.
\layout Enumerate


\series bold 
Paket geliþtiricisi
\series default 
: Paket geliþtiricisi yalnýzca sorumluluðunu almýþ olduðu paketler üzerinde
 iþlem yapma yetkisine sahiptir.
\layout Standard

Sorumluluk gruplarý sorunlarýn hýzlý bir þekilde giderilebilmesi ve farklý
 boyutlarda kararlarýn hýzlý bir þekilde alýnabilmesi için oluþturulmuþtur.
 Herhangi bir geliþtirici, sorumluluðunu aþan bir müdahale yapmak istediði
 zaman izin isteyerek çalýþabilir.
 Üzerinde anlaþýlmýþ konularda yapýlan düzeltmeler/güncellemeler (örneðin
 uluslararasýlaþtýrma, yerelleþtirme ya da sözdizimi hatalarý gibi) genellike
 izin istemeye gerek duyulmadan kabul edilir :).
\layout Subsection

Genel kurallar
\layout Itemize

Kaynak paket deposu üzerinde çalýþan geliþtiricilerin paket deposu kurallarýna
 ve yayýnlanmýþ bir sürüm zaman planý varsa bu zaman planýna uymasý gerekir.
\layout Itemize

Paket geliþtiricileri hazýrladýklarý PÝSÝ kaynak dizinlerini oluþtururlar,
 fakat PÝSÝ kaynaklarýnýn .pisi ikili paketlerine dönüþtürülmesi doðrudan
 paket geliþtiricileri tarafýndan gerçekleþtirilmez.
 Bununla birlikte, geliþtiricinin kaynak paketi sisteminde oluþturduðu,
 test ettiði ve sorunlarýndan arýndýrdýðý kabul edilir.
\layout Itemize

Geliþtiriciler üzerinde çalýþtýklarý kaynak paket deposunun en güncel versiyonu
 ile çalýþmak zorundadýrlar.
 Bu hem kararlý sürümde, hem de geliþtirme sürümünde yapýlan çalýþma için
 geçerlidir.
 
\layout Itemize

Geliþtiriciler depoya gönderdikleri her paketten sorumludurlar, paketin
 derlenebilir, sorunsuz ve çalýþýr olduðundan emin olmak zorundadýrlar.
 Paket tüm testleri geçmelidir.
\layout Itemize

Eksik veya tamamlanmamýþ paketler depoya asla gönderilmemelidir.
 Her paketin pspec.xml, actions.py dosyalarý doðru olarak yazýlmýþ olmalý.
 Yamalarý ve ek dosyalarý files/ dizini altýnda bulunmalý.
 ÇOMAR betikleri ise comar/ dizini içerisinde bulunmalýdýr.
 Paket derlenebiliyor ve kurulabiliyor olmalýdýr.
\layout Itemize

Geliþtirici ayný anda birden fazla paket ile ilgili depoya gönderim yapmamalýdýr.
 Örneðin; bir geliþtirici 8 paket üzerinde birden deðiþiklik yaptý ise,
 her paket için ayrý ayrý gönderimde bulunmalýdýr (yani toplamda 8 ayrý
 gönderim).
 Kýsaca gönderimler atomik olmalýdýr.
\layout Itemize

Bir geliþtirici bir baþka geliþtiricinin paketine acil durumlar dýþýnda
 (güvenlik açýðý, geliþtiriciye uzun zamandýr ulaþamama gibi) müdahale etmemelid
ir.
 Bu kural KATEGORÝ sorumlulularý için ise sorumlu olduðu kategori dýþýndaki
 paketleri kapsamaktadýr.
 Bunun yerine ilgili paket ile ilgili düzeltmesini paket sorumlusuna veya
 KATEGORÝ sorumlusuna göndermeli ve sorunun ne olduðunu ve nasýl çözüldüðünü
 ayrýntýlý þekilde tarif etmelidir.
\layout Itemize

Depo'ya paket için gerekli yamalar, ek dosyalar veya post/pre betikleri,
 PSPEC dosyasý, actions.py ve ÇOMAR betikleri dýþýnda hiçbir þey konmamalýdýr.
 Paketin kaynak kodu, geliþtiricinin fotoðrafý ya da uygulamaya ait ekran
 görüntüsü de bu kurala dahildir :).
\layout Subsection

Paket isimlendirme kurallarý
\layout Standard

Paket isimlendirmesi ile ilgili kurallar pisi kaynak dizinindeki package_version
s.tex belgesinde detaylý olarak anlatýlmaktadýr.
 Bu bölümde kýsaca bir PÝSÝ paketinin isimlendirmesi anlatýlacaktýr.
 Bu kural serisine uymayan isimlendirmeler hatalý kabul edilir.
\layout Enumerate

Bir pisi paketinin isimlendirme kuralý þu þekilde formülize edilebilir.
 PAKET-VERSÝYON{_sonekNUMARA}-REVÝZYON.
 
\layout Enumerate

Paket ismi ana geliþtiricinin pakete verdiði isimdir, deðiþtirilemez fakat
 geniþletilebilir (kaynaðýnýn paketlenmesi sýrasýnda oluþturulacak bir alt
 paket gcc-doc olarak isimlendirilebilir)
\layout Enumerate

Paket versiyonu ana geliþtiricinin pakete verdiði sürüm numarasýdýr, deðiþtirile
mez.
 (util-linuz-2.4z, kernel-2.6.9.4, gcc-3.3.6 gibi)
\layout Enumerate

_sonek ile belirtilen kýsým 
\begin_inset Quotes eld
\end_inset 

alpha
\begin_inset Quotes erd
\end_inset 

, 
\begin_inset Quotes eld
\end_inset 

beta
\begin_inset Quotes erd
\end_inset 

, 
\begin_inset Quotes eld
\end_inset 

pre
\begin_inset Quotes erd
\end_inset 

, 
\begin_inset Quotes eld
\end_inset 

rc
\begin_inset Quotes erd
\end_inset 

 ve 
\begin_inset Quotes eld
\end_inset 

p [patch level]
\begin_inset Quotes erd
\end_inset 

 den biri olabilir.
 Bunlarýn kendi arasýnda sýralamasý þöyledir; alpha < beta < pre < rc <
 Son eksiz paket < p.
 (1.1_alpha1 < 1.1_beta1 < 1.1 < 1.1_p4 )
\layout Enumerate

Revizyon geliþtirici tarafýndan pakete verilen ve devamlý artan bir sayýdýr.
 Pakete yapýlan deðiþikliklerde bu revizyon numarasý 
\bar under 
her zaman
\bar default 
 arttýrýlmalýdýr.
\layout Section

Belgeye katkýda bulunanlar
\layout Itemize

S.
 Çaðlar Onur
\the_end
