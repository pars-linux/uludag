#LyX 1.3 created this file. For more info see http://www.lyx.org/
\lyxformat 221
\textclass article
\begin_preamble
\usepackage{hyperref}
\end_preamble
\language turkish
\inputencoding auto
\fontscheme pslatex
\graphics default
\paperfontsize default
\spacing single 
\papersize Default
\paperpackage a4
\use_geometry 0
\use_amsmath 0
\use_natbib 0
\use_numerical_citations 0
\paperorientation portrait
\secnumdepth 3
\tocdepth 3
\paragraph_separation skip
\defskip medskip
\quotes_language english
\quotes_times 2
\papercolumns 1
\papersides 1
\paperpagestyle default

\layout Title

PISI Paket Yöneticisi: Gereklilikler ve Tasarým (Versiyon 0.2)
\newline 
(Packages Installed Successfully as Intended)
\layout Author

S.
 Çaðlar Onur, Barýþ Metin, Eray Özkural, Gürer Özen, A.
 Murat Eren, Onur Küçük
\layout Date

(Alpha)
\layout Standard
\pagebreak_bottom 

\begin_inset LatexCommand \tableofcontents{}

\end_inset 


\layout Section

Giriþ
\layout Standard

Bu belge Pardus projesi kapsamýnda geliþtirilen PÝSÝ paket yönetim sistemin,
 hangi amaçlar ve gerekler ile geliþtirildiðini, genel yapýsýný ve mimarisini
 anlatýr.
\layout Standard
\pagebreak_bottom 
Belgenin hedef kitlesi PÝSÝ sistemini yakýndan tanýmak isteyen kullanýcýlar,
 sistem yöneticileri ve PÝSÝ üzerinde çalýþmak isteyen geliþtiricilerdir.
 Belge bir son kullanýcý belgesi deðildir.
 Belge kapsamýnda ele alýnan konularý kavrayabilmek için yer yer paket yönetim
 sistemleri konusunda genel bilgi ve diðer paket yönetim sistemleri üzerinde
 deneyim gerekmektedir.
\layout Section

Paket Yöneticisi Gereksinimleri
\layout Standard

Bu kýsýmda önceki bölümde tanýmlanan paket yöneticisi kavramýnýn, sunmasý
 beklenen gereksinimler listelenmiþtir.
\layout Standard

Fakat önce paket ve paket yöneticisi kavramlarýna kýsa bir göz atalým.
\layout Subsection

Paket Yöneticisi
\layout Standard

Paket, bir uygulamayý ya da iþletim sisteminin bir parçasýný tüm bileþenleriyle
 toplu olarak ifade eden bir kavramdýr.
 Uygulamalarýn bir yerden bir yere taþýnmasý (örneðin bir CD yada að kaynaðýndan
 gelip, sisteme kurulmasý) sýrasýnda bazý bileþenlerin geride unutulmamasýný
 saðlar.
 Bir sistemdeki onbinlerce dosyayý, görevleri ve ait olduklarý uygulamalar
 bazýnda birkaç yüz pakete ayýrarak yönetilebilir kýlar.
 Kullanýcýnýn büyük bir sistemde neler bulunduðuna hakim olabilmesini kolaylaþtý
rýr.
\layout Standard

Bu paketleri kurup kaldýrmak, çeþitli kaynaklardan temin etmek, sorgulamak,
 sistemdeki deðiþiklikleri takip etmek için, paket yöneticisi adýný verdiðimiz
 bir uygulamaya ihtiyaç vardýr.
\layout Subsection

Kullanýcý Gereksinimleri
\layout Standard

Kullanýcý gereksinimleri, biliþim okuryazarý olarak daha önce tanýmladýðýmýz
\begin_inset Foot
collapsed true

\layout Standard


\begin_inset LatexCommand \url{http://www.uludag.org.tr/belgeler/okuryazar/okuryazar.html}

\end_inset 


\end_inset 

 kullanýcý profiline baðlý kalýnarak çýkarýlmýþtýr.
\layout Itemize

Biliþim okuryazarýnýn temel isteði, sisteme istediði uygulamalarý kolayca
 kurabilmekten ibarettir.
\begin_deeper 
\layout Itemize

Kur emri, komut satýrýndan, grafik arayüzlerden, ya da sistemin otomatik
 olarak bir pakete ihtiyaç olduðunu saptamasýyla kolayca verilebilmeli,
 bu görev mümkün olduðunca soru sorulmadan ve kullanýcýyý rahatsýz etmeden
 yerine getirilmelidir.
\layout Itemize

Kullanýcý, paketin sistemde doðru þekilde çalýþabilmesi için gerekli olan
 yapýlandýrma gereksinimlerinin karþýlanmasýndan mümkün olduðunca yalýtýlmalýdýr.
 Yapýlandýrma ile ilgili görevler paket yöneticisi dýþýndaki bir araçla
 otomatik saðlanmalý, ya da kullanýcýnýn verdiði emirlerle sonradan yapýlabilmel
idir.
 
\layout Itemize

Kurulum mümkün olduðunca hýzlý olmalýdýr.
\end_deeper 
\layout Itemize

Kurulu programlarýn yeni sürümleri çýktýkça, veya üzerinde düzeltmeler ve
 güvenlik onarýmlarý yapýlmýþ yeni paket sürümleri yayýmlandýkça, kullanýcý
 elindeki uygulamalarý güncellemek isteyecektir.
\begin_deeper 
\layout Itemize

Kullanýcý vakti yada að baðlantý hýzý yetersiz olduðunda acil önem taþýyan
 ve yapýlmasý gerekli güncellemeleri, diðerlerinden kolayca ayýrabilmelidir;
 bunun yapýlabilmesi için paketin her sürümündeki güncellemelerin önem derecesi
 (yeni özellikler, hata düzeltmeleri, güvenlik açýðý düzeltmesi) paketleme
 esnasýnda belirtilebilmelidir.
\layout Itemize

Bir paketin eski veya deneysel sürümlerini kurmak biliþim okuryazarýnýn
 bir ihtiyacý deðildir.
 Dolayýsýyla eski sürümler ve geliþtirme sürümleri alternatifleri ile kullanýcýn
ýn kafasýnýn karýþtýrýlmamasý için; kullanýcý paketler deposunda her eriþtiðinde
 en son düzeltmeleri içeren son ve tek bir sürüme ulaþabilmelidir.
 Bu hem basitlik saðlar, hem de kullanýcýnýn istemeyerek yanlýþ bir paket
 kurmasýnýn önüne geçer.
\layout Itemize

Paket güncelleme ile ilgili paket bazýnda ayrý ayrý politikalar belirlenmesi
 yukarda bahsedilen kullanýcý profilinden bakýldýðýnda gereksiz ve kafa
 karýþtýrýcýdýr.
\end_deeper 
\layout Itemize

Nerdeyse her uygulama kendi sürüm numarasý verme politikasýna sahip olduðundan,
 paketin asýl sürüm numarasý yanýnda, düzenli olarak artacak bir numara
 daha vererek, kullanýcýnýn kolayca hangi sürümlerin yeni olduðunu ayýrt
 edebilmesi saðlanabilmelidir (ayný uygulama sürümünün çeþitli hata düzeltmeleri
 içeren farklý paket sürümleri olabileceði de düþünülürse bunun önemi daha
 net bir þekilde ortaya çýkmaktadýr).
\layout Itemize

Kullanýcý, artýk ihtiyaç duymadýðý bir uygulamayý, yer ve takip tasarrufu
 amacýyla kaldýrmak isteyebilir.
 Kullanýcýnýn bu seçimi kolayca yapabilmesi için, hiç bir paket tarafýndan
 ihtiyaç duyulmayan paketler, kurulu paketlerin kapladýðý alan gibi bilgiler
 paket yöneticisinden kolayca alýnabilmelidir.
\layout Itemize

Kullanýcý sistemde nelerin kurulu olduðunu, hangi paketleri kurabileceðini,
 kurulu paketlere ait bilgileri, sistemdeki bir bileþen veya dosyanýn hangi
 uygulamaya ait olduðunu ve benzeri paket yöneticisinden kolayca alabilmelidir.
\layout Itemize

Paketler farklý hedeflere kurulabilecek biçimde 
\begin_inset Quotes eld
\end_inset 


\emph on 
relocatable
\emph default 

\begin_inset Quotes erd
\end_inset 

 özellik taþýmalýdýr (bu, farklý hedeflere kurulum, ya da baþkasýna ait
 sistemde ev dizinine kurulum gibi yeteneklerin saðlanmasý için gereklidir).
\layout Itemize

Paket bileþenlerinin deðiþip deðiþmediði kontrol toplamlarý, özet fonksiyonlarý
 yardýmýyla tespit edilebilmelidir.
 Paket yöneticisinin böyle bir durumu kontrol edebilmesi, ve örneðin bir
 kullanýcý hatasý sonucu silinen/deðiþen dosyalarý tekrar temin edip düzeltebilm
esi kullanýcýya kolaylýk saðlar.
\layout Itemize

Uygulamayý kod olarak çekip, sisteme özel deðiþik ayarlar ile derleyebilecek
 Gentoo benzeri bir özellik gereklerimiz arasýnda deðildir.
 Bu tür bir özellik ayný kodun farklý makinalarda farklý ikili paketler
 oluþturmasýna ve teknik destek saðlamanýn zorlaþmasýna yol açacaktýr.
\layout Subsection

Paketleyici/Geliþtirici Gereksinimleri
\layout Itemize

Paket hazýrlamak kolay olmalýdýr.
 Paket hazýrlanýrken ve inþa edilirken gerekli dosyalar bir çok ayrý kaynaktan
 temin edilebilmelidir.
 
\layout Itemize

Pakete ait bilgiler iyi tanýmlanmýþ bir formatta, kolayca eriþilebilir olarak
 tutulmalýdýr.
 Böylece paketleri iþleyen araçlar yapmak kolaylaþacak, ilerde veri baðýmlýlýðý
 sorunlarý olmayacaktýr.
\layout Itemize

Kolayca paket oluþturabilmek için, tercihen bir grafik arayüz ile paket
 hazýrlanabilmelidir.
 Paket yöneticisi, üst geliþtirici kodunu alýp, gerekli bilgileri hazýrlatacak,
 gerekli iþaretlemeleri kolayca yapabilecek bir araç sunmalýdýr.
\layout Itemize

Paket yöneticisinin geliþtirme sistemi, paketleyici hatalarýnýn gözden kaçmasýný
 zorlaþtýracak araçlar sunmalýdýr.
\layout Subsection

Paket Kaynaðý Gereksinimleri
\layout Itemize

Paketler CD, Internet, uzak dosya sistemi gibi çeþitli kaynaklardan kurulabilmel
idir.
 Temel olarak iki tip kaynak sözkonusudur.
\layout Itemize

Ýlk tip, pakedi tek bir dosya olarak taþýyabilen ve programý depolama aygýtlarý,
 e-posta ve benzeri yollarla daðýtmaya uygun bir arþiv dosyasýdýr.
\begin_deeper 
\layout Itemize

Bu arþiv içinden, arþiv hakkýnda bilgi alýnabilecek dosyalara, bütün arþivi
 açmadan eriþilebilmelidir.
\layout Itemize

Mümkünse arþivin yaygýn olarak bilinen ve kullanýlan araçlarla açýlabilmesinde
 yarar vardýr.
\end_deeper 
\layout Itemize

Ýkinci tip kaynak ise Internet yada yerel að üzerinden bir paket grubunun
 indeks bilgilerini ve kendilerini sunabilecek bir 
\begin_inset Quotes eld
\end_inset 

depo
\begin_inset Quotes erd
\end_inset 

 sunucusudur.
\begin_deeper 
\layout Itemize

Depodaki deðiþikliklerin listesi, yerel paket listesiyle mümkün olan en
 az veri iletimi ile senkron edilebilmelidir.
 Bu að kaynaklarýnýn verimli kullanýmý ve yeni sürümlerin hýzlýca takip
 edilebilmesi için gereklidir.
\end_deeper 
\layout Itemize

Paketler birden fazla kaynaktan temin edilebilmelidir.
\layout Subsection

Güvenlik Gereksinimleri
\layout Itemize

CD, Internet gibi deðiþik yollarla temin edilen paketlerin kim tarafýndan
 paketlendiði bilgisi ve içeriðinin yolda deðiþmediði garantisi için bir
 dijital imza sistemi desteklenmelidir.
\layout Itemize

Gerektiðinde pakedi oluþturan kiþinin imzasý dýþýnda, üçüncü parti kurum
 veya kiþilerin de pakedi deneyip, güvendiðini belirtebilmesi için, birden
 fazla kiþi tarafýndan pakedin imzalanabilmesi gereklidir.
\layout Subsection

Kurumsal Gereksinimler
\layout Itemize

Paket yöneticisi birden fazla paket kaynaðý ile ayný anda sorunsuz bir þekilde
 çalýþabilmelidir.
\layout Itemize

Kurumlar ya da bireyler tarafýndan 
\emph on 
ön tanýmlý depoda da bulunan
\emph default 
 kimi paketlerin deðiþtirilmiþ versiyonlarýnýn bulunduðu depolar 
\emph on 
overlay
\emph default 
 olarak tanýmlanabilmelidir.
\layout Itemize

Ön tanýmlý depoda 
\emph on 
bulunmayan
\emph default 
 çeþitli paketlerin bulunduðu depolar 
\emph on 
addon
\emph default 
 olarak tanýmlanabilmelidir.
\layout Section

Neden PÝSÝ?
\layout Standard

Hali hazýrda varolan ve geniþ bir kullaným oranýna sahip paket yöneticileri
 (RPM, DPKG ve Portage) yukarda saydýðýmýz gereksinimlerin kimilerini bizim
 olmasý gerektiðini düþündüðümüz basitlikte yerine getirememekte, kimilerini
 de hiç vaad etmemektedirler.
 Bu paket yöneticilerinin geliþtirilmesi ve istenen noktaya getirilmeye
 çalýþýlmasý yeni ve ayaklarý yere daha saðlam basan bir paket yöneticisini
 yeniden yazmaktan daha kolay deðildir.
\layout Standard

Daha önemlisi, varolan paket yöneticilerinin paket formatlarýnda 
\emph on 
görev
\emph default 
leri ve 
\emph on 
bilgi
\emph default 
leri birbirinden düzgün bir biçimde ayrýlmadýklarý görülmektedir.
 Bu araçlar basit olarak hazýrlanmýþ ve zaman içinde ortaya çýkan ihtiyaçlarý
 karþýlamak için sürekli yeni özellikler eklenerek bugünkü hallerine gelmiþlerdi
r.
 Bunun getirdiði karmaþýklýðý temizlemek için aþaðýdaki iki ilkeyi temel
 alan yeni bir paket yöneticisinin yazýlmasýna karar verilmiþtir:
\layout Itemize


\series bold 
Kurulum ve yapýlandýrma birbirinden ayrý iki görevdir
\series default 
.
 Kurulum, yalnýzca programlarýn kurulumu, güncellenmesi ve kaldýrýlmasý
 esnasýnda iþ görürken, yapýlandýrma hem kurulumda hem de çalýþan sistemde
 söz konusudur.
 Bu ayrý görevleri sorumluluk sýnýrlarý belirlenmiþ ayrý araçlarýn yerine
 getirmesi uygundur.
 Uludað projesi için yapýlandýrma iþlerini yürütecek araç 
\series bold 
ÇOMAR
\series default 
'dýr.
 
\series bold 
PÝSÝ
\series default 
 bu görevleri
\series bold 
 ÇOMAR
\series default 
'a devredecektir.
\layout Itemize


\series bold 
Paket meta bilgileri ile paketin derlenme ve kurulumunu yöneten betikler
 iç içe geçmemelidir
\series default 
.
 Varolan paket yöneticilerinde paket tanýmlama dosyalarý kod ile bilginin
 birbirine karýþtýðý, araçlarla iþlemesi, içinden bilgi çýkarýlmasý zor,
 net ve kesin tanýmlanmamýþ biçimlerdedir.
\layout Section

PÝSÝ Tasarýmý
\layout Standard

PÝSÝ paket sisteminin tasarýmý gerekler bölümünde anlatýlan kriterlere uygun
 bir þekilde yapýlmýþtýr.
 Bu gerekler burada tekrar açýklanmayacak yalnýzca PÝSÝ'nin temel parçalarý
 anlatýlacaktýr.
\layout Standard

Paket sistemi doðrudan ikili (derlenmiþ) paketler üzerinde çalýþacak bir
 þekilde tasarlanmýþtýr.
 Bununla birlikte kaynak paketler üzerinden çalýþmanýn da mümkün olmasýna
 dikkat edilmiþtir.
 PÝSÝ ikili paketler üzerinden temel paket iþlevlerini (paket kurma/kaldýrma)
 yerine getirir.
 Ýkili paketler ise kaynak paketlerin PÝSÝ ile derlenmesi ile oluþturulur.
\layout Standard

Bu baðlamda, PÝSÝ kaynak ve ikili paketlere farklý davranmaktadýr.
 Kaynak ve ikili paketlerin görünümü de farklýlýk sergiler.
 Bu bölüm içerisinde kaynak paketler ve ikili paketler ile ilgili detaylý
 bir anlatým yer alýyor.
 Fakat önce PÝSÝ'nin temelini oluþturan PÝSÝ çekirdeði/kütüphanesinin temel
 iþlevlerinden bahsedeceðiz.
\layout Standard

Paket sisteminin ana iþlevleri bir kütüphane (python package) tarafýndan
 saðlanmaktadýr.
 Arayüzler ve yardýmcý araçlar bu kütüphanenin saðladýðý iþlevleri kullanarak
 görevlerini yerine getirirler.
 Kütüphanenin temel görevleri aþaðýdaki liste ile özetlenebilir.
\layout Itemize

Paket deposu iþlevleri
\begin_deeper 
\layout Itemize

depo ekleme
\layout Itemize

depo silme
\layout Itemize

aktif depolarý listeleme
\layout Itemize

depodan kuruluma hazýr paketleri listeleme
\end_deeper 
\layout Itemize

Ýkili paket iþlevleri
\begin_deeper 
\layout Itemize

Paket kurulumu
\begin_deeper 
\layout Itemize

tek bir (baðýmsýz) paketi sisteme kurma
\layout Itemize

depo üzerinden paket indirme ve kurma
\end_deeper 
\layout Itemize

Paket kaldýrma
\begin_deeper 
\layout Itemize

kurulu bir paketi kaldýrma
\end_deeper 
\layout Itemize

Ýkili paket üzerinde yapýlan diðer iþlemler
\begin_deeper 
\layout Itemize

paket hakkýnda bilgisi alma
\layout Itemize

ikili paketin içeriðini açma
\layout Itemize

ikili paket içerisinden yalnýzca istenen dosya/dizini çýkarma
\end_deeper 
\end_deeper 
\layout Itemize

Kaynak paket iþlevleri
\begin_deeper 
\layout Itemize

kaynak paket üzerinden, taným dosyasýný vererek, paket oluþturma
\layout Itemize

paket taným dosyalarýný (PSPEC) okuma/iþleme
\layout Itemize

taným dosyasýnda belirtilen uygulama kaynaðýný çekme
\layout Itemize

farklý dosya tiplerini (zip, tar, tar.gz, tar.bz2) açma
\layout Itemize

paket oluþturma betiklerini (actions.py) çalýþtýrma
\end_deeper 
\layout Itemize

Diðer iþlevler
\begin_deeper 
\layout Itemize

Baðýmlýlýk çözümleme
\layout Itemize

Uzak baðlantýlar ile çalýþma (ftp, http, https, vb.): paket kurma, taným
 dosyasý üzerinden paket oluþturma, vb.
\layout Itemize

Kurulu paketler veritabanýný güncelleme (yeni girdi ekleme, girdi silme
 veya bir girdiyi güncelleme)
\layout Itemize

Dosya sistemini paket iþlemleri için sorgulama (bir paketin kurulumu için
 diskte yeteri kadar boþ yer bulunuyor mu?)
\layout Itemize

Dosya özetlerini (hash) oluþturma ve doðruluklarýný kontrol etme.
\layout Itemize

Paketi imzalama ve imzanýn doðruluðunu kontrol etme.
\layout Itemize


\series bold 
ÇOMAR
\series default 
 sistemi ile iletiþim kurma (CSL betiklerinin 
\series bold 
ÇOMAR
\series default 
'a bildirilmesi, betiklerin 
\series bold 
ÇOMAR
\series default 
'dan kaldýrýlmasý)
\end_deeper 
\layout Standard

PÝSÝ iþlevlerini kullanmak isteyen bir geliþtirici basitçe PÝSÝ ile saðlanan
 pisi Python paketini kullanarak yukarýdaki iþlevlere sahip olabilir.
\layout Subsection

PÝSÝ Sözlüðü
\layout Standard

Bu kýsa bölüm belge içerisinde sýklýkla karþýlaþacaðýnýz bazý kavramlara
 açýklamalar getirecektir.
\layout Itemize


\series bold 
PÝSÝ:
\series default 
 Paket yönetim sisteminin adýdýr.
\layout Itemize


\series bold 
PÝSÝ ikili paketi:
\series default 
 Sisteme kurulmak için hazýrlanmýþ/derlenmiþ olan ikili pakettir.
\layout Itemize


\series bold 
PÝSÝ Kaynak Paketi:
\series default 
 Ýkili paketlerin oluþturulduðu derlenmek için hazýrlanmýþ pisi paketidir.
 
\begin_inset Quotes eld
\end_inset 

PÝSÝ kaynak dizini
\begin_inset Quotes erd
\end_inset 

 olarak da isimlendirilebilir.
\layout Itemize


\series bold 
Ýkili PÝSÝ Deposu:
\series default 
 Ýkili paketlerin oluþturduðu depoya verilen isimdir.
\layout Itemize


\series bold 
Kaynak PÝSÝ Deposu: 
\series default 
Kaynak paketlerin bulunduðu depoya verilen isimdir.
\layout Subsection

PÝSÝ Kaynak Paketi
\layout Standard

Bu kýsýmda bir PÝSÝ kaynak paketinin bileþenleri anlatýlacaktýr.
 PÝSÝ kaynak paketi temel olarak bir taným dosyasý (PSPEC dosyasý) paketin
 oluþturulmasýný saðlayan bir Python betiði (actions.py) ve ek dosyalarýn
 bulunduðu iki dizinden (comar/ ve files/ dizinleri) oluþur.
\layout Standard

Tüm bu dosyalar bir dizin içerisinde toplanýr ve bu dizine 
\emph on 
PÝSÝ kaynak paketi
\emph default 
 (veya 
\emph on 
PÝSÝ kaynak dizini
\emph default 
) adý verilir.
 Örneðin fontconfig kaynak dizini içerisinde aþaðýdaki dosyalar bulunur:
\layout Itemize

pspec.xml
\layout Itemize

actions.py
\layout Itemize


\series bold 
files/
\begin_deeper 
\layout Itemize

fontconfig-2.1-slighthint.patch
\layout Itemize

fontconfig-2.2-local_fontdir-r1.patch
\layout Itemize

fontconfig-2.2-remove_subpixel_test.patch
\layout Itemize

fontconfig-2.2-blacklist.patch
\end_deeper 
\layout Itemize


\series bold 
comar/
\begin_deeper 
\layout Itemize

package.py
\end_deeper 
\layout Standard

Kaynak paket içerisinde bulunan dosyalar bundan sonraki alt bölümlerde detaylý
 olarak açýklanmaktadýr.
\layout Subsubsection

PSPEC Dosyasý
\layout Standard


\series bold 
PSPEC (PÝSÝ SPECification)
\series default 
 dosyasý paketin oluþturulmasý için gerekli olan temel bilgiyi tanýmlar.
 Oluþturulacak paketin ne olduðu, kaynaðý, kim tarafýndan paketlendiði,
 kaynaða uygulanan yamalar, hangi baþka paketlere ne tür baðýmlýlýklar içerdiði
 gibi bilgileri içerir.
\layout Standard

Bir 
\series bold 
PSPEC
\series default 
 dosyasýndan, dolayýsý ile bir kaynaktan birden fazla paket oluþturulabilir.
 Örneðin kcontrol paketi kdebase-kaynaksürümü.paketsürümü.tar.gz kaynaðýndan
 oluþturulabilecek yalnýzca bir pakettir.
\layout Standard

Dosya biçimi XML'dir ve aþaðýdaki etiketleri içerir.
 Her 
\series bold 
PSPEC
\series default 
 dosyasýnda tüm etiketlerin bulunmasý zorunlu deðildir.
 Bulunmasý zorunlu olan etiketler aþaðýda (*) ile belirtilmiþtir.
\layout Standard


\series bold 
PSPEC
\series default 
 dosyalarý 
\series bold 
PSPEC
\series default 
 deposunda pakete ait dizinde 
\series bold 
pspec.xml
\series default 
 adý ile tutulurlar.
\layout Standard

Her 
\series bold 
PSPEC
\series default 
 dosyasý 
\series bold 
PÝSÝ
\series default 
 etiketi (tag) altýnda bir 
\emph on 
Source
\emph default 
 ve 
\bar under 
en az
\bar default 
 bir 
\emph on 
Package
\emph default 
 olmak üzere iki ana bölüm içermek zorundadýrlar.
\layout Subparagraph

Source
\layout Itemize


\series bold 
Name
\series default 
: (*) Uygulamanýn adý.
\layout Itemize


\series bold 
Homepage: 
\series default 
Uygulamanýn web sitesinin URL'sini belirtir.
\layout Itemize


\series bold 
Summary:
\series default 
 (*) Tek satýrlýk açýklayýcý bilgi.
 Çoklu dil desteðine sahiptir.
\layout Itemize


\series bold 
Description:
\series default 
 (*)
\series bold 
 
\series default 
Uygulama hakkýnda özet açýklama.
 Çoklu dil desteðine sahiptir.
\layout Itemize


\series bold 
IsA: 
\series default 
Paketin bir kategori/sistem/kolleksiyon'a aitliðini belirtir.
 Bir uygulamanýn yaptýðý iþi, ait olduðu kategoriyi belirtir yani uygulamalarýn
 sýfatlarýdýr.
 Bu bilgi kullanýlarak bir iþi ya da iþler grubunu yapan uygulamalar sorgulanabi
lir.
 Örneðin PDF Gösteren uygulamalarý göster, Ogg çalan ve konsoldan çalýþan
 uygulamalar hangileridir gibi.
\layout Itemize


\series bold 
PartOf: 
\series default 
Paketin hangi bütünün/grubun parçasý olduðunu belirtir.
 Aitlik özellikleri için Freshmeat'in Trove kategorileri örnek verilebilir.
 Bir paketler bütününden oluþan anlamlý ve kurulabilir birliði temsil eder.
 Yani uygulamalarý kapsüller.
 Örneðin KDE Component'ý içinde kdebase, kdepim, kdemultimedia v.s gibi kaynaklar
ý bulundurur, kdebase ise kcontrol, konqueror v.s.
 gibi paketlerden oluþur.
 Bu bilgi kullanýlarak örneðin KDE Component'ýný sisteme kur, kaldýr, güncelle
 gibi eylemler gerçekleþtirilebilir.
 Örn: 
\begin_inset Quotes eld
\end_inset 

LyX and TeTex are parts of Tex:Distrubiton
\begin_inset Quotes erd
\end_inset 


\newline 

\series bold 
IsA
\series default 
 ve 
\series bold 
ParfOf
\series default 
 bir 
\series bold 
PÝSÝ
\series default 
 paketinin farklý türdeki aitliklerini ifade eder.
 
\series bold 
PartOf
\series default 
 ile belirtilen bir 
\series bold 
Component
\series default 
'in tümünü sisteme kurabilirsiniz.
 Fakat 
\series bold 
IsA
\series default 
 ile belirtilen aitlikleri yanlýzca sorgulayabilirsiniz.
\newline 

\emph on 
Source ve Package
\emph default 
 taglarý içerisinde yalnýzca birer tane 
\series bold 
PartOf
\series default 
 tanýmlanabiliyor olmasýna karþýn, birden fazla 
\series bold 
IsA
\series default 
 tanýmlanabilir.
\layout Itemize


\series bold 
Packager:
\series default 
 (*)
\series bold 
 
\series default 
Paketi oluþturan kiþilerin adý/soyadý ve e-posta adresi belirtir.
\begin_deeper 
\layout Itemize


\series bold 
Name:
\series default 
 (*) Paket oluþturan kiþinin adý ve soyadý.
\layout Itemize


\series bold 
Email:
\series default 
 (*) Paket oluþturan kiþinin e-posta adresi.
\end_deeper 
\layout Itemize


\series bold 
License
\series default 
: (*) Uygulamanýn lisansýný belirtir (GPL, BSD, vb).
\layout Itemize


\series bold 
Archive:
\series default 
 (*) Uygulamanýn orjinal kaynak kodunun bulunduðu URL'yi belirtir.
 
\series bold 
archType
\series default 
 arþiv tipini (tar.gz, tar.bz2, zip, vb) belirtirken, 
\series bold 
sha1sum
\series default 
, sha1 ile alýnmýþ özet deðerini belirtir.
 Her iki attribute (archType ve sha1sum) zorunludur.
\layout Itemize


\series bold 
Patches
\series default 
: Orjinal koda uygulanacak yamalarýn 
\series bold 
sýralý
\series default 
 bir listesini içerir.
 Yamalar bu bölümde tanýmlanan sýra ile kaynak koda uygulanýr.
\begin_deeper 
\layout Itemize


\series bold 
Patch
\series default 
: Yamanýn dosya adýný içerir.
 
\series bold 
compressionType
\series default 
 ile varsa sýkýþtýrma biçimi (gz, bz2, vb) verilebilir.
 
\series bold 
level
\series default 
 ile yamanýn patch komutuna seviye verilebilir, level verilmez ise seviye
 0 olarak kabul edilir.
 Örnek: 
\newline 
<Patch compressionType="gz" level="1">popt-1.7-uclibc.patch.gz</Patch>
\end_deeper 
\layout Itemize


\series bold 
BuildDependencies
\series default 
: Pakedi oluþturmak için gereken baðýmlýlýklarý listeler.
\begin_deeper 
\layout Itemize


\series bold 
Dependency
\series default 
: Bir baðýmlýlýðý tanýmlar.
 Burada bahsedilen baðýmlýlýk paket baðýmlýlýðý olabilir.
 
\series bold 
versionFrom
\series default 
 ve 
\series bold 
versionTo
\series default 
 attribute bilgileri ile paketin hangi sürüm numarasýna baðýmlý olduðu ifade
 edilebilir.
 Örnek:
\newline 
<Dependency versionFrom="1.8">automake</Dependency>
\end_deeper 
\layout Subparagraph

Package:
\series medium 
 (*)
\series default 
 
\series medium 
Uygulamadan oluþturulacak bir pakedi tanýmlar.
 Her 
\series default 
PSPEC
\series medium 
 dosyasý en az bir 
\series default 
Package
\series medium 
 etiketi içermek zorundadýr.
\layout Subparagraph

Package
\series medium 
 içerisindeki bazý taglar 
\emph on 
Source
\emph default 
 içerisindekileri tekrarlayabilir.
 Bu tekrarlamalarýn bazýlarý üzerine yazýlýrken (override) bazýlarý birleþtirile
cektir (merge).
\layout Itemize


\series bold 
Name 
\series default 
(tanýmlý ise 
\emph on 
Source
\emph default 
 bölümündekinin yerine kullanýlýr)
\layout Itemize


\series bold 
Summary 
\series default 
(tanýmlý ise 
\emph on 
Source
\emph default 
 bölümündekinin yerine kullanýlýr)
\layout Itemize


\series bold 
Description 
\series default 
(tanýmlý ise 
\emph on 
Source
\emph default 
 bölümündekinin yerine kullanýlýr)
\layout Itemize


\series bold 
License 
\series default 
(tanýmlý ise 
\emph on 
Source
\emph default 
 bölümündekinin yerine kullanýlýr)
\layout Itemize


\series bold 
IsA 
\series default 
(tanýmlý ise 
\emph on 
Source
\emph default 
 bölümündeki ile birleþtirilir)
\layout Itemize


\series bold 
PartOf 
\series default 
(tanýmlý ise 
\emph on 
Source
\emph default 
 bölümündekinin yerine kullanýlýr)
\layout Itemize


\series bold 
Conflicts:
\series default 
 Paketin çalýþmasý/iþlevini yerine getirmesi için, sistemde olmamasý gereken
 paketleri belirtir, bu örneðin ayný dosyayý iki paketin de taþýmasý durumunda
 olabilir.
 
\begin_deeper 
\layout Itemize


\series bold 
Package:
\series default 
 Olmamasý gereken paket adýný verir.
\end_deeper 
\layout Itemize


\series bold 
Provides: 
\series default 
Paketin saðladýðý bileþenleri listeler.
\begin_deeper 
\layout Itemize


\series bold 
COMAR:
\series default 
 COMAR OM bacaðý ve bu bacaðý doðrulayan betiði tarif eder.
\newline 
Örnek: <COMAR script=
\begin_inset Quotes erd
\end_inset 

interface.py
\begin_inset Quotes erd
\end_inset 

>Net.NIC</COMAR>
\end_deeper 
\layout Itemize


\series bold 
Requires:
\series default 
 Paketin çalýþmak için gerek duyduðu bileþenleri listeler.
\begin_deeper 
\layout Itemize


\series bold 
COMAR:
\series default 
 COMAR OM bacaðý baðýmlýlýklarý.
\end_deeper 
\layout Itemize


\series bold 
RuntimeDependencies
\series default 
: Pakedin çalýþabilmesi için gereken baðýmlýlýklarýn bir listesini verir.
 
\begin_deeper 
\layout Itemize


\series bold 
Dependency
\series default 
: Bir baðýmlýlýk tanýmlar.
 
\series bold 
BuildDependency
\series default 
 ile ayný yapýdadýr
\end_deeper 
\layout Itemize


\series bold 
Files
\series default 
: (*) Pakedin kurulacak dosyalarýnýn tiplerini belirlemek için kullanýlýr.
 Dosya tipleri ile ilgili bigi 
\begin_inset LatexCommand \ref{FType}

\end_inset 

 kýsmýnda verilmiþtir.
\begin_deeper 
\layout Itemize


\series bold 
Path
\series default 
 (*):
\series bold 
 
\series default 
Bir dosya/dizin yolunu tarif eder.
 Verilebilecek olan 
\series bold 
fileType
\series default 
 attribute ise path'in tipini belirtir.
 Belge, paylaþýmlý kütüphane, çalýþtýrýlabilir, vb...
 Eðer fileType verilmezse path tipi 
\begin_inset Quotes eld
\end_inset 

other
\begin_inset Quotes erd
\end_inset 

 olarak tanýmlanýr.
 Örnek:
\newline 
<Path fileType="sharedLib">/usr/lib</Path>
\end_deeper 
\layout Itemize


\series bold 
AdditionalFiles: 
\series default 
Kaynak ile gelmeyen ama paketin çalýþmasý, ek özellik kazanmasý v.s.
 için gerekli dosyalarý belirtir.
 ( 
\emph on 
örn
\emph default 
; init betikleri )
\begin_deeper 
\layout Itemize


\series bold 
AdditionalFile:
\series default 
 Files dizini altýndan alýnacak dosyayý belirtir.
 
\series bold 
target
\series default 
 attribute dosyanýn nereye konulacaðýný belirtir, zorunludur.

\series bold 
 permission 
\series default 
attribute varsa dosyanýn hangi haklarla saklanacaðýný belirtir.

\series bold 
 
\series default 
Örnek:
\newline 
<AdditionalFile target=
\begin_inset Quotes erd
\end_inset 

/etc/bash/
\begin_inset Quotes erd
\end_inset 

>bashrc</AdditionalFile>
\end_deeper 
\layout Subparagraph

History: (*) 
\series medium 
Pakete yapýlan güncellemelerin bir listesini verir.
 History altýndaki güncellemeleri belirten 
\bar under 
Update taglarýnýn mutlaka tarihe göre sýralý olmasý gerekmektedir
\bar default 
.
 En son güncelleme en üstte bulunmalýdýr.
 Çünkü en son güncellemeden alýnan Version ve Release bilgisi pakete uygulanacak
týr.
\layout Itemize


\series bold 
Update
\series default 
: (*) Bir güncellemeyi tarif eder.
 
\series bold 
release
\series default 
 (*) attribute paketin sürüm numarasý.

\series bold 
 type
\series default 
 attribute güncellemenin tipini belirtir (
\series bold 
\emph on 
Security, Bug, Enhancement, Normal
\series default 
\emph default 
 v.s).
 Eðer bu etiket tanýmlý deðilse tip 
\series bold 
\emph on 
Normal
\series default 
\emph default 
 olarak kabul edilir.
\begin_deeper 
\begin_deeper 
\layout Itemize


\series bold 
Date
\series default 
: (*) Güncellemenin tarihi.
\layout Itemize


\series bold 
Version:
\series default 
 (*) Uygulamanýn sürüm numarasý.
\layout Itemize


\series bold 
Name:
\series default 
 (*) Güncellemeyi yapan kiþinin adýdýr.
\layout Itemize


\series bold 
Email:
\series default 
 (*) Güncellemeyi yapan kiþinin e-posta adresidir.
\end_deeper 
\end_deeper 
\layout Paragraph

Örnek bir PSPEC Dosyasý
\layout LyX-Code


\size scriptsize 
<?xml version="1.0" encoding="utf-8" standalone="no"?>
\layout LyX-Code


\size scriptsize 
<!DOCTYPE PSPEC SYSTEM    "http://www.uludag.org.tr/projeler/pisi/pisi-spec.dtd">
\layout LyX-Code


\size scriptsize 
<PISI>
\layout LyX-Code


\size scriptsize 
  <Source>
\layout LyX-Code


\size scriptsize 
    <Name>popt</Name>
\layout LyX-Code


\size scriptsize 
    <Homepage>http://www.rpm.org/</Homepage>
\layout LyX-Code


\size scriptsize 
    <Packager>
\layout LyX-Code


\size scriptsize 
      <Name>Pardus Man</Name>
\layout LyX-Code


\size scriptsize 
      <Email>bilgi@uludag.org.tr</Email>
\layout LyX-Code


\size scriptsize 
    </Packager>
\layout LyX-Code


\size scriptsize 
    <License>As-Is</License>
\layout LyX-Code


\size scriptsize 
    <IsA>library:util:optparser</IsA>
\layout LyX-Code


\size scriptsize 
    <PartOf>rpm:archive</PartOf>
\layout LyX-Code


\size scriptsize 
    <Summary xml:lang=
\begin_inset Quotes erd
\end_inset 

en
\begin_inset Quotes erd
\end_inset 

>Popt command line option parser</Summary>
\layout LyX-Code


\size scriptsize 
    <Description xml:lang=
\begin_inset Quotes erd
\end_inset 

en
\begin_inset Quotes erd
\end_inset 

>Command line option parsing library.
\layout LyX-Code


\size scriptsize 
      While it is similiar to getopt(3), it contains a number of enhancements,
 including:
\layout LyX-Code


\size scriptsize 
      1) popt is fully reentrant
\layout LyX-Code


\size scriptsize 
      2) popt can parse arbitrary argv[] style arrays while getopt(2) makes
 this quite difficult
\layout LyX-Code


\size scriptsize 
      3) popt allows users to alias command line arguments
\layout LyX-Code


\size scriptsize 
      4) popt provides convience functions for parsing strings into argv[]
 style arrays
\layout LyX-Code


\size scriptsize 
    </Description>
\layout LyX-Code


\size scriptsize 
    <Archive type="targz" sha1sum="66f3c77b87a160951b180447f4a6dce68ad2f71b">ftp
://ftp.rpm.org/pub/rpm/dist/rpm-4.1.x/popt-1.7.tar.gz</Archive>
\layout LyX-Code


\size scriptsize 
    <Patches>
\layout LyX-Code


\size scriptsize 
      <Patch compressionType="gz" level="1">popt-1.7-uclibc.patch.gz</Patch>
\layout LyX-Code


\size scriptsize 
    </Patches>
\layout LyX-Code


\size scriptsize 
    <BuildDependencies>
\layout LyX-Code


\size scriptsize 
      <Dependency versionFrom="1.8">automake</Dependency>
\layout LyX-Code


\size scriptsize 
    </BuildDependencies>
\layout LyX-Code


\size scriptsize 
 </Source>
\layout LyX-Code

\layout LyX-Code


\size scriptsize 
  <Package>
\layout LyX-Code


\size scriptsize 
     <Name>popt</Name>
\layout LyX-Code


\size scriptsize 
     <RuntimeDependencies>
\layout LyX-Code


\size scriptsize 
       <Dependency>gettext</Dependency>
\layout LyX-Code


\size scriptsize 
     </RuntimeDependencies>
\layout LyX-Code


\size scriptsize 
     <Files>
\layout LyX-Code


\size scriptsize 
       <Path fileType="sharedLib">/usr/lib</Path>
\layout LyX-Code


\size scriptsize 
       <Path fileType="doc">/usr/share/doc</Path>
\layout LyX-Code


\size scriptsize 
       <Path fileType="doc">/usr/share/man</Path>
\layout LyX-Code


\size scriptsize 
       <Path fileType="localedata">/usr/share/locale</Path>
\layout LyX-Code


\size scriptsize 
       <Path fileType="header">/usr/include/popt.h</Path>
\layout LyX-Code


\size scriptsize 
     </Files>
\layout LyX-Code


\size scriptsize 
  </Package>
\layout LyX-Code

\layout LyX-Code


\size scriptsize 
  <History>
\layout LyX-Code


\size scriptsize 
      <Update release=
\begin_inset Quotes erd
\end_inset 

2
\begin_inset Quotes erd
\end_inset 

 type=
\begin_inset Quotes erd
\end_inset 

Bug
\begin_inset Quotes erd
\end_inset 

>
\layout LyX-Code


\size scriptsize 
        <Date>2005-07-01</Date>
\layout LyX-Code


\size scriptsize 
        <Version>1.7</Version>
\layout LyX-Code


\size scriptsize 
        <Comment>paths fixed.</Comment>
\layout LyX-Code


\size scriptsize 
        <Name>Barýþ Metin</Name>
\layout LyX-Code


\size scriptsize 
        <Email>baris@uludag.org.tr</Email>
\layout LyX-Code


\size scriptsize 
      </Update>
\layout LyX-Code


\size scriptsize 
      <Update release=
\begin_inset Quotes erd
\end_inset 

1
\begin_inset Quotes erd
\end_inset 

>
\layout LyX-Code


\size scriptsize 
        <Date>2005-06-10</Date>
\layout LyX-Code


\size scriptsize 
        <Version>1.7</Version>
\layout LyX-Code


\size scriptsize 
        <Comment>first release.</Comment>
\layout LyX-Code


\size scriptsize 
        <Name>Barýþ Metin</Name>
\layout LyX-Code


\size scriptsize 
        <Email>baris@uludag.org.tr</Email>
\layout LyX-Code


\size scriptsize 
      </Update>
\layout LyX-Code


\size scriptsize 
</PISI>
\layout Standard

Yukarýdaki örnek dosyada 
\emph on 
Package
\emph default 
 içerisinde tanýmlanmayan taglar 
\emph on 
Source
\emph default 
 içerisinden alýnarak kullanýlacaktýr.
 Bir kaynak paketten birden fazla ikili (binary) paket oluþturmak için 
\emph on 
Package
\emph default 
 etiketleri farklý isimler (Name) verilerek arttýrýlabilir.
 
\emph on 
Paketler
\emph default 
 
\series bold 
Files
\series default 
 içerisinde bulunan 
\series bold 
Path
\series default 
 taglarýna göre bölümlendirilecektir.
\layout Subsubsection

actions.py Dosyasý
\layout Standard

Bu dosya bir Python betiði olup, kaynaðýn kurulmasý, derlenmesi, test edilmesi,
 sisteme kurulmasý gibi iþlevleri yerine getiren fonksiyonlardan oluþur.
 
\layout Standard

Paketin oluþturulmasý sýrasýnda derleme sistemi 
\series bold 
actions.py
\series default 
 içerisindeki 3 fonksiyon adýný arar ve çalýþtýrýr; 
\series bold 
setup, build, install
\series default 
.
 Bu fonksiyonlardan install'ýn tanýmlanmasý zorunlu olmakla birlikte setup
 ve build sadece tanýmlanmýþsa çalýþtýrýlýr.
 
\layout Standard


\series bold 
actions.py
\series default 
'ler tarafýndan kullanýlmak üzere 
\series bold 
PÝSÝ
\series default 
 tarafýndan hazýr bir 
\series bold 
API
\series default 
 ActionsAPI adýnda sunulacaktýr.
\layout Paragraph

Örnek bir actions.py dosyasý:
\layout LyX-Code


\size scriptsize 
from pisi.actionsapi import gnuconfig
\layout LyX-Code


\size scriptsize 
from pisi.actionsapi import autotools
\layout LyX-Code

\layout LyX-Code


\size scriptsize 
def setup():
\layout LyX-Code


\size scriptsize 
    gnuconfig.gnuconfig_update()
\layout LyX-Code


\size scriptsize 
    autotools.configure(
\begin_inset Quotes eld
\end_inset 

--with-nls
\begin_inset Quotes erd
\end_inset 

)
\layout LyX-Code

\layout LyX-Code


\size scriptsize 
def build():
\layout LyX-Code


\size scriptsize 
    autotools.make()
\layout LyX-Code

\layout LyX-Code


\size scriptsize 
def install():
\layout LyX-Code


\size scriptsize 
    autotools.install() 
\layout Subsubsection

files Dizini
\layout Standard

Kaynak paket içerisinde bulunan files dizini kaynak arþivine uygulanacak
 yamalarý, kurulum sýrasýnda sistemin belirli bir yerine kopyalanmasý gereken
 ve paketle birlikte gelen ek dosyalarý barýndýrýr.
 Burada bulunan tüm dosyalar PSPEC içerisindeki ilgili olduklarý bölümlerde
 tanýmlanmalýdýr.
\layout Subsubsection

comar Dizini
\layout Standard

Kaynak paket içerisinde bulunan comar dizini adýndan da kolayca anlaþýlabilecek
 basit bir amaç ile oluþturulmuþtur.
 Dizin ÇOMAR'a kayýt edilecek olan betik dosyalarýnýn bulunduðu dizindir.
 ÇOMAR betikleri PSPEC içerisinde tarif edilir.
\layout Standard

Bu dizin içerisindeki dosyalar ikili paketin sisteme kurulmasý ile kullanýlabili
r olacaðý için, comar dizini içerisindeki ÇOMAR betikleri ikili pakete aynen
 kopyalanýr.
\layout Subsection

Ýkili PÝSÝ Paketi
\layout Standard


\series bold 
PÝSÝ
\series default 
 paketleri ikili bir biçimde sunulacaktýr.
 Bu bölüm paketlerin biçemini (format) ve içerdiklerini tanýmlamaktadýr.
\layout Standard


\series bold 
PÝSÝ
\series default 
 paketi, içerisinde aþaðýdaki bölümler olan bir 
\emph on 
PK-ZIP
\emph default 
 paketidir.
 Bu sayede paketler standart araçlar ile açýlabilir/eriþilebilir olacaklardýr.
\layout Itemize


\series bold 
metadata.xml:
\series default 
 
\series bold 
PSPEC
\series default 
 dosyasýndan alýnacak ve üzerine eklenecek bilgiler ile oluþturulacak Meta
 bilgisi
\layout Itemize


\series bold 
files.xml:
\series default 
 Paket içerisinde bulunan dosyalarýn bir listesi
\layout Itemize


\series bold 
comar/ dizini:
\series default 
 ÇOMAR betikleri
\layout Itemize


\series bold 
install/ dizini:
\series default 
 Paketin kurulu biçimi.
 Paketin sisteme kurulumu bu dizinin belirtilen dizine açýlýr.
\layout Standard

Alt bölümler ikili PÝSÝ paketi içerisindeki bileþenleri detaylý olarak anlatmakt
adýr.
\layout Subsubsection

metadata.xml
\layout Standard


\series bold 
Metadata
\series default 
 dosyasý bir uygulamanýn paket haline geldikten sonra yanýnda taþýyacaðý
 ve paket ile ilgili bilgileri barýndýran dosyadýr.
 
\layout Standard


\series bold 
Metadata
\series default 
 dosyasý sadece oluþturulan paket ile ilgili bilgileri tutmaktan sorumludur.
 Paket hakkýnda temel bilgi bu dosyadan alýnacaktýr.
\layout Standard

Bu bilgilerin büyük kýsmý 
\series bold 
PSPEC
\series default 
 dosyasýnýn iþlenmesi sonucu ile 
\series bold 
Metadata
\series default 
 dosyasýna yazýlmaktadýr.
 
\series bold 
Metadata PSPEC
\series default 
 dosyasýndan alýnan bilgilerin yanýnda kaynak derlendikten ve paket oluþturulduk
tan sonra alýnabilecek diðer bilgileri de içerir (paketin kurulduktan sonra
 sistemde kaplayacaðý alanýn boyutu gibi).
\layout Standard


\series bold 
Metadata
\series default 
 dosyasýnýn içeriði þöyle tanýmlanmýþtýr;
\layout Subparagraph

Source: 
\series medium 
Bu bölümdeki bilgiler 
\series default 
PSPEC
\series medium 
 dosyasýnýn 
\emph on 
Source
\emph default 
 bölümünden alýnýr.
\layout Itemize


\series bold 
Name
\layout Itemize


\series bold 
Homepage
\layout Itemize


\series bold 
Summary
\layout Itemize


\series bold 
Description
\layout Itemize


\series bold 
Packager
\begin_deeper 
\layout Itemize


\series bold 
Name
\layout Itemize


\series bold 
Email
\end_deeper 
\layout Subparagraph

Package
\layout Itemize


\series bold 
Name
\layout Itemize


\series bold 
Summary
\layout Itemize


\series bold 
Description
\layout Itemize


\series bold 
License
\layout Itemize


\series bold 
History
\begin_deeper 
\layout Itemize


\series bold 
Update
\begin_deeper 
\layout Itemize


\series bold 
Type
\layout Itemize


\series bold 
Date
\layout Itemize


\series bold 
Version
\layout Itemize


\series bold 
Release
\end_deeper 
\end_deeper 
\layout Itemize


\series bold 
Conflicts
\layout Itemize


\series bold 
Provides:
\series default 
 Paketin hangi OM bacaklarýný saðladýðýný belirtir.
\layout Itemize


\series bold 
RuntimeDependencies
\layout Itemize


\series bold 
Dependency
\layout Itemize


\series bold 
Files
\begin_deeper 
\layout Itemize


\series bold 
Path
\end_deeper 
\layout Itemize


\series bold 
Build
\series default 
: Paketin derleneme sayýsýný gösterir.
 Bu deðer derleme sistemi tarafýndan otomatik olarak hesaplanýr.
\layout Itemize


\series bold 
Distribution:
\series default 
 Paketin ait olduðu daðýtýmý belirtir (Pardus).
\layout Itemize


\series bold 
DistributionRelease:
\series default 
 Paketin ait olduðu daðýtýmýn hangi sürümü için oluþturduðunu belirtir (1.0).
\layout Itemize


\series bold 
Architecture: 
\series default 
Paketin hangi mimari için yapýldýðýný belirtir.
\layout Itemize


\series bold 
InstallSize: 
\series default 
Paketin sisteme kurulduðunda kaplayacaðý alanýn tahmini boyutunu belirtir.
\layout Standard

Yukarýda tanýmlanan 
\series bold 
Metadata
\series default 
 dosyasý, belirlenecek paket formatýnýn içinde 
\series bold 
\emph on 
XML
\series default 
\emph default 
 dosyasý olarak tutulacaktýr.
 
\series bold 
Metadata
\series default 
 XML dosyalarýnýn yapýsý 
\series bold 
PSPEC
\series default 
 dosyasý ile hemen hemen aynýdýr.
 Yalnýzca Metadata paket oluþumundan sonra elimizde olan bazý ek bilgileri
 de içerir.
 
\layout Standard

metadata.xml dosyalarý otomatik olarak PÝSÝ derleme sistemi tarafýndan oluþturulu
r ve ikili paket içerisine dahil edilir.
 Bu dosyanýn hiç bir koþulda el ile oluþturulmasý gerekmemektedir.
\layout Subsubsection

files.xml
\layout Standard

Kaynak derlendikten sonra oluþan dosyalarýn, oluþturulan pakete göre 
\series bold 
(Package)
\series default 
 sýnýflandýrýlmasý gerekmektedir.
 Tek bir kaynaktan birden fazla paket oluþturulmasý, kaynaðýn derlenmesinden
 sonra oluþan dosyalarýn sýnýflandýrýlmasý ile olur.
\layout Standard

files.xml dosyasý paket geliþtirme aracý/araçlarý ile oluþturularak paket
 içerisine yerleþtirilir.
\layout Itemize


\series bold 
Files
\begin_deeper 
\layout Itemize


\series bold 
Package: 
\series default 
Dosya serisinin hangi 
\series bold 
\emph on 
SubPackage
\series default 
\emph default 
'i oluþturduðunu belirtir.
 (örn.
 mysql-devel, mysql-client, mysql-server , mysql-doc)
\layout Itemize


\series bold 
File:
\series default 
 Pakete dahil edilecek bir dosyayý tarif eder.
\begin_deeper 
\layout Itemize


\series bold 
Path:
\series default 
 Dosyanýn, paket içerisindeki yerini belirtir.
 
\series bold 
PISI
\series default 
 gereklerinden biri paketin belirtilen konuma kurulabilmesi olduðu için
 konum bilgisi baðýmlý (rölatif) olarak verilir.
\layout Itemize


\series bold 
Type
\begin_inset LatexCommand \label{FType}

\end_inset 

:
\series default 
 Dosyanýn tipini belirtir.
 Paket sisteme kurulduðunda, veritabanýna bu tip tanýmý ile iþaretlenerek
 yerleþtirilecektir.
 Bu tip tanýmlarý þunlardan birisi olabileceði gibi boþ da býrakýlabilir:
 
\noun on 
executable, config, doc, man, info, library, data, localedata, header
\noun default 
.
\layout Itemize


\series bold 
Size: 
\series default 
Dosyanýn byte cinsinden boyutunu saklar.
\layout Itemize


\series bold 
SHA1Sum: Path
\series default 
 ile belirtilen dosyanýn SHA1 algoritmasý ile elde edilmiþ 
\emph on 
cryptographic 
\emph default 
özet deðerini saklar.
\end_deeper 
\end_deeper 
\layout Standard

files.xml dosyalarý otomatik olarak PÝSÝ derleme sistemi tarafýndan oluþturulur
 ve ikili paket içerisine dahil edilir.
 Bu dosyanýn hiç bir koþulda el ile oluþturulmasý gerekmemektedir.
\layout Subsubsection

install Dizini
\layout Standard

Ýkili paketin sisteme kurulmak üzere hazýrlanmýþ/derlenmiþ bileþenleri install/
 dizini içerisinde bulunur.
\layout Subsubsection

comar Dizini
\layout Standard

Kaynak paketten alýnan ÇOMAR betikleri comar/ dizininde bulunur ve kurulum
 sýrasýnda ÇOMAR'a kayýt edilir.
\layout Subsection

Paket Depolarý
\layout Standard

PÝSÝ için tanýmlanmýþ iki farklý paket deposu bulunmaktadýr:
\layout Itemize

Kaynak PÝSÝ Deposu (veya Kaynak Paket Deposu)
\layout Itemize

Ýkili PÝSÝ Deposu (veya Ýkili Paket Deposu)
\layout Standard

Paket depolarý ile ilgili kurallar için 
\begin_inset Quotes eld
\end_inset 

Pardus Depo Politikasý
\begin_inset Quotes erd
\end_inset 

 belgesini inceleyebilirsiniz.
\layout Subsubsection

Kaynak PÝSÝ Deposu
\layout Standard

Paketleri oluþturmak için gerekli PÝSÝ kaynak paketleri hiyerarþik bir yapýda
 bir 
\emph on 
subversion
\emph default 
 deposunda sunulmaktadýr.
 Geliþtirme iþlemleri bu depo üzerinde yapýlýr.
 Kaynak PÝSÝ deposunda paketler bileþenler altýna konumlandýrýlýrlar.
 Her kaynak paket ait olduðu bileþenin altýna yerleþtirlir.
\layout Subsubsection

Ýkili PÝSÝ Deposu
\layout Standard

Ýkili PÝSÝ paketlerinin bulundurulduðu depodur.
 Ýkili PÝSÝ Deposu da 
\begin_inset Quotes eld
\end_inset 

Pardus Depo Politikasý
\begin_inset Quotes erd
\end_inset 

 belgesinde anlatýldýðý gibi Kaynak PÝSÝ Deposu ile özdeþ bir görünüm sergiler.
 
\layout Standard

Ýkili PÝSÝ Deposu paketlerin istemciler tarafýndan ulaþýlabilir olmasý için
 bir paket indeksi saðlar.
 Paketlerin içerisinde bulunan 
\emph on 
metadata.xml
\emph default 
 dosyalarý depodaki paketlerden alýnarak ve birleþtirilerek 
\series bold 
pisi-index.xml
\series default 
 isminde bir içerik (depo içeriði) dosyasý düzenli aralýklar ile oluþturulacaktý
r.
\layout Standard

Ýçeriðinde mevcut sürümün bilgilerini içerecek bir dosya oluþturulacaktýr.
 Bu dosya daðýtýmýn tüm paketleri için þu bilgileri içerecektir;
\layout Itemize


\series bold 
Name
\layout Itemize


\series bold 
Summary
\series default 
 
\layout Itemize


\series bold 
Description
\layout Itemize


\series bold 
Version 
\layout Itemize


\series bold 
Release 
\layout Itemize


\series bold 
License
\layout Itemize


\series bold 
RuntimeDependencies
\layout Itemize


\series bold 
InstallDependencies
\layout Itemize


\series bold 
Provides 
\layout Itemize


\series bold 
History
\layout Itemize


\series bold 
Conflicts
\layout Itemize


\series bold 
PackageSize 
\layout Itemize


\series bold 
InstalledSize
\layout Standard


\series bold 
pisi-index.xml
\series default 
 dosyasýnýn biçimi XML'dir.
 Dosyanýn doðrulanmasý için kullanýlabilecek bilgi 
\emph on 
pisi-index.dtd
\emph default 
 dosyasýnda tanýmlanmýþtýr.
\layout Standard

Ýleriki sürümlerde; bu dosya deðiþtirilmeyecek ve sadece Daðýtým Sürüm deðiþtird
iði zaman yenisi oluþturulacaktýr.
 Aktif sürüm sýrasýnda tüm deðiþiklikler 
\series bold 
ChangeSet
\series default 
 olarak sunulacaktýr.
 Ýstemci bilgisayarlarca çekilecek ve baðýmlýlýk çözme, paket veritabanýný
 arama, paket kurma/kaldýrma iþlemleri bu dosyalarýn 
\series bold 
pisi.index
\series default 
 ile birleþtirilmesi yardýmý ile yapýlacaktýr.
 
\layout Standard


\series bold 
ChangeSet
\series default 
'ler 
\series bold 
pisi.index
\series default 
 dosyasýna yama olarak sunulacaklardýr.
 Kolay oluþturulan, az bant geniþliði isteyen ve efektif olmalarý açýsýndan
 içeriklerini 
\series bold 
pisi.index
\series default 
'in bir önceki revizyonlarýndan olan farklarý arttýrýmsal (incremental)
 olarak oluþturacaktýr.
\layout Standard

Kullanýcý bilgisayarýnda oluþturulacak depo veritabaný 
\series bold 
pisi.index
\series default 
 ve 
\series bold 
Changeset
\series default 
'ler yardýmý ile yaratýlacaktýr.
 Kullanýcýnýn depodaki paketlerin en güncel bilgilerini alabilmesi için
 depo veritabanýný düzenli olarak güncellemesi gerekmektedir.
 Bu iþlem bir arkaplan uygulamasý ile otomatik olarak yaptýrýlabilir.
\layout Standard

Depoya eklenecek ikili paketler geliþtiriciden alýnmayacak, 
\series bold 
PÝSÝ
\series default 
 derleme ortamý tarafýndan hazýrlanýp uygun görülen depoya yerleþtirilecektir.
 Böylece geliþtiricinin sisteminden kaynaklanabilecek olasý problemlerin
 (sürüm farklýlýklarý, sorunlu ya da güvensiz yazýlýmlar vs.) önüne geçilecektir.
\layout Standard


\series bold 
PÝSÝ
\series default 
 istemcisi birden fazla depo ile çalýþabilecektir.
 Birden fazla depo tanýmlanmasý durumunda öncelikli depo her zaman 
\series bold 
Pardus Resmi Deposu
\series default 
 olacaktýr.
 Diðer depolar eþit önceliðe sahip olacaklardýr ve kullanýcý elle belirtmediði
 sürece tüm depolarda bulunan paketler resmi depodan alýnacaktýr.
\layout Subsection

Süreçlerin Tarifi
\layout Standard

Süreç tarifi paket sisteminin en temel görevlerini, tasarýmý özetlemek amacý
 ile anlatýr.
\layout Subsubsection

Paket Oluþturmak
\layout Standard


\begin_inset Graphics
	filename images/pisi-gelistirici-small.png
	rotateOrigin center

\end_inset 


\layout Standard

Bir geliþtiricinin paket oluþturmak için izleyeceði adýmlar þöyledir;
\layout Itemize


\series bold 
Geliþtirici Grafik Arayüzü
\series default 
 ya da konsol araçlarý yardýmý ile 
\series bold 
PSPEC
\series default 
 dosyasý yukarýda anlatýlan yapýya uygun olarak oluþturulur.
 Gerekli olacak yamalar ve dosyalar yukarýda tarif edildiði gibi files/
 dizinine yerleþtirilir.
 ÇOMAR betikleri comar/ dizini altýna yerleþtirilir.
\layout Itemize

Oluþturulan 
\series bold 
PSPEC
\series default 
 dosyasý, hazýrlanan paketin derlenebilmesi için 
\series bold 
PÝSÝ
\series default 
 tarafýndan iþlenir.
 Eðer gerekli paketler sistemde mevcut deðil ise bu paketler 
\series bold 
PÝSÝ
\series default 
 tarafýndan otomatik veya kullanýcýya sorularak sisteme kurularak, sistem
 derleme iþlemine hazýr hale getirilir.
 
\layout Itemize

Oluþturulan 
\series bold 
PSPEC
\series default 
 dosyasýnýn Source bölümündeki bilgiler iþlenerek kaynak kod sisteme alýnýr
 ve doðruluðu kontrol edilir.
 Gerekli dosya ve yamalar yukarýda anlatýlan biçime uygun bir þekilde 
\series bold 
PÝSÝ 
\series default 
tarafýndan açýlýr ve gerekli yamalar koda uygulanýr.
 
\layout Itemize


\series bold 
actions.py
\series default 
\emph on 
 
\emph default 
betiði iþletilerek kaynak koddan ikili veri oluþturulur.
\layout Itemize

Geliþtirici (tercihen grafik arayüz yardýmý ile) derleme sonrasý oluþturulan
 dosyalarý, 
\series bold 
PSPEC
\series default 
 dosyasýnda tanýmlanan 
\series bold 
\emph on 
Package
\series default 
\emph default 
 bölümlerine göre sýnýflandýrýr.
 Oluþturulacak her paket için 
\series bold 
files.xml
\series default 
 dosyasý ve 
\series bold 
metadata.xml
\series default 
 dosyasý yaratýlýr.
\layout Itemize


\series bold 
PÝSÝ 
\series default 
oluþturulan dosyalarý da sisteme ekleyerek ikili paketi veya paketleri oluþturur.
\layout Itemize

Geliþtirici oluþturduðu paketleri sisteminde test eder.
\layout Itemize

Oluþturulan paket oluþturma dosyalarý (
\series bold 
PSPEC
\series default 
 dosyasý, actions.py ve dizinler) 
\series bold 
Merkezi Paket Derleme Çiftliði
\series default 
 tarafýndan derlenmek üzere 
\series bold 
Kaynak PÝSÝ
\series default 
 
\series bold 
Deposu
\series default 
'na iletilir.
\layout Itemize

Ýletilen 
\series bold 
PÝSÝ Kaynak Paketi
\series default 
 dosyasý 
\series bold 
Merkezi Paket Derleme Çiftliði
\series default 
 tarafýndan ikili paket veya paketler haline getirilir.
\layout Itemize

Oluþturulan paket veya paketler 
\series bold 
Paket Deposu
\series default 
'na yerleþtirilir.
\layout Subsubsection

Paket Kurmak 
\layout Standard


\begin_inset Graphics
	filename images/pisi-istemci-small.png
	rotateOrigin center

\end_inset 


\layout Standard

Bir istemcinin sisteme paket kurmak için izleyeceði yol þöyledir;
\layout Itemize

Sistemdeki ilgili uygulamalardan biri 
\series bold 
PÝSÝ
\series default 
'ye paket kurmasý için istekte bulunur.
\layout Itemize


\series bold 
PÝSÝ
\series default 
, paket deposundan, deponun durumu ile ilgili bilgileri (
\series bold 
ChangeSet
\series default 
ler ve kullanýcý yeni bir depo kullanmaya baþladýysa
\series bold 
 pisi-index.xml
\series default 
) alýr.
\layout Itemize

Gerekiyorsa
\series bold 
 Depo
\series default 
dan aldýðý bilgileri 
\series bold 
Depo Veritaban
\series default 
ýna yerleþtirir.
\layout Itemize


\series bold 
PÝSÝ
\series default 
 istenen paketin kurulmasý için gerekli olan bilgileri, ihtiyaç duyulan
 paketleri belirler.
 Gerekli olan paketleri 
\series bold 
Paket Deposu
\series default 
ndan çekerek sisteme kurar.
 Eðer çakýþan paketler var ise bunlarý çözer.
\layout Itemize


\series bold 
PÝSÝ
\series default 
 Kurulacak paketi 
\series bold 
Paket Deposu
\series default 
ndan çeker ve çektiði paketin doðruluðunu kontrol ederek sisteme kurar.
 Kurduðu paket ile ilgili bilgileri 
\series bold 
Kurulu Paket Veritabaný
\series default 
'na yerleþtirir.
\layout Itemize

Paketlerin yanýnda taþýdýðý 
\series bold 
CSL
\series default 
 betiklerini 
\series bold 
ÇOMAR
\series default 
'a verir.
 Kurulum için gerekli 
\begin_inset Quotes eld
\end_inset 

post install
\begin_inset Quotes erd
\end_inset 

 (kurulum sonrasý) ÇOMAR betiklerinin çalýþtýrýlmasý için ÇOMAR'a istekte
 bulunur.
\layout Subsubsection

Paket Kaldýrmak
\layout Standard

Bir istemcinin, sistemdeki bir paketi kaldýrmak için izleyeceði yol þöyledir;
\layout Itemize

Sistemdeki ilgili uygulamalardan biri 
\series bold 
PÝSÝ
\series default 
'ye paket kaldýrmak için istekte bulunur.
\layout Itemize


\series bold 
PÝSÝ
\series default 
, kendi yapýlandýrma dosyasýný iþleyerek, 
\series bold 
Kurulu Paket Veritabaný
\series default 
ndan pakete baþka bir paket tarafýndan gereksinim duyulup duyulmadýðýný
 kontrol eder.
\layout Itemize


\series bold 
PÝSÝ
\series default 
 paketi kaldýrýr.
 
\layout Itemize


\series bold 
ÇOMAR
\series default 
'a 
\begin_inset Quotes eld
\end_inset 

pre remove
\begin_inset Quotes erd
\end_inset 

 (kaldýrma öncesi) betiklerinin çalýþtýrýlmasý için istekte bulunur.
 Daha sonra ilgili 
\series bold 
ÇOMAR
\series default 
 betiklerini kaldýrmasý için silinen paket ile ilgili bilgi verir.
\layout Subsubsection

Baðýmlýlýk Çözmek
\layout Standard

PÝSÝ içerisinde kulanýlan baðýmlýlýk çözme algoritmasý, kaynak içersindeki
 detaylý belge (doc/dependency.tex) ile anlatýlmýþtýr.
\layout Standard


\series bold 
PÝSÝ
\series default 
 içerisinde paket baðýmlýlýðý, doðrudan paket isim ve sürüm numarasýna baðýmlýlý
k olarak tanýmlanmýþtýr.
 Bu yüzden paket baðýmlýlýðýnýn çözümü depo veritabanýndan baðýmlýlýðý oluþturan
 paketleri iteratif olarak çýkarmak ile sýnýrlýdýr.
\layout Standard

Paketler için tanýmlanan bir diðer baðýmlýlýk tipi ise 
\series bold 
ÇOMAR OM
\series default 
 (Object Model) bacaklarýna olan baðýmlýlýktýr.
 Bu baðýmlýlýðýn çözümü için Kurulu Paketler ve Depo veritabanlarý sorgulanarak
 ilgili 
\series bold 
OM
\series default 
 bacaðýný saðlayan bir paketin sistemde kurulu durumda olup olmadýðý bilgisi
 çýkartýlýr.
 Eðer yoksa ilgili 
\series bold 
OM
\series default 
 bacaðýný saðlayan paketlerin bir listesi sunulur.
\layout Subsection

Veritabanlarý
\layout Standard

Ýstemci makinadaki paket veritabaný aþaðýdaki bölümlere sahip olacaktýr.
 Veritabanlarý 
\series bold 
\emph on 
BerkeleyDB
\series default 
\emph default 
 veritabanlarýdýr.
 Veritabanlarý, /var/db/pisi/ altýnda bulunmaktadýr.
\layout Standard

PÝSÝ temel iþlevlerini yerine getirmek için birden fazla veri tabaný kullanýr.
\layout Standard

TODO: Veritabanlarýnýn açýklamalarý gerekiyor.
\layout Section*

Deðiþim\SpecialChar ~
Tarihi
\layout Standard

0.2: Yazarlarý yaygýn biçimde yaz, önemsiz düzenlemeler (Eray)
\layout Standard

0.1: Ýlk versiyon
\the_end
